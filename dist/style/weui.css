/*!
 * WeUI v0.3.0 (https://github.com/weui/weui)
 * Copyright 2016 Tencent, Inc.
 * Licensed under the MIT license
 */
html {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  line-height: 1.6;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}
* {
  margin: 0;
  padding: 0;
}
a img {
  border: 0;
}
a {
  text-decoration: none;
}
@font-face {
  font-weight: normal;
  font-style: normal;
  font-family: "weui";
  src: url('data:application/octet-stream;base64,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') format('truetype'), url('data:application/octet-stream;base64,') format('woff'), url('data:application/octet-stream;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBzdGFuZGFsb25lPSJubyI/Pgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CjxtZXRhZGF0YT5Db3B5cmlnaHQgKEMpIDIwMTUgYnkgb3JpZ2luYWwgYXV0aG9ycyBAIGZvbnRlbGxvLmNvbTwvbWV0YWRhdGE+CjxkZWZzPgo8Zm9udCBpZD0id2V1aSIgaG9yaXotYWR2LXg9IjEwMDAiID4KPGZvbnQtZmFjZSBmb250LWZhbWlseT0id2V1aSIgZm9udC13ZWlnaHQ9IjQwMCIgZm9udC1zdHJldGNoPSJub3JtYWwiIHVuaXRzLXBlci1lbT0iMTAwMCIgYXNjZW50PSI4NTAiIGRlc2NlbnQ9Ii0xNTAiIC8+CjxtaXNzaW5nLWdseXBoIGhvcml6LWFkdi14PSIxMDAwIiAvPgo8Z2x5cGggZ2x5cGgtbmFtZT0iY2lyY2xlIiB1bmljb2RlPSImI3hlYTAxOyIgZD0ibTUwMSA3OTFjLTI0NCAwLTQ0Mi0xOTgtNDQyLTQ0MiAwLTI0MyAxOTgtNDQxIDQ0Mi00NDFzNDQxIDE5NyA0NDEgNDQxYzAgMjQ0LTE5OCA0NDItNDQxIDQ0MnogbTAtODQ5Yy0yMjMgMC00MDQgMTgwLTQwNCA0MDMgMCAyMjMgMTgxIDQwMyA0MDQgNDAzIDIyMiAwIDQwMy0xODAgNDAzLTQwMyAwLTIyMy0xODEtNDAzLTQwMy00MDN6IiBob3Jpei1hZHYteD0iMTAwMCIgLz4KPGdseXBoIGdseXBoLW5hbWU9ImRvd25sb2FkIiB1bmljb2RlPSImI3hlYTAyOyIgZD0ibTQ5NSA3OTdjLTI0MiAwLTQ0Mi0yMDAtNDQyLTQ1MiAwLTI0MiAyMDAtNDQyIDQ0Mi00NDIgMjUyIDAgNDUyIDIwMCA0NTIgNDQyIDAgMjUyLTIwMCA0NTItNDUyIDQ1MnogbTE1Ny01MjhsLTExOC0xNTRjLTE5LTI0LTQ5LTI0LTY4IDBsLTExOCAxNTRjLTE5IDI0LTkgNDQgMjIgNDRoOTN2Mjc5YzAgMTAgOCAxOSAxOCAxOWgzOGMxMCAwIDE4LTkgMTgtMTl2LTI3OWg5M2MzMSAwIDQxLTIwIDIyLTQ0eiIgaG9yaXotYWR2LXg9IjEwMDAiIC8+CjxnbHlwaCBnbHlwaC1uYW1lPSJpbmZvIiB1bmljb2RlPSImI3hlYTAzOyIgZD0ibTQ5NiA3ODljLTIzOCAwLTQzNS0xOTctNDM1LTQ0NSAwLTIzOCAxOTctNDM1IDQzNS00MzUgMjQ4IDAgNDQ1IDE5NyA0NDUgNDM1IDAgMjQ4LTE5NyA0NDUtNDQ1IDQ0NXogbTM2LTY1NmMwLTktOC0xNy0xNy0xN2gtMjhjLTkgMC0xNyA4LTE3IDE3djI4MmMwIDUgNCA5IDkgOWg0NGM1IDAgOS00IDktOXYtMjgyeiBtLTMxIDMzOWMtMjQgMC00NCAyMC00NCA0NHMyMCA0NCA0NCA0NGMyNCAwIDQ0LTE5IDQ0LTQ0cy0yMC00NC00NC00NHoiIGhvcml6LWFkdi14PSIxMDAwIiAvPgo8Z2x5cGggZ2x5cGgtbmFtZT0ic2FmZV9zdWNjZXNzIiB1bmljb2RlPSImI3hlYTA0OyIgZD0ibTUwMCA4MTJjLTE3My0zOS0yOTktODItNDEzLTExOSAwLTEyMCAwLTIxNiAwLTMxNyAwLTI4MyAyMzEtNDM5IDQxMy00ODggMTgyIDQ5IDQxMyAyMDUgNDEzIDQ4OCAwIDEwMSAwIDE5NyAwIDMxNy0xMTQgMzctMjQwIDgwLTQxMyAxMTl6IG0yNTItMzIxbC0zMjItMzE2Yy0yLTItNS0yLTcgMGwtMTQ4IDE1M2MtMiAyLTIgNS0xIDhsMjEgMjdjMSAyIDQgMyA3IDFsMTIxLTkzYzItMSA1LTEgNyAwbDI5NSAyNDZjMiAyIDUgMiA3IDBsMjAtMTljMS0yIDEtNSAwLTd6IiBob3Jpei1hZHYteD0iMTAwMCIgLz4KPGdseXBoIGdseXBoLW5hbWU9InNhZmVfd2FybiIgdW5pY29kZT0iJiN4ZWEwNTsiIGQ9Im01MDEgNzk0Yy0xNjYtMzgtMjg3LTgwLTM5Ny0xMTQgMC0xMTYgMC0yMDggMC0zMDUgMC0yNzIgMjIzLTQyMiAzOTctNDY5IDE3NCA0NyAzOTcgMTk3IDM5NyA0NjkgMCA5NyAwIDE4OSAwIDMwNS0xMTAgMzQtMjMxIDc2LTM5NyAxMTR6IG0tMjMtMjc2aDQ2YzYgMCAxMC00IDktOWwtMTAtMjE2YzAtMy0yLTUtNS01aC0zNGMtMyAwLTUgMi01IDVsLTEwIDIxNmMwIDUgNCA5IDkgOXogbTIzLTMzNmMtMTggMC0zMyAxNS0zMyAzM3MxNSAzMyAzMyAzMyAzMy0xNSAzMy0zMy0xNS0zMy0zMy0zM3oiIGhvcml6LWFkdi14PSIxMDAwIiAvPgo8Z2x5cGggZ2x5cGgtbmFtZT0ic3VjY2VzcyIgdW5pY29kZT0iJiN4ZWEwNjsiIGQ9Im0yODggMzA1Yy03IDgtOCAyMi0yIDMwbDMgNGM3IDkgMTkgMTEgMjggNGw5OC03NWM5LTcgMjMtNyAzMSAwbDI3NiAyMjljOCA3IDIxIDcgMjktMWwtMiAyYzgtOCA4LTIwIDAtMjhsLTMwNC0yOTljLTctOC0yMC03LTI4IDFsLTEyOSAxMzN6IG02NjkgMzljMCAyNTgtMjA1IDQ2My00NjMgNDYzLTI0NiAwLTQ1MS0yMDUtNDUxLTQ2MyAwLTI0NiAyMDUtNDUxIDQ1MS00NTEgMjU4IDAgNDYzIDIwNSA0NjMgNDUxeiIgaG9yaXotYWR2LXg9IjEwMDAiIC8+CjxnbHlwaCBnbHlwaC1uYW1lPSJzdWNjZXNzX2NpcmNsZSIgdW5pY29kZT0iJiN4ZWEwNzsiIGQ9Im01MDEgNzkxYy0yNDQgMC00NDItMTk4LTQ0Mi00NDIgMC0yNDMgMTk4LTQ0MSA0NDItNDQxczQ0MSAxOTcgNDQxIDQ0MWMwIDI0NC0xOTggNDQyLTQ0MSA0NDJ6IG0wLTg0OWMtMjIzIDAtNDA0IDE4MC00MDQgNDAzIDAgMjIzIDE4MSA0MDMgNDA0IDQwMyAyMjIgMCA0MDMtMTgwIDQwMy00MDMgMC0yMjMtMTgxLTQwMy00MDMtNDAzeiBtMjE0IDU1MGwtMjY2LTIyMWMtOC03LTIyLTctMzAtMWwtOTYgNzNjLTggNy0yMCA1LTI2LTNsLTMtNGMtNi05LTUtMjIgMi0zMGwxMjUtMTI4YzctOCAxOS04IDI3LTFsMjkzIDI4OWM3IDcgOCAxOCAxIDI2LTggNy0yMCA3LTI3IDB6IG0yNiAxYzAgMCAxLTEgMS0xIDAgMCAxLTEgMS0xbC0yIDJ6IiBob3Jpei1hZHYteD0iMTAwMCIgLz4KPGdseXBoIGdseXBoLW5hbWU9InN1Y2Nlc3Nfbm9fY2lyY2xlIiB1bmljb2RlPSImI3hlYTA4OyIgZD0ibTYxIDI4NWMtMTQgMTQtMTggNDAtOSA1OGw2IDExYzggMTggMjggMjMgNDQgMTFsMjAzLTE0N2MxNi0xMSA0MS0xMSA1NiAybDU0MSA0NDZjMTUgMTIgMzkgMTEgNTMtM2wtMTMgMTNjMTQtMTQgMTQtMzcgMC01MWwtNTgzLTU5MWMtMTQtMTQtMzYtMTQtNTAtMWwtMjQ4IDI1MnoiIGhvcml6LWFkdi14PSIxMDAwIiAvPgo8Z2x5cGggZ2x5cGgtbmFtZT0id2FpdGluZyIgdW5pY29kZT0iJiN4ZWEwOTsiIGQ9Im00OTQgODAyYy0yNDQgMC00NDYtMjAyLTQ0Ni00NTggMC0yNDQgMjAyLTQ0NiA0NDYtNDQ2IDI1NiAwIDQ1OCAyMDIgNDU4IDQ0NiAwIDI1Ni0yMDIgNDU4LTQ1OCA0NTh6IG0yNTUtNTUxaC0yOTR2MzM0aDQ1di0yODloMjQ5di00NXoiIGhvcml6LWFkdi14PSIxMDAwIiAvPgo8Z2x5cGggZ2x5cGgtbmFtZT0id2FpdGluZ19jaXJjbGUiIHVuaWNvZGU9IiYjeGVhMGE7IiBkPSJtNzQxIDQ5M2MwIDAgMS0xIDEtMSAwIDAgMS0xIDEtMWwtMiAyeiBtLTI0MCAyOThjLTI0NCAwLTQ0Mi0xOTgtNDQyLTQ0MiAwLTI0MyAxOTgtNDQxIDQ0Mi00NDFzNDQxIDE5NyA0NDEgNDQxYzAgMjQ0LTE5OCA0NDItNDQxIDQ0MnogbTAtODQ5Yy0yMjMgMC00MDQgMTgwLTQwNCA0MDMgMCAyMjMgMTgxIDQwMyA0MDQgNDAzIDIyMiAwIDQwMy0xODAgNDAzLTQwMyAwLTIyMy0xODEtNDAzLTQwMy00MDN6IG0tNDYgNTYxaC0zNnYtMjUzaDI1M3YzNmgtMjE3eiIgaG9yaXotYWR2LXg9IjEwMDAiIC8+CjxnbHlwaCBnbHlwaC1uYW1lPSJ3YXJuIiB1bmljb2RlPSImI3hlYTBiOyIgZD0ibTQ5NCA4MTNjLTI1MCAwLTQ1Ny0yMDctNDU3LTQ2OSAwLTI1MCAyMDctNDU3IDQ1Ny00NTcgMjYyIDAgNDY5IDIwNyA0NjkgNDU3IDAgMjYyLTIwNyA0NjktNDY5IDQ2OXogbS0yMS0yMzZoNTRjMTAgMCAxOC04IDE4LTE4bC0xNC0zMDFjMC01LTUtMTAtMTAtMTBoLTQyYy01IDAtOSA1LTEwIDEwbC0xMyAzMDBjLTEgMTAgNyAxOSAxNyAxOXogbTI3LTQ3MmMtMjUgMC00NSAyMC00NSA0NSAwIDI1IDIwIDQ2IDQ1IDQ2IDI1IDAgNDUtMjEgNDUtNDYgMC0yNS0yMC00NS00NS00NXoiIGhvcml6LWFkdi14PSIxMDAwIiAvPgo8Z2x5cGggZ2x5cGgtbmFtZT0iaW5mb19jaXJjbGUiIHVuaWNvZGU9IiYjeGVhMGM7IiBkPSJtNTAwIDUyMmMzMiAwIDU3IDI2IDU3IDU4IDAgMzEtMjUgNTctNTcgNTctMzIgMC01Ny0yNi01Ny01NyAwLTMyIDI1LTU4IDU3LTU4eiBtNTctNTdoLTE0M3YtMjloNTd2LTMxNmgtNTd2LTI4aDIwMXYyOGgtNTh2MzQ1eiBtLTQzIDM0NGMtMjY4IDAtNDczLTIwNS00NzMtNDczIDAtMjQwIDIwNS00NDUgNDczLTQ0NSAyNDAgMCA0NDUgMjA1IDQ0NSA0NDUgMCAyNjgtMjA1IDQ3My00NDUgNDczeiBtLTE0LTg2MWMtMjIyIDAtNDAyIDE4MC00MDIgNDAyIDAgMjIyIDE4MCA0MDIgNDAyIDQwMiAyMjIgMCA0MDItMTgwIDQwMi00MDIgMC0yMjItMTgwLTQwMi00MDItNDAyeiIgaG9yaXotYWR2LXg9IjEwMDAiIC8+CjxnbHlwaCBnbHlwaC1uYW1lPSJjYW5jZWwiIHVuaWNvZGU9IiYjeGVhMGQ7IiBkPSJtNjU0IDUzMmwtMTU0LTE1NC0xNTQgMTU0LTI4LTI4IDE1NC0xNTQtMTU0LTE1NCAyOC0yOCAxNTQgMTU0IDE1NC0xNTQgMjggMjgtMTU0IDE1NCAxNTQgMTU0eiBtLTE1NCAyNTNjLTI0MCAwLTQzNS0xOTUtNDM1LTQzNSAwLTI0MCAxOTUtNDM1IDQzNS00MzUgMjQwIDAgNDM1IDE5NSA0MzUgNDM1IDAgMjQwLTE5NSA0MzUtNDM1IDQzNXogbTAtODMxYy0yMTggMC0zOTUgMTc4LTM5NSAzOTYgMCAyMTggMTc3IDM5NiAzOTUgMzk2IDIxOCAwIDM5Ni0xNzggMzk2LTM5NiAwLTIxOC0xNzgtMzk2LTM5Ni0zOTZ6IiBob3Jpei1hZHYteD0iMTAwMCIgLz4KPGdseXBoIGdseXBoLW5hbWU9InNlYXJjaCIgdW5pY29kZT0iJiN4ZWEwZTsiIGQ9Im02NTMgMTQwYy02OS01Ni0xNTctOTAtMjUzLTkwLTIyMSAwLTQwMCAxNzktNDAwIDQwMHMxNzkgNDAwIDQwMCA0MDAgNDAwLTE3OSA0MDAtNDAwYzAtOTYtMzQtMTg0LTkwLTI1M2wyOTAtMjkxLTU2LTU2LTI5MSAyOTB6IG0tMjUzLTEwYzE3NyAwIDMyMCAxNDMgMzIwIDMyMHMtMTQzIDMyMC0zMjAgMzIwLTMyMC0xNDMtMzIwLTMyMCAxNDMtMzIwIDMyMC0zMjB6IiBob3Jpei1hZHYteD0iMTAwMCIgLz4KPC9mb250Pgo8L2RlZnM+Cjwvc3ZnPg==') format('svg');
}
[class^="weui_icon_"]:before,
[class*=" weui_icon_"]:before {
  font-family: "weui";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  vertical-align: middle;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}
.weui_icon_circle:before {
  content: "\EA01";
}
/* '' */
.weui_icon_download:before {
  content: "\EA02";
}
/* '' */
.weui_icon_info:before {
  content: "\EA03";
}
/* '' */
.weui_icon_safe_success:before {
  content: "\EA04";
}
/* '' */
.weui_icon_safe_warn:before {
  content: "\EA05";
}
/* '' */
.weui_icon_success:before {
  content: "\EA06";
}
/* '' */
.weui_icon_success_circle:before {
  content: "\EA07";
}
/* '' */
.weui_icon_success_no_circle:before {
  content: "\EA08";
}
/* '' */
.weui_icon_waiting:before {
  content: "\EA09";
}
/* '' */
.weui_icon_waiting_circle:before {
  content: "\EA0A";
}
/* '' */
.weui_icon_warn:before {
  content: "\EA0B";
}
/* '' */
.weui_icon_info_circle:before {
  content: "\EA0C";
}
/* '' */
.weui_icon_cancel:before {
  content: "\EA0D";
}
/* '' */
.weui_icon_search:before {
  content: "\EA0E";
}
/* '' */
[class^="weui_icon_"]:before,
[class*=" weui_icon_"]:before {
  margin: 0;
}
.weui_icon_success:before {
  font-size: 23px;
  color: #09BB07;
}
.weui_icon_waiting:before {
  font-size: 23px;
  color: #10AEFF;
}
.weui_icon_warn:before {
  font-size: 23px;
  color: #F43530;
}
.weui_icon_info:before {
  font-size: 23px;
  color: #10AEFF;
}
.weui_icon_success_circle:before {
  font-size: 23px;
  color: #09BB07;
}
.weui_icon_success_no_circle:before {
  font-size: 23px;
  color: #09BB07;
}
.weui_icon_waiting_circle:before {
  font-size: 23px;
  color: #10AEFF;
}
.weui_icon_circle:before {
  font-size: 23px;
  color: #C9C9C9;
}
.weui_icon_download:before {
  font-size: 23px;
  color: #09BB07;
}
.weui_icon_info_circle:before {
  font-size: 23px;
  color: #09BB07;
}
.weui_icon_safe_success:before {
  color: #09BB07;
}
.weui_icon_safe_warn:before {
  color: #FFBE00;
}
.weui_icon_cancel:before {
  color: #F43530;
  font-size: 22px;
}
.weui_icon_search:before {
  color: #B2B2B2;
  font-size: 14px;
}
.weui_icon_msg:before {
  font-size: 104px;
}
.weui_icon_warn.weui_icon_msg:before {
  color: #F76260;
}
.weui_icon_safe:before {
  font-size: 104px;
}
.weui_btn.weui_btn_mini {
  line-height: 1.9;
  font-size: 14px;
  padding: 0 .75em;
  display: inline-block;
}
button.weui_btn,
input.weui_btn {
  width: 100%;
  border-width: 0;
  outline: 0;
  -webkit-appearance: none;
}
button.weui_btn:focus,
input.weui_btn:focus {
  outline: 0;
}
button.weui_btn_inline,
input.weui_btn_inline,
button.weui_btn_mini,
input.weui_btn_mini {
  width: auto;
}
/*gap between btn*/
.weui_btn + .weui_btn {
  margin-top: 15px;
}
.weui_btn.weui_btn_inline + .weui_btn.weui_btn_inline {
  margin-top: auto;
  margin-left: 15px;
}
.weui_btn_area {
  margin: 1.17647059em 15px 0.3em;
}
.weui_btn_area.weui_btn_area_inline {
  -webkit-display: -webkit-box;
  -webkit-display: -webkit-flex;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.weui_btn_area.weui_btn_area_inline .weui_btn {
  margin-top: auto;
  margin-right: 15px;
  width: 100%;
  -webkit-flex: 1;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}
.weui_btn_area.weui_btn_area_inline .weui_btn:last-child {
  margin-right: 0;
}
.weui_btn {
  position: relative;
  display: block;
  margin-left: auto;
  margin-right: auto;
  padding-left: 14px;
  padding-right: 14px;
  box-sizing: border-box;
  font-size: 18px;
  text-align: center;
  text-decoration: none;
  color: #FFFFFF;
  line-height: 2.33333333;
  border-radius: 5px;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  overflow: hidden;
}
.weui_btn:after {
  content: " ";
  width: 200%;
  height: 200%;
  position: absolute;
  top: 0;
  left: 0;
  border: 1px solid rgba(0, 0, 0, 0.2);
  -webkit-transform: scale(0.5);
          transform: scale(0.5);
  -webkit-transform-origin: 0 0;
          transform-origin: 0 0;
  box-sizing: border-box;
  border-radius: 10px;
}
.weui_btn.weui_btn_inline {
  display: inline-block;
}
.weui_btn_default {
  background-color: #F7F7F7;
  color: #454545;
}
.weui_btn_default:not(.weui_btn_disabled):visited {
  color: #454545;
}
.weui_btn_default:not(.weui_btn_disabled):active {
  color: #A1A1A1;
  background-color: #DEDEDE;
}
.weui_btn_primary {
  background-color: #04BE02;
}
.weui_btn_primary:not(.weui_btn_disabled):visited {
  color: #FFFFFF;
}
.weui_btn_primary:not(.weui_btn_disabled):active {
  color: rgba(255, 255, 255, 0.4);
  background-color: #039702;
}
.weui_btn_warn {
  background-color: #EF4F4F;
}
.weui_btn_warn:not(.weui_btn_disabled):visited {
  color: #FFFFFF;
}
.weui_btn_warn:not(.weui_btn_disabled):active {
  color: rgba(255, 255, 255, 0.4);
  background-color: #C13E3E;
}
.weui_btn_disabled {
  color: rgba(255, 255, 255, 0.6);
}
.weui_btn_disabled.weui_btn_default {
  color: #C9C9C9;
}
.weui_btn_plain_primary {
  color: #04BE02;
  border: 1px solid #04BE02;
}
button.weui_btn_plain_primary,
input.weui_btn_plain_primary {
  border-width: 1px;
  background-color: transparent;
}
.weui_btn_plain_primary:active {
  border-color: #039702;
}
.weui_btn_plain_primary:after {
  border-width: 0;
}
.weui_btn_plain_default {
  color: #5A5A5A;
  border: 1px solid #5A5A5A;
}
button.weui_btn_plain_default,
input.weui_btn_plain_default {
  border-width: 1px;
  background-color: transparent;
}
.weui_btn_plain_default:after {
  border-width: 0;
}
.weui_cell {
  position: relative;
}
.weui_cell:before {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 1px;
  border-top: 1px solid #D9D9D9;
  color: #D9D9D9;
  -webkit-transform-origin: 0 0;
          transform-origin: 0 0;
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
  left: 15px;
}
.weui_cell:first-child:before {
  display: none;
}
.weui_cells {
  margin-top: 1.17647059em;
  background-color: #FFFFFF;
  line-height: 1.41176471;
  font-size: 17px;
  overflow: hidden;
  position: relative;
}
.weui_cells:before {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 1px;
  border-top: 1px solid #D9D9D9;
  color: #D9D9D9;
  -webkit-transform-origin: 0 0;
          transform-origin: 0 0;
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
.weui_cells:after {
  content: " ";
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 1px;
  border-bottom: 1px solid #D9D9D9;
  color: #D9D9D9;
  -webkit-transform-origin: 0 100%;
          transform-origin: 0 100%;
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
.weui_cells_title {
  margin-top: .77em;
  margin-bottom: .3em;
  padding-left: 15px;
  padding-right: 15px;
  color: #888;
  font-size: 14px;
}
.weui_cells_title + .weui_cells {
  margin-top: 0;
}
.weui_cells_tips {
  margin-top: .3em;
  color: #888;
  padding-left: 15px;
  padding-right: 15px;
  font-size: 14px;
}
.weui_cell {
  padding: 10px 15px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
}
.weui_cell_ft {
  text-align: right;
  color: #888;
}
.weui_cell_primary {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
}
.weui_cells_access .weui_cell:not(.no_access) {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.weui_cells_access .weui_cell:not(.no_access):active {
  background-color: #ECECEC;
}
.weui_cells_access a.weui_cell {
  color: inherit;
}
.weui_cells_access .weui_cell_ft:after {
  content: " ";
  display: inline-block;
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  height: 6px;
  width: 6px;
  border-width: 2px 2px 0 0;
  border-color: #C8C8CD;
  border-style: solid;
  position: relative;
  top: -2px;
  top: -1px;
  margin-left: .3em;
}
.weui_check_label {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.weui_check {
  position: absolute;
  left: -9999em;
}
.weui_cells_radio .weui_cell_ft {
  padding-left: 0.35em;
}
.weui_cells_radio .weui_cell:active {
  background-color: #ECECEC;
}
.weui_cells_radio .weui_check:checked + .weui_icon_checked:before {
  content: '\EA08';
  color: #09BB07;
  font-size: 16px;
}
.weui_cells_checkbox .weui_cell_hd {
  padding-right: 0.35em;
}
.weui_cells_checkbox .weui_cell:active {
  background-color: #ECECEC;
}
.weui_cells_checkbox .weui_icon_checked:before {
  content: '\EA01';
  color: #C9C9C9;
  font-size: 23px;
  display: block;
}
.weui_cells_checkbox .weui_check:checked + .weui_icon_checked:before {
  content: '\EA06';
  color: #09BB07;
}
.weui_label {
  display: block;
  width: 3em;
}
.weui_input {
  width: 100%;
  border: 0;
  outline: 0;
  -webkit-appearance: none;
  background-color: transparent;
  font-size: inherit;
  color: inherit;
  height: 1.41176471em;
  line-height: 1.41176471;
}
.weui_input::-webkit-outer-spin-button,
.weui_input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.weui_textarea {
  display: block;
  border: 0;
  resize: none;
  width: 100%;
  color: inherit;
  font-size: 1em;
  line-height: inherit;
  outline: 0;
}
.weui_textarea_counter {
  color: #B2B2B2;
  text-align: right;
}
.weui_cell_warn .weui_textarea_counter {
  color: #E64340;
}
.weui_toptips {
  display: none;
  position: fixed;
  -webkit-transform: translateZ(0);
  width: 100%;
  top: 0;
  line-height: 2.3;
  font-size: 14px;
  text-align: center;
  color: #FFF;
  z-index: 2;
}
.weui_toptips.weui_warn {
  background-color: #E64340;
}
.weui_cells_form .weui_cell_warn {
  color: #E64340;
}
.weui_cells_form .weui_cell_warn .weui_icon_warn {
  display: inline-block;
}
.weui_cells_form .weui_cell_hd {
  padding-right: .3em;
}
.weui_cells_form .weui_cell_ft {
  font-size: 0;
}
.weui_cells_form .weui_icon_warn {
  display: none;
}
.weui_cell_select {
  padding: 0;
}
.weui_cell_select .weui_select {
  padding-right: 30px;
}
.weui_cell_select .weui_cell_bd:after {
  content: " ";
  display: inline-block;
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  height: 6px;
  width: 6px;
  border-width: 2px 2px 0 0;
  border-color: #C8C8CD;
  border-style: solid;
  position: relative;
  top: -2px;
  position: absolute;
  top: 50%;
  right: 15px;
  margin-top: -3px;
}
.weui_select {
  -webkit-appearance: none;
  border: 0;
  outline: 0;
  background-color: transparent;
  width: 100%;
  font-size: inherit;
  height: 44px;
  position: relative;
  z-index: 1;
  padding-left: 15px;
}
.weui_select_before {
  padding-right: 15px;
}
.weui_select_before .weui_select {
  width: auto;
}
.weui_select_before .weui_cell_hd {
  position: relative;
}
.weui_select_before .weui_cell_hd:after {
  content: " ";
  position: absolute;
  right: 0;
  top: 0;
  width: 1px;
  height: 100%;
  border-right: 1px solid #D9D9D9;
  color: #D9D9D9;
  -webkit-transform-origin: 0 100%;
          transform-origin: 0 100%;
  -webkit-transform: scaleX(0.5);
          transform: scaleX(0.5);
}
.weui_select_before .weui_cell_hd:before {
  content: " ";
  display: inline-block;
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  height: 6px;
  width: 6px;
  border-width: 2px 2px 0 0;
  border-color: #C8C8CD;
  border-style: solid;
  position: relative;
  top: -2px;
  position: absolute;
  top: 50%;
  right: 15px;
  margin-top: -3px;
}
.weui_select_before .weui_cell_bd {
  padding-left: 15px;
}
.weui_select_before .weui_cell_bd:after {
  display: none;
}
.weui_select_after {
  padding-left: 15px;
}
.weui_vcode {
  padding-top: 0;
  padding-right: 0;
  padding-bottom: 0;
}
.weui_vcode .weui_cell_ft img {
  margin-left: 5px;
  height: 44px;
  vertical-align: middle;
}
.weui_cell_switch {
  padding-top: 6px;
  padding-bottom: 6px;
}
.weui_switch {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  position: relative;
  width: 52px;
  height: 32px;
  border: 1px solid #DFDFDF;
  outline: 0;
  border-radius: 16px;
  box-sizing: border-box;
  background: #DFDFDF;
}
.weui_switch:before {
  content: " ";
  position: absolute;
  top: 0;
  left: 0;
  width: 50px;
  height: 30px;
  border-radius: 15px;
  background-color: #FDFDFD;
  -webkit-transition: -webkit-transform .3s;
          transition: transform .3s;
}
.weui_switch:after {
  content: " ";
  position: absolute;
  top: 0;
  left: 0;
  width: 30px;
  height: 30px;
  border-radius: 15px;
  background-color: #FFFFFF;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);
  -webkit-transition: -webkit-transform .3s;
          transition: transform .3s;
}
.weui_switch:checked {
  border-color: #04BE02;
  background-color: #04BE02;
}
.weui_switch:checked:before {
  -webkit-transform: scale(0);
          transform: scale(0);
}
.weui_switch:checked:after {
  -webkit-transform: translateX(20px);
          transform: translateX(20px);
}
.weui_uploader_hd {
  padding-top: 0;
  padding-right: 0;
  padding-left: 0;
}
.weui_uploader_hd .weui_cell_ft {
  font-size: 1em;
}
.weui_uploader_bd {
  margin-bottom: -4px;
  margin-right: -9px;
  overflow: hidden;
}
.weui_uploader_files {
  list-style: none;
}
.weui_uploader_file {
  float: left;
  margin-right: 9px;
  margin-bottom: 9px;
  width: 79px;
  height: 79px;
  background: no-repeat center center;
  background-size: cover;
}
.weui_uploader_status {
  position: relative;
}
.weui_uploader_status:before {
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.5);
}
.weui_uploader_status .weui_uploader_status_content {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  color: #FFFFFF;
}
.weui_uploader_status .weui_icon_warn {
  display: block;
}
.weui_uploader_input_wrp {
  float: left;
  position: relative;
  margin-right: 9px;
  margin-bottom: 9px;
  width: 77px;
  height: 77px;
  border: 1px solid #D9D9D9;
}
.weui_uploader_input_wrp:before,
.weui_uploader_input_wrp:after {
  content: " ";
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  background-color: #D9D9D9;
}
.weui_uploader_input_wrp:before {
  width: 2px;
  height: 39.5px;
}
.weui_uploader_input_wrp:after {
  width: 39.5px;
  height: 2px;
}
.weui_uploader_input_wrp:active {
  border-color: #999999;
}
.weui_uploader_input_wrp:active:before,
.weui_uploader_input_wrp:active:after {
  background-color: #999999;
}
.weui_uploader_input {
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.weui_msg {
  padding-top: 36px;
  text-align: center;
}
.weui_msg .weui_icon_area {
  margin-bottom: 30px;
}
.weui_msg .weui_text_area {
  margin-bottom: 25px;
  padding: 0 20px;
}
.weui_msg .weui_msg_title {
  margin-bottom: 5px;
  font-weight: 400;
  font-size: 20px;
}
.weui_msg .weui_msg_desc {
  font-size: 14px;
  color: #888;
}
.weui_msg .weui_opr_area {
  margin-bottom: 25px;
}
.weui_msg .weui_extra_area {
  margin-bottom: 15px;
  font-size: 14px;
  color: #888;
}
.weui_msg .weui_extra_area a {
  color: #61749B;
}
@media screen and (min-height: 438px) {
  .weui_extra_area {
    position: fixed;
    left: 0;
    bottom: 0;
    width: 100%;
    text-align: center;
  }
}
.weui_article {
  padding: 20px 15px;
  font-size: 15px;
}
.weui_article section {
  margin-bottom: 1.5em;
}
.weui_article h1 {
  font-size: 17px;
  font-weight: 400;
  margin-bottom: .75em;
}
.weui_article h2 {
  font-size: 16px;
  font-weight: 400;
  margin-bottom: .3em;
}
.weui_article h3 {
  font-weight: 400;
  font-size: 15px;
}
.weui_progress {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
}
.weui_progress_bar {
  background-color: #EBEBEB;
  height: 3px;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
}
.weui_progress_inner_bar {
  width: 0;
  height: 100%;
  background-color: #09BB07;
}
.weui_progress_opr {
  display: block;
  margin-left: 15px;
  font-size: 0;
}
.weui_grids {
  position: relative;
  overflow: hidden;
}
.weui_grids:before {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 1px;
  border-top: 1px solid #D9D9D9;
  color: #D9D9D9;
  -webkit-transform-origin: 0 0;
          transform-origin: 0 0;
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
.weui_grids:after {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  width: 1px;
  height: 100%;
  border-left: 1px solid #D9D9D9;
  color: #D9D9D9;
  -webkit-transform-origin: 0 0;
          transform-origin: 0 0;
  -webkit-transform: scaleX(0.5);
          transform: scaleX(0.5);
}
.weui_grid {
  position: relative;
  float: left;
  padding: 20px 10px;
  width: 33.33333333%;
  box-sizing: border-box;
}
.weui_grid:before {
  content: " ";
  position: absolute;
  right: 0;
  top: 0;
  width: 1px;
  height: 100%;
  border-right: 1px solid #D9D9D9;
  color: #D9D9D9;
  -webkit-transform-origin: 0 100%;
          transform-origin: 0 100%;
  -webkit-transform: scaleX(0.5);
          transform: scaleX(0.5);
  right: -1px;
}
.weui_grid:after {
  content: " ";
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 1px;
  border-bottom: 1px solid #D9D9D9;
  color: #D9D9D9;
  -webkit-transform-origin: 0 100%;
          transform-origin: 0 100%;
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
.weui_grid:active {
  background-color: #E4E4E4;
}
.weui_grid_icon {
  width: 28px;
  height: 28px;
  margin: 0 auto;
}
.weui_grid_icon img {
  display: block;
  width: 100%;
  height: 100%;
}
.weui_grid_icon + .weui_grid_label {
  margin-top: 5px;
}
.weui_grid_label {
  display: block;
  text-align: center;
  color: #000;
  font-size: 14px;
}
.weui_dialog {
  position: fixed;
  z-index: 13;
  width: 85%;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  background-color: #FAFAFC;
  text-align: center;
  border-radius: 3px;
}
.weui_dialog_confirm .weui_dialog .weui_dialog_hd {
  padding: 1.2em 20px .5em;
}
.weui_dialog_confirm .weui_dialog .weui_dialog_bd {
  text-align: left;
}
.weui_dialog_hd {
  padding: 1.2em 0 .5em;
}
.weui_dialog_title {
  font-weight: 400;
  font-size: 17px;
}
.weui_dialog_bd {
  padding: 0 20px;
  font-size: 15px;
  color: #888;
}
.weui_dialog_ft {
  position: relative;
  line-height: 42px;
  margin-top: 20px;
  font-size: 17px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.weui_dialog_ft a {
  display: block;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  color: #3CC51F;
  text-decoration: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.weui_dialog_ft a:active {
  background-color: #EEEEEE;
}
.weui_dialog_ft:after {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 1px;
  border-top: 1px solid #D5D5D6;
  color: #D5D5D6;
  -webkit-transform-origin: 0 0;
          transform-origin: 0 0;
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
.weui_dialog_confirm .weui_dialog_ft a {
  position: relative;
}
.weui_dialog_confirm .weui_dialog_ft a:after {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  width: 1px;
  height: 100%;
  border-left: 1px solid #D5D5D6;
  color: #D5D5D6;
  -webkit-transform-origin: 0 0;
          transform-origin: 0 0;
  -webkit-transform: scaleX(0.5);
          transform: scaleX(0.5);
}
.weui_dialog_confirm .weui_dialog_ft a:first-child:after {
  display: none;
}
.weui_btn_dialog.default {
  color: #353535;
}
.weui_btn_dialog.primary {
  color: #0BB20C;
}
@media screen and (min-width: 1024px) {
  .weui_dialog {
    width: 35%;
  }
}
.weui_toast {
  position: fixed;
  z-index: 3;
  width: 7.6em;
  min-height: 7.6em;
  top: 180px;
  left: 50%;
  margin-left: -3.8em;
  background: rgba(40, 40, 40, 0.75);
  text-align: center;
  border-radius: 5px;
  color: #FFFFFF;
}
.weui_icon_toast {
  margin: 22px 0 0;
  display: block;
}
.weui_icon_toast:before {
  content: '\EA08';
  color: #FFFFFF;
  font-size: 55px;
}
.weui_toast_content {
  margin: 0 0 15px;
}
.weui_loading_toast .weui_toast_content {
  margin-top: 64%;
  font-size: 14px;
}
.weui_loading {
  position: absolute;
  width: 0px;
  z-index: 2000000000;
  left: 50%;
  top: 38%;
}
.weui_loading_leaf {
  position: absolute;
  top: -1px;
  opacity: 0.25;
}
.weui_loading_leaf:before {
  content: " ";
  position: absolute;
  width: 8.14px;
  height: 3.08px;
  background: #d1d1d5;
  box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px;
  border-radius: 1px;
  -webkit-transform-origin: left 50% 0px;
          transform-origin: left 50% 0px;
}
.weui_loading_leaf_0 {
  -webkit-animation: opacity-60-25-0-12 1.25s linear infinite;
          animation: opacity-60-25-0-12 1.25s linear infinite;
}
.weui_loading_leaf_0:before {
  -webkit-transform: rotate(0deg) translate(7.92px, 0px);
          transform: rotate(0deg) translate(7.92px, 0px);
}
.weui_loading_leaf_1 {
  -webkit-animation: opacity-60-25-1-12 1.25s linear infinite;
          animation: opacity-60-25-1-12 1.25s linear infinite;
}
.weui_loading_leaf_1:before {
  -webkit-transform: rotate(30deg) translate(7.92px, 0px);
          transform: rotate(30deg) translate(7.92px, 0px);
}
.weui_loading_leaf_2 {
  -webkit-animation: opacity-60-25-2-12 1.25s linear infinite;
          animation: opacity-60-25-2-12 1.25s linear infinite;
}
.weui_loading_leaf_2:before {
  -webkit-transform: rotate(60deg) translate(7.92px, 0px);
          transform: rotate(60deg) translate(7.92px, 0px);
}
.weui_loading_leaf_3 {
  -webkit-animation: opacity-60-25-3-12 1.25s linear infinite;
          animation: opacity-60-25-3-12 1.25s linear infinite;
}
.weui_loading_leaf_3:before {
  -webkit-transform: rotate(90deg) translate(7.92px, 0px);
          transform: rotate(90deg) translate(7.92px, 0px);
}
.weui_loading_leaf_4 {
  -webkit-animation: opacity-60-25-4-12 1.25s linear infinite;
          animation: opacity-60-25-4-12 1.25s linear infinite;
}
.weui_loading_leaf_4:before {
  -webkit-transform: rotate(120deg) translate(7.92px, 0px);
          transform: rotate(120deg) translate(7.92px, 0px);
}
.weui_loading_leaf_5 {
  -webkit-animation: opacity-60-25-5-12 1.25s linear infinite;
          animation: opacity-60-25-5-12 1.25s linear infinite;
}
.weui_loading_leaf_5:before {
  -webkit-transform: rotate(150deg) translate(7.92px, 0px);
          transform: rotate(150deg) translate(7.92px, 0px);
}
.weui_loading_leaf_6 {
  -webkit-animation: opacity-60-25-6-12 1.25s linear infinite;
          animation: opacity-60-25-6-12 1.25s linear infinite;
}
.weui_loading_leaf_6:before {
  -webkit-transform: rotate(180deg) translate(7.92px, 0px);
          transform: rotate(180deg) translate(7.92px, 0px);
}
.weui_loading_leaf_7 {
  -webkit-animation: opacity-60-25-7-12 1.25s linear infinite;
          animation: opacity-60-25-7-12 1.25s linear infinite;
}
.weui_loading_leaf_7:before {
  -webkit-transform: rotate(210deg) translate(7.92px, 0px);
          transform: rotate(210deg) translate(7.92px, 0px);
}
.weui_loading_leaf_8 {
  -webkit-animation: opacity-60-25-8-12 1.25s linear infinite;
          animation: opacity-60-25-8-12 1.25s linear infinite;
}
.weui_loading_leaf_8:before {
  -webkit-transform: rotate(240deg) translate(7.92px, 0px);
          transform: rotate(240deg) translate(7.92px, 0px);
}
.weui_loading_leaf_9 {
  -webkit-animation: opacity-60-25-9-12 1.25s linear infinite;
          animation: opacity-60-25-9-12 1.25s linear infinite;
}
.weui_loading_leaf_9:before {
  -webkit-transform: rotate(270deg) translate(7.92px, 0px);
          transform: rotate(270deg) translate(7.92px, 0px);
}
.weui_loading_leaf_10 {
  -webkit-animation: opacity-60-25-10-12 1.25s linear infinite;
          animation: opacity-60-25-10-12 1.25s linear infinite;
}
.weui_loading_leaf_10:before {
  -webkit-transform: rotate(300deg) translate(7.92px, 0px);
          transform: rotate(300deg) translate(7.92px, 0px);
}
.weui_loading_leaf_11 {
  -webkit-animation: opacity-60-25-11-12 1.25s linear infinite;
          animation: opacity-60-25-11-12 1.25s linear infinite;
}
.weui_loading_leaf_11:before {
  -webkit-transform: rotate(330deg) translate(7.92px, 0px);
          transform: rotate(330deg) translate(7.92px, 0px);
}
@-webkit-keyframes opacity-60-25-0-12 {
  0% {
    opacity: 0.25;
  }
  0.01% {
    opacity: 0.25;
  }
  0.02% {
    opacity: 1;
  }
  60.01% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.25;
  }
}
@-webkit-keyframes opacity-60-25-1-12 {
  0% {
    opacity: 0.25;
  }
  8.34333% {
    opacity: 0.25;
  }
  8.35333% {
    opacity: 1;
  }
  68.3433% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.25;
  }
}
@-webkit-keyframes opacity-60-25-2-12 {
  0% {
    opacity: 0.25;
  }
  16.6767% {
    opacity: 0.25;
  }
  16.6867% {
    opacity: 1;
  }
  76.6767% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.25;
  }
}
@-webkit-keyframes opacity-60-25-3-12 {
  0% {
    opacity: 0.25;
  }
  25.01% {
    opacity: 0.25;
  }
  25.02% {
    opacity: 1;
  }
  85.01% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.25;
  }
}
@-webkit-keyframes opacity-60-25-4-12 {
  0% {
    opacity: 0.25;
  }
  33.3433% {
    opacity: 0.25;
  }
  33.3533% {
    opacity: 1;
  }
  93.3433% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.25;
  }
}
@-webkit-keyframes opacity-60-25-5-12 {
  0% {
    opacity: 0.270958333333333;
  }
  41.6767% {
    opacity: 0.25;
  }
  41.6867% {
    opacity: 1;
  }
  1.67667% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.270958333333333;
  }
}
@-webkit-keyframes opacity-60-25-6-12 {
  0% {
    opacity: 0.375125;
  }
  50.01% {
    opacity: 0.25;
  }
  50.02% {
    opacity: 1;
  }
  10.01% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.375125;
  }
}
@-webkit-keyframes opacity-60-25-7-12 {
  0% {
    opacity: 0.479291666666667;
  }
  58.3433% {
    opacity: 0.25;
  }
  58.3533% {
    opacity: 1;
  }
  18.3433% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.479291666666667;
  }
}
@-webkit-keyframes opacity-60-25-8-12 {
  0% {
    opacity: 0.583458333333333;
  }
  66.6767% {
    opacity: 0.25;
  }
  66.6867% {
    opacity: 1;
  }
  26.6767% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.583458333333333;
  }
}
@-webkit-keyframes opacity-60-25-9-12 {
  0% {
    opacity: 0.687625;
  }
  75.01% {
    opacity: 0.25;
  }
  75.02% {
    opacity: 1;
  }
  35.01% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.687625;
  }
}
@-webkit-keyframes opacity-60-25-10-12 {
  0% {
    opacity: 0.791791666666667;
  }
  83.3433% {
    opacity: 0.25;
  }
  83.3533% {
    opacity: 1;
  }
  43.3433% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.791791666666667;
  }
}
@-webkit-keyframes opacity-60-25-11-12 {
  0% {
    opacity: 0.895958333333333;
  }
  91.6767% {
    opacity: 0.25;
  }
  91.6867% {
    opacity: 1;
  }
  51.6767% {
    opacity: 0.25;
  }
  100% {
    opacity: 0.895958333333333;
  }
}
.weui_mask {
  position: fixed;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.6);
}
.weui_mask_transparent {
  position: fixed;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}
.weui_mask_transition {
  display: none;
  position: fixed;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: rgba(0, 0, 0, 0);
  -webkit-transition: background .3s;
          transition: background .3s;
}
.weui_fade_toggle {
  background: rgba(0, 0, 0, 0.6);
}
.weui_actionsheet {
  position: fixed;
  left: 0;
  bottom: 0;
  -webkit-transform: translate(0, 100%);
          transform: translate(0, 100%);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  z-index: 2;
  width: 100%;
  background-color: #EFEFF4;
  -webkit-transition: -webkit-transform .3s;
          transition: transform .3s;
}
.weui_actionsheet_menu {
  background-color: #FFFFFF;
}
.weui_actionsheet_action {
  margin-top: 6px;
  background-color: #FFFFFF;
}
.weui_actionsheet_cell {
  position: relative;
  padding: 10px 0;
  text-align: center;
  font-size: 18px;
}
.weui_actionsheet_cell:before {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 1px;
  border-top: 1px solid #D9D9D9;
  color: #D9D9D9;
  -webkit-transform-origin: 0 0;
          transform-origin: 0 0;
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
.weui_actionsheet_cell:active {
  background-color: #ECECEC;
}
.weui_actionsheet_cell:first-child:before {
  display: none;
}
.weui_actionsheet_toggle {
  -webkit-transform: translate(0, 0);
          transform: translate(0, 0);
}

/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndldWkuY3NzIiwiL3NvdXJjZS9zdHlsZS9iYXNlL3Jlc2V0Lmxlc3MiLCIvc291cmNlL3N0eWxlL2ljb24vd2V1aV9mb250Lmxlc3MiLCIvc291cmNlL3N0eWxlL2ljb24vd2V1aV9pY29uX2ZvbnQubGVzcyIsIi9zb3VyY2Uvc3R5bGUvd2lkZ2V0L3dldWlfYnV0dG9uL3dldWlfYnV0dG9uLmxlc3MiLCIvc291cmNlL3N0eWxlL3dpZGdldC93ZXVpX2J1dHRvbi93ZXVpX2J0bl9nbG9iYWwubGVzcyIsIi9zb3VyY2Uvc3R5bGUvYmFzZS9taXhpbi9tb2JpbGUubGVzcyIsIi9zb3VyY2Uvc3R5bGUvd2lkZ2V0L3dldWlfYnV0dG9uL3dldWlfYnRuX2RlZmF1bHQubGVzcyIsIi9zb3VyY2Uvc3R5bGUvd2lkZ2V0L3dldWlfYnV0dG9uL3dldWlfYnRuX3ByaW1hcnkubGVzcyIsIi9zb3VyY2Uvc3R5bGUvd2lkZ2V0L3dldWlfYnV0dG9uL3dldWlfYnRuX3dhcm4ubGVzcyIsIi9zb3VyY2Uvc3R5bGUvd2lkZ2V0L3dldWlfYnV0dG9uL3dldWlfYnRuX2Rpc2FibGVkLmxlc3MiLCIvc291cmNlL3N0eWxlL3dpZGdldC93ZXVpX2J1dHRvbi93ZXVpX2J0bl9wbGFpbi5sZXNzIiwiL3NvdXJjZS9zdHlsZS93aWRnZXQvd2V1aV9jZWxsL3dldWlfY2VsbF9nbG9iYWwubGVzcyIsIi9zb3VyY2Uvc3R5bGUvYmFzZS9taXhpbi9zZXRPbmVweC5sZXNzIiwiL3NvdXJjZS9zdHlsZS93aWRnZXQvd2V1aV9jZWxsL3dldWlfYWNjZXNzLmxlc3MiLCIvc291cmNlL3N0eWxlL2Jhc2UvbWl4aW4vc2V0QXJyb3cubGVzcyIsIi9zb3VyY2Uvc3R5bGUvd2lkZ2V0L3dldWlfY2VsbC93ZXVpX2NoZWNrL3dldWlfY2hlY2tfY29tbW9uLmxlc3MiLCIvc291cmNlL3N0eWxlL3dpZGdldC93ZXVpX2NlbGwvd2V1aV9jaGVjay93ZXVpX3JhZGlvLmxlc3MiLCIvc291cmNlL3N0eWxlL3dpZGdldC93ZXVpX2NlbGwvd2V1aV9jaGVjay93ZXVpX2NoZWNrYm94Lmxlc3MiLCIvc291cmNlL3N0eWxlL3dpZGdldC93ZXVpX2NlbGwvd2V1aV9mb3JtL3dldWlfZm9ybV9jb21tb24ubGVzcyIsIi9zb3VyY2Uvc3R5bGUvd2lkZ2V0L3dldWlfY2VsbC93ZXVpX2Zvcm0vd2V1aV9zZWxlY3QubGVzcyIsIi9zb3VyY2Uvc3R5bGUvd2lkZ2V0L3dldWlfY2VsbC93ZXVpX2Zvcm0vd2V1aV9zZWxlY3RfYmVmb3JlLmxlc3MiLCIvc291cmNlL3N0eWxlL3dpZGdldC93ZXVpX2NlbGwvd2V1aV9mb3JtL3dldWlfc2VsZWN0X2FmdGVyLmxlc3MiLCIvc291cmNlL3N0eWxlL3dpZGdldC93ZXVpX2NlbGwvd2V1aV9mb3JtL3dldWlfdmNvZGUubGVzcyIsIi9zb3VyY2Uvc3R5bGUvd2lkZ2V0L3dldWlfY2VsbC93ZXVpX3N3aXRjaC5sZXNzIiwiL3NvdXJjZS9zdHlsZS93aWRnZXQvd2V1aV9jZWxsL3dldWlfdXBsb2FkZXIubGVzcyIsIi9zb3VyY2Uvc3R5bGUvd2lkZ2V0L3dldWlfcGFnZS93ZXVpX21zZy5sZXNzIiwiL3NvdXJjZS9zdHlsZS93aWRnZXQvd2V1aV9wYWdlL3dldWlfYXJ0aWNsZS5sZXNzIiwiL3NvdXJjZS9zdHlsZS93aWRnZXQvd2V1aV9wcm9ncmVzcy93ZXVpX3Byb2dyZXNzLmxlc3MiLCIvc291cmNlL3N0eWxlL3dpZGdldC93ZXVpX2dyaWQvd2V1aV9ncmlkLmxlc3MiLCIvc291cmNlL3N0eWxlL3dpZGdldC93ZXVpX3RpcHMvd2V1aV9kaWFsb2cubGVzcyIsIi9zb3VyY2Uvc3R5bGUvd2lkZ2V0L3dldWlfdGlwcy93ZXVpX3RvYXN0Lmxlc3MiLCIvc291cmNlL3N0eWxlL3dpZGdldC93ZXVpX3RpcHMvd2V1aV9tYXNrLmxlc3MiLCIvc291cmNlL3N0eWxlL3dpZGdldC93ZXVpX3RpcHMvd2V1aV9hY3Rpb25zaGVldC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFB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MENEO0VBQ0ksbUJBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7Q2pDNjBDSDtBaUM1MENHO0VwQnhCQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxRQUFBO0VBQ0EsT0FBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EsOEJBQUE7RUFDQSxlQUFBO0VBQ0EsOEJBQUE7VUFBQSxzQkFBQTtFQUNBLCtCQUFBO1VBQUEsdUJBQUE7Q2J1MkNIO0FpQ3IxQ0c7RUFDSSwwQkFBQTtDakN1MUNQO0FpQ3AxQ087RUFDSSxjQUFBO0NqQ3MxQ1g7QWlDaDFDRDtFQUNJLG1DQUFBO1VBQUEsMkJBQUE7Q2pDazFDSDs7QUFFRCxxejJGQUFxejJGIiwiZmlsZSI6InN0eWxlL3dldWkuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaHRtbCB7XG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG59XG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbn1cbioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5hIGltZyB7XG4gIGJvcmRlcjogMDtcbn1cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWZhbWlseTogXCJ3ZXVpXCI7XG4gIHNyYzogdXJsKCdkYXRhOmFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtiYXNlNjQsZDA5R1JnQUJBQUFBQUE4b0FBNEFBQUFBR2V3QUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJQVXk4eUFBQUJSQUFBQUVRQUFBQldRQ2xMaFdOdFlYQUFBQUdJQUFBQU9nQUFBVXJVSUJlMlkzWjBJQUFBQWNRQUFBQUtBQUFBQ2dBQUFBQm1jR2R0QUFBQjBBQUFCWlFBQUF0d2lKQ1FXV2RoYzNBQUFBZGtBQUFBQ0FBQUFBZ0FBQUFRWjJ4NVpnQUFCMndBQUFTdUFBQUhFa29WT0hWb1pXRmtBQUFNSEFBQUFEVUFBQUEyQ0RUSVoyaG9aV0VBQUF4VUFBQUFIUUFBQUNRSGxnTmlhRzEwZUFBQURIUUFBQUFQQUFBQVBEcVlBQUJzYjJOaEFBQU1oQUFBQUNBQUFBQWdEQllOMlcxaGVIQUFBQXlrQUFBQUlBQUFBQ0FBcFF1MGJtRnRaUUFBRE1RQUFBRjZBQUFDbmIyREwwaHdiM04wQUFBT1FBQUFBSDBBQUFETk5TNGpjM0J5WlhBQUFBN0FBQUFBWlFBQUFIdmRhd09GZUp4allHUit3VGlCZ1pXQmc2bUthUThEQTBNUGhHWjh3R0RJeU1UQXdNVEF5c3lBRlFTa3VhWXdPTHhpZk1YSEhQUS9peUdLT1loaEdsQ1lFU1FIQUE1SUREQjRuR05nWUdCbWdHQVpCa1lHRUhBQjhoakJmQllHRFNETkJxUVpHWmdZR0Y3eC9mOFBVdkNLRVVTTE1VRFZBd0VqRzhPSUJ3QjFxd2ErQUFBQUFBQUFBQUFBQUFBQUFBQjRuSzFXYVhNVFJ4Q2QxV0hMTmo2Q0R4STJnVm5HY294MlZwakxDQkRHN0VvVzRCenlsZXhDamwxTGR1NkxUL3dHL1pwZWtWU1JiL3kwdkI0ZDJHQW5WVlFvU3YybTkrMU05K3VlWHBQUWtzUmVXSStrM0h3cHByWTJhV1RuU1VnM2JGcU80a1BaMlFzcFUweitMb2lDYUxYVXZ1MDRKQ0lTZ2FwMWhTV0MyUGZJMGlUalE0OHlXcllsdldwU2J1bEpkOWthRCtxdCt2YlQwRkdPM1FrbE5adWhRK3VSTGFuQ3FCSkZNdTJSa2pZdHc5VmZTVnJoNXl2TWZOVU1KWUxvSkpMR20yRU1qK1JuNDR4V0dhM0dkaHhGa1UyV0cwV0tSRE04aUNLUHNscGluMXd4UVVENW9CbFNYdmswb255RUg1RVZlNVRUQ25ISmRwcmY5eVUvNlIzT3Z5VGllb3V5SlFmK1FIWmtCM3VuSy9raTB0b0s0NmFkYkVlaGl2QjBmU2ZFSTV1VDZwL3NVVjdUYU9CMlJhWW56UWlXeWxlUVdQa0paZllQeVdyaGZNcVhQQnJWa29PY0NGb3ZjMkpmOGc2MEhrZE1pV3NteUlMdWprNklvTzZYbktIWVkvcTQrT085WFN3WElRVElPSmIxamtxNEVFWXBZYk9hSkcwRU9ZaVNza1dWMUhwSFRKenlPaTNpTFdHL1R1M29TMmUwU2FnN01aNnRoNDZ0bktqa2VEU3AwMHltVHUyazV0R1VCbEZLT2hNODV0Y0JsQi9SSksrMnNackV5cU5wYkROakpKRlFvSVZ6YVNxSVpTZVdOQVhSUEpyUm03dGhtbXZYb2tXYVBGRFBQWHBQYjI2Rm16czlwKzNBUDJ2OFozVXFwb085TUoyZURzaEtmSnAydVVuUnVuNTZobjhtOFVQV0FpcVJMVGJEbE1WRHRuNEg1ZVZqUzQ3Q2F3TnM5NTd6SytoOTlrVElwSUg0Ry9BZUw5VXBCVXlGbUZWUUM5MjAxclVzeTlScVZvdFVaT3E3SVUwclg5WnBBazA1RG4xalg4WTQvcStaR1V0TUNkL3Z4T25aRVplZXVmWWx5RFNIM0daZGorWjFhckZkZ001c3orazB5L1o5bmViWWZxRFRQTnZ6T2gxaGErdDBsTzJIT2kydy9VaW5ZMnd2YUVHVDdqc0VjaEdCWE1BR0VvR3dkUkFJMjBzSWhLMUNJR3dYRVFqYklnSmh1NFJBMkg2TVFOZ3VJeEMybDdXc21uNHFhUnc3RThzQVJZZ0Rvem51eUdWdUtsZFR5YVVTcm90R3B6YmtLWEtycEtKNFZ2MHJBLzNpa1Rlc2diVkF1a1RXL0lwSnJueFVsZU9Qcm1oNTA4UzVBbzVWZjN0elhKOFREMlcvV1BoVDhML2FtcXFrVjZ4NVpISVZlU1BRaytORTF5WVZqNjdwOHJtcVI5Zi9pNG9PYTRGK0E2VVFDMFZabGcyK21aRHdVYWZUVUExYzVSQXpHek1QMS9XNlpjM1A0ZnliR0NFTDZINzhOeFFhQzl5RFRsbEpXZTFncjlYWGoyVzV0d2Zsc0NkWWttSyt6T3RiNFl1TXpFcjdSV1lwZXo3eWVjQVZNQ3FWWWFzTlhLM2d6WHNTODVEcFRmSk1FTGNWWllPa2pjZVpJTEdCWXg0d2I3NlRJQ1JNWGJXQjJpbWNzSUc4WU13cDJPK0VRMVJ2bE9Wd2U2RjlIbzJVZjJ0WDdNZ1pGVTBRK0czMlJ0anJzMUR5VzZ5QmhDZS8xTmRBVlNGTnhiaXBnRXNqNVlacThHRmNyZHRHTWs2Z3I2allEY3V5aWc4ZlI5eDNTbzVsSVBsSUVhdEhSeit0dlVLZDFMbjl5aWh1M3p2OUNJSkJhV0wrOXI2WjRxQ1VkN1dTWlZadEExTzNHcFZUMTVyRHhhc08zYzJqN252SDJTZHkxalRkZEUvYzlMNm1WYmVEZzdsWkVPM2JISlNsVEM2bzY4TU9HNmpMemFYUTZtVmNrdDUyRHpBc01LRGZvUlViLzFmM2NmZzhWNm9LbytOSXZaMm9INlBQWWd6eUR6aC9SL1VGNk9jeFRMbUdsT2Q3bHhPZmJ0ekQyVEpkeFYyc24rTGZ3S3kxNW1icEduQkQwdzJZaDZ4YUhicktEWHluQmpvOTB0eU85QkR3c2U0SzhRQmdFOEJpOEludVdzYnpLWUR4Zk1ZY0grQno1akJvTW9mQkZuTVliRE5uRFdDSE9ReDJtY05nanprTXZtRE9Pc0NYekdFUU1vZEJ4QndHVDVnVEFEeGxEb092bU1QZ2ErWXcrSVk1OXdHK1pRNkRtRGtNRXVZdzJOZDBheWh6aXhkMEY2aHRVQlhvd1BRVEZ2ZXdPTlJVR2JLLzQ0VmhmMjhRczM4d2lLay9hcm85cFA3RUMwUDkyU0NtL21JUVUzL1ZkR2RJL1kwWGh2cTdRVXo5d3lDbVB0TXZ4bktad1Y5R3ZrdUZBOG91TnAvejk4VDdCOElhUUxZQUFRQUIvLzhBRDNpY2RaVmZiRk4xRk1kLzU1N2Y3M2R2NzEzYjNkNzIzclZyVjlhdXQ3cXRsWFdqNVU4R1BtSk1UQ0M4a2hnZmZaZkVFQlB4aVFRVkVYMXdQcGdZRElSTkU0STRCM1ZrL0prUVFqUVJFekFCRnY0RWZSQ0pZYkRLZXVlNXQ1UU1UWlBiYjI1N1RuTE85M1BPNzFlbU1MWnlDTDlCaHhuTVlkcUpXSmRrU21rSUlxRDJnYk1aYW1YQU1oVHBoYjVHQUJickRTRWE5Zm9TNmFtcE81emZtWnIwRlIzNjlSVEZsdXIxeHZLMy9QYlUxRzBlS0dOK2pTL3dPR2FvUmovVjZJbjh2NFlxY3krQlc5MEU1aGhKeFU2WW94VWIvanI1Uklnbko4ODBoV2dXZGtYZDZLNUkyTm1wYTY2bTcrenB3b3hvbm1sbk5CY25ZckVKS3dtT1poaWE5MGVTTWFTNlgrSFhtS0M2U1paaituUmZ5cWJhK0ovYWNUa0VPWGVkV2EyTjJrNnhER1BWaWgyWDhHRDZzUkNQcDAvN2hqL1gxYlNxZ3phc1FUYVdUQmFTU1V5SXh1bDJSdk10VmRkVlNHa0EyZ2J3dzI2eTVmc2pQSURETE15eTVEdmRyYlo5bXpaM3FnTTFzd3dXU0RLK0JhcFpzR3NGWCtIaG5nczdRb0FIRGdDR2Rselk3YzBpL3dTVmhDTGU1Z2hGam5FRmgvdkcwOTdaS3c4R0JoNWNnZkgwdUhmZE80ZjRHWXBlampzQkhpRmFHUGovRXQvREZOVnYrN2NpYXR1LzJRSkFQYWlqZGhUaUJHRmRzV3JsM0tmK0YzZlBiUXMxOXUzN1I5czI5M0ZaQjEza2hBN1ppR1dsTFF0VG1VMHA3NmRMOS9MNWU1ZGdKTFhwTVdoWGhiaXFlY2Y4Y05waUxmK2Y0ZzlZcE0zS2svLysza1RZOTErR0xiQVp5R21GREZlY29oMVhRYnJGZ3N1S2txazJjNm9NMWdqZ0tLUHFHMnBNUWx5YVVwSFMrMWwyU3lVdHZPWDUyUlVtQkxEWmVlQXdJbU9TcTRwNFZZaTdndks2cGZlckJEbEZNYkVxbHpIKzNLNlgyQWdMdjZ5UGxJZGRmK2w1NTZXM1JBUm9SaklLMGc2NnB1N2RuRk5KT0IyUHc1RDNpTHA2WFVZRmNoRHZ5S2lFZ2dBakdnZm9mRktVM0hVQjRoV2hrQjFUdmlzRjlJdW93Y0h2M2Y4d1BLVWNvczdsY2JzYlNrUFdLbzVRdFZzY0kxQWNONFFxMVdUWHBYQzJTOGwwOVJsaHcyak9HR2tETWtaL3hJakkwRUZOaDlrUVVDQmpOSS9SWkZ1em1zRHZNVWRzVEpwVjVPazlJQlVmQ2EycXk2eCtjOVFjaGZ0MS96VFd6d05SWFdFYnZkOUtEY3pSMi9sbnZ6ZHZ3R3ZlemRXOGtVVlpMNTE5NHQyWHRydDFqZ0Z2SW9nZG1HTStNYm91cjl3RitMc0Q0bXNEeld2d0p3QU1kK1JaYWc0RTJLaVAvWGdXUytRdFJadW9UMmQ3cmE3V1BkQmVPUEtuMG8yVENDNER0NGp1cW9Od2Y4NGphNEJ6RjBHbGpXcmNxR3A2UlBKQlRRbURucmRTS1RlVndoSUZMcTVLdktkcjNpOWNRZ2lHTmNON3djOXhVeTBtQi9FMHZzZzBGbU45Yk5CblVzZ21yV2lJQjB3Mnc1aWJrM0hiSVFCbUFBSDlIcm1QeUZXZXU0c2ZKclBaU2phN2ZmK0dEUmMzRGwzMmxqZ0g3ZkxNQ3MzbHgwbWZ3V1NnaWc1clJ0YlFzekhqblV1bmxXUGNXMnBselZ3R2JmbHdPNCsweFdvU0Q2TVpuQkdmVlY5UDdDa3J0YWc2cWxOemFzVmFwN0VwSDA1TXBOdlBkek9MUWl6T3RQVElUYzV2SGpteXdQbUNFbCtWQk1sbktUT0x5L044b1pWREd1emttL2c3YnFlTnpQai9HekV6UkR0WmlFRCtXY200VkVHRm9JOWkwSlB5d2RpZXJVZHZjWDdyS09uYVFjaXRieTdzUFlGNFltK2c3dyt1YllWSXQrNFo4NjZ2aDU1MmpKVDlDNFlwd2RBQUFIaWNZMkJrWUdBQTR1ZHRGai9qK1cyK01uQXp2d0NLTUZ5YWRyMGFRcS8xWm1ENG44WDhnamtJeU9WZ1lBS0pBZ0I5SXcwREFBQUFlSnhqWUdSZ1lBNzZuOFVReGZ5Q0FRaUFKQ01ES3VBSEFHYUJCQUFBQUFCNG5HTit3Y0RBVENZR0FLdFREY1lBQUFBQUFBQXlBRzRBcmdEdUFTNEJkZ0hVQWdRQ0xnSnlBcmdEQ0FOT0E0a0FBUUFBQUE4QU1nQUVBQUFBQUFBQ0FBQUFFQUJ6QUFBQUhndHdBQUFBQUhpY2RaRE5TZ014RklWUGJLdTFCUmVLN29TN1VTekM5QWRjcUp0Q1JWMHIxUFhZcGpOVHBwT1N5Vmk2OVIxYytISytpcDZaUmhIQkNabjczWk9iazVzQTJNY0hGRGJmQmVlR0Zlck1OcnlGSFZ4NnJsRWZlcTV6M0hodW9JMTd6OXZVSHoyM2NJNG56MjBjNEpVT3FyN0xiSTQzendwTmZIcmV3cDdhOFZ4RFV4MTZycE9QUFRkd3BFNDhiMU8vOXR6Q1dJMDh0M0dxM2tkbXViWkpGRHM1RzNWazBPdGZ5UE5hREtVa0MxTUpDeGNibTh0UVppWnpPazFOTURHTGxTNlNCeDBWYVdoTExPZFkyend4bWZTRFhwbmU2VXpiME9scDZaYS9SQVBuWmpLelppRzMza2VXMXN6MXhBV3hjOHVyYnZlM1AwWXdXR0lOaXdRUllqZ0l6cWgyR0Fmb29jK0hGenl6UWxpNXFVcVFJVVJLSlVUQkhYRzFrak1mY3M2WVpWUTFLMUp5Z0FuL0M2eW9GTno3d0JpUlV1NjJQK3AzSERPV1hrbmxJancvWUJmZnEzZU1XVlVSVmlkTWYzckw4VUxYQVZYSERzb3ViSFdxNFBaUFA4TDdsbXR6S2hQcVFYVnJSL1VLWFk1Lyt2OENFN3gyYkFBQWVKeHRqZDBLd3lBVWcwODZwLzJiWlU5WTVOUnVnaWpvaHE4L3VwN2RMVGNoSHlTaGprNk45RjhMRVRwY29IQ0Zoa0dQQVNNbXpMakJZdEVjQ2tmZmI3bWxtTjJtUXRyelhOM3UxL3BtOXJVTzM5QmNTVWFJRlYvUDd2MFhVeFppbWd1dmtCNVdYTEE2UnFialFJQm1sOWhIWGIwci9DVDZBQUZTTk5JQUFBQjRuR1B3M3NGd0lpaGlJeU5qWCtRR3hwMGNEQndNeVFVYkdWaWROakl3YUVGb0RoUjZKd01EQXljeWk1bkJaYU1LWTBkZ3hBYUhqb2lOekNrdUc5VkF2RjBjRFF5TUxBNGR5U0VSSUNXUlFMQ1JnVWRyQitQLzFnMHN2UnVaR0Z3QUI5TWl1QUFBQUE9PScpIGZvcm1hdCgndHJ1ZXR5cGUnKSwgdXJsKCdkYXRhOmFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtiYXNlNjQsQUFFQUFBQU9BSUFBQXdCZ1QxTXZNa0FwUzRVQUFBRHNBQUFBVm1OdFlYRFVJQmUyQUFBQlJBQUFBVXBqZG5RZ0FBQUFBQUFBRGZRQUFBQUtabkJuYllpUWtGa0FBQTRBQUFBTGNHZGhjM0FBQUFBUUFBQU43QUFBQUFobmJIbG1TaFU0ZFFBQUFwQUFBQWNTYUdWaFpBZzB5R2NBQUFta0FBQUFObWhvWldFSGxnTmlBQUFKM0FBQUFDUm9iWFI0T3BnQUFBQUFDZ0FBQUFBOGJHOWpZUXdXRGRrQUFBbzhBQUFBSUcxaGVIQUFwUXUwQUFBS1hBQUFBQ0J1WVcxbHZZTXZTQUFBQ253QUFBS2RjRzl6ZERVdUkzTUFBQTBjQUFBQXpYQnlaWERkYXdPRkFBQVpjQUFBQUhzQUFRUG9BWkFBQlFBSUFub0N2QUFBQUl3Q2VnSzhBQUFCNEFBeEFRSUFBQUlBQlFNQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFVR1pGWkFCQTZnSHFEZ05TLzJvQVdnTlNBSllBQUFBQkFBQUFBQUFBQUFBQUF3QUFBQU1BQUFBY0FBRUFBQUFBQUVRQUF3QUJBQUFBSEFBRUFDZ0FBQUFHQUFRQUFRQUNBQURxRHYvL0FBQUFBT29CLy84QUFCWUFBQUVBQUFBQUFBQUFBQUVHQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdBQS82UURyZ01YQUFzQUZ3QUl0UklNQmdBQ0xTc0JEZ0VISGdFWFBnRTNMZ0VETGdFblBnRTNIZ0VYRGdFQjliejVCUVg1dkx6NEJRWDV1NnprQkFUa3JLdmtCQVRrQXhjRitieTcrUVVGK0x5OCtmeTBCT09zck9NRUJPT3NyT01BQUFJQUFQK2ZBN01ESFFBTEFDRUFDTFVZRGdZQUFpMHJBUTRCQng0QkZ6NEJOeTRCQXdjR0lpOEJKalk3QVJFME5qc0JNaFlWRVRNeUZnSHZ1dnNGQmZ1Nnd2MEZCZjBsZGc4bUQzWU9EUmRkQ2dnbUNBcGRHQXdESFFYOXdycjdCUVg3dXNMOS9mV2FFaEthRXhrQkZ3Z0xDd2orNlJrQUFBTUFBUCtsQTYwREZRQUxBQmtBSWdBS3R4NGFGZzRHQUFNdEt3RU9BUWNlQVJjK0FUY3VBUU1VQmlzQklpWTFFVFkzTXhZWEp5NEJORFl5RmhRR0FmQzM5d1VGOTdlLytRVUYrWnNLQnh3SENnRUlMQWdCSHhJWkdTVVpHUU1WQmZtL3QvY0ZCZmUzdi9uOWRRY0tDZ2NCR2dnQkFRZzVBUmtsR1JrbUdRQUFBZ0FBLzVBRGtRTXNBQTBBSHdBSXRSd1FCd0FDTFNzQkRnRUhFUllFRnpZa054RXVBUk1CQmk4QkpqOEJOaDhCRmpjbE5oOEJGZ0gwZ2NoVUNRRURrWkVCQXdsVXlIdit2Z01FbEFNQ0ZRSUZlUVFEQVNjRUF4UUNBeXdlUFJ6K3c5VHdKQ1R3MUFFOUhEMyszZjdFQXdPWkF3VWJCQU5kQVFIMkF3TVRBd0FEQUFEL29nT0NBeG9BRFFBWkFDSUFDcmNlR2hNT0J3QURMU3NCRGdFSEVSNEJGejRCTnhFdUFRY3pGZzhCRkNzQklqVW5OaE1pSmpRMk1oWVVCZ0gxZThGUkNmbUxpL29JVWNHU0xnb0JDZ1VpQlFvQkh3NFRFeHdURXdNYUhUc2Evcy9MNXlNajU4c0JNUm83OXdFSTJBVUYyQWorc1JNY0V4TWNFd0FBQUFJQUFQK1ZBNzBESndBWEFDTUFDTFVoR3hVTkFpMHJBUzRCUHdFK0FSOEJGakkzSlRZeUZ5Y1dGQWNCQmlZbkpTWUFKd1lBQnhZQUZ6WUFBU0FGQVFRREJnOEhZZ2NTQmdFVUJoRUdBZ1lHL3RBR0VBWUNIQVgrL01hKy93QUZCUUVBdnNZQkJBRXhCaElHQkFjQ0JVc0ZCZVVGQmdJR0VBYisxUVlCQnF6R0FRUUZCZjc4eHI3L0FBVUZBUUFBQUFRQUFQK2tBNjRERndBTEFCY0FMUUF4QUExQUNqRXVMQ1lTREFZQUJDMHJBUTRCQng0QkZ6NEJOeTRCQXk0Qkp6NEJOeDRCRnc0QkV3VU9BUzhCSmdZUEFRWVdId0VXTWpjQlBnRW1JaGN5RlJjQjliejVCUVg1dkx6NEJRWDV1NnprQkFUa3JLdmtCQVRrSy83MkJoSUdZQVlQQlFNRUFRVjlCZzhHQVNVRkFRc1BGQUVCQXhjRitieTcrUVVGK0x5OCtmeTBCT09zck9NRUJPT3NyT01DSXQwRkFRVkpCUUlHQkFjUkJvQUdCUUVoQlE4TEJBRUJBQUFBQVFBQUFBQUR1d0trQUJjQUJyTVdFQUV0S3hNdUFUOEJQZ0VmQVJZeU53RTJGaGNuRmhRSEFRNEJKejBMQlFjR0J4a015dzBmREFJZERCNExEUXNML2JrTEhBc0JIUXNoRGdzT0JnbVRDQW9CdmdrQkN3MExIUXY5c1FvQkNnQUFBZ0FBLzVvRHVBTWlBQXNBRVFBSXRRNE1CZ0FDTFNzQkJnSUhIZ0VYTmlRM0pnQVRJUkV6RVRNQjdyejlCUVg5dk1VQkFBVUYvd0E2L3RvdCtRTWlCZjhBeGJ6OUJRWDl2TVVCQVAzZUFVNyszd0FBQkFBQS82UURyZ01YQUFNQUR3QWJBQ0VBRFVBS0hod1dFQW9FQXdBRUxTc0JNaFVYQXc0QkJ4NEJGejRCTnk0QkF5NEJKejRCTng0QkZ3NEJBeU1WTXpVakF1VUJBZks4K1FVRitieTgrQVVGK2J1czVBUUU1S3lyNUFRRTVOa2svZGtCN1FFQkFTd0YrYnk3K1FVRitMeTgrZnkwQk9Pc3JPTUVCT09zck9NQ0xmMGtBQUFBQUFNQUFQK1BBOE1ETFFBTEFCb0FJd0FLdHg4YkV3d0dBQU10S3dFR0FBY1dBQmMyQURjbUFBY3pNaFlWQXhRR0t3RW1Kd01tTmhNaUpqUTJNaFlVQmdIdXdmNzlCUVVCQThISkFRY0ZCZjc1M2pZSUNnNEdCQ29JQWcwQkNpTVRHaG9tR2hvRExRWCsrY25CL3YwRkJRRUR3Y2tCQitjS0NQN1RCQVlCQ1FFc0NBditLQm9tR2hvbUdnQUFCQUFBLzVNRHZ3TXBBQWdBRWdBZUFDb0FEVUFLSlI4WkV3OEpCQUFFTFNzQlBnRTBKaUlHRkJZWEl4VXpFU01WTXpVakF3WUFCeFlFRno0Qk55WUNBeTRCSno0Qk54NEJGdzRCQWZRWkh4OHlIeDlTanprNXlUb3J6Zjc0QkFRQkNNMjUvd1VGLzhlcjR3UUU0NnVyNHdRRTR3SUtBU0F4SUNBeElEb2Qvc1FjSEFLeEJQNzR6Ym4vQlFYL3VjMEJDUHluQk9PcnErTUVCT09ycStNQUFBTUFBUCtyQTZjREVRQUxBQmNBSXdBS3R4NFlFZ3dHQUFNdEt3RUhKd2NYQnhjM0Z6Y25Od01PQVFjZUFSYytBVGN1QVFNdUFTYytBVGNlQVJjT0FRS09tcG9jbXBvY21wb2NtcHEydWZVRkJmVzV1ZlVGQmZXNXFOOEVCTitvcU9BRUJPQUNGSnFhSEpxYUhKcWFISnFhQVJrRjlibTU5UVVGOWJtNTlmekdCT0NvcU9BRUJPQ29xT0FBQWdBQS8yb0Q2QU5TQUJFQUhRQUl0UmdTRVFrQ0xTc2xEZ0VqTGdFblBnRTNIZ0VYRkFZSEFRY0JQZ0UzTGdFbkRnRUhIZ0VDalRTQlNLcmlCQVRpcXFyaUJEQXFBU0k0L2VDSXRRTUR0WWlJdFFNRHRZd3FNQVRpcXFyaUJBVGlxa2lCTlA3ZE9BRVlBN1dJaUxVREE3V0lpTFVBQUFBQUFRQUFBQUVBQU9lR2ZuRmZEenoxQUFzRDZBQUFBQURTbHRkN0FBQUFBTktXclVzQUFQOXFBK2dEVWdBQUFBZ0FBZ0FBQUFBQUFBQUJBQUFEVXY5cUFGb0Q2QUFBQUFBRDZBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUR3UG9BQUFENkFBQUErZ0FBQVBvQUFBRDZBQUFBK2dBQUFQb0FBQUQ2QUFBQStnQUFBUG9BQUFENkFBQUErZ0FBQVBvQUFBRDZBQUFBK2dBQUFBQUFBQUFNZ0J1QUs0QTdnRXVBWFlCMUFJRUFpNENjZ0s0QXdnRFRnT0pBQUVBQUFBUEFESUFCQUFBQUFBQUFnQUFBQkFBY3dBQUFCNExjQUFBQUFBQUFBQVNBTjRBQVFBQUFBQUFBQUExQUFBQUFRQUFBQUFBQVFBRUFEVUFBUUFBQUFBQUFnQUhBRGtBQVFBQUFBQUFBd0FFQUVBQUFRQUFBQUFBQkFBRUFFUUFBUUFBQUFBQUJRQUxBRWdBQVFBQUFBQUFCZ0FFQUZNQUFRQUFBQUFBQ2dBckFGY0FBUUFBQUFBQUN3QVRBSUlBQXdBQkJBa0FBQUJxQUpVQUF3QUJCQWtBQVFBSUFQOEFBd0FCQkFrQUFnQU9BUWNBQXdBQkJBa0FBd0FJQVJVQUF3QUJCQWtBQkFBSUFSMEFBd0FCQkFrQUJRQVdBU1VBQXdBQkJBa0FCZ0FJQVRzQUF3QUJCQWtBQ2dCV0FVTUFBd0FCQkFrQUN3QW1BWmxEYjNCNWNtbG5hSFFnS0VNcElESXdNVFVnWW5rZ2IzSnBaMmx1WVd3Z1lYVjBhRzl5Y3lCQUlHWnZiblJsYkd4dkxtTnZiWGRsZFdsU1pXZDFiR0Z5ZDJWMWFYZGxkV2xXWlhKemFXOXVJREV1TUhkbGRXbEhaVzVsY21GMFpXUWdZbmtnYzNabk1uUjBaaUJtY205dElFWnZiblJsYkd4dklIQnliMnBsWTNRdWFIUjBjRG92TDJadmJuUmxiR3h2TG1OdmJRQkRBRzhBY0FCNUFISUFhUUJuQUdnQWRBQWdBQ2dBUXdBcEFDQUFNZ0F3QURFQU5RQWdBR0lBZVFBZ0FHOEFjZ0JwQUdjQWFRQnVBR0VBYkFBZ0FHRUFkUUIwQUdnQWJ3QnlBSE1BSUFCQUFDQUFaZ0J2QUc0QWRBQmxBR3dBYkFCdkFDNEFZd0J2QUcwQWR3QmxBSFVBYVFCU0FHVUFad0IxQUd3QVlRQnlBSGNBWlFCMUFHa0Fkd0JsQUhVQWFRQldBR1VBY2dCekFHa0Fid0J1QUNBQU1RQXVBREFBZHdCbEFIVUFhUUJIQUdVQWJnQmxBSElBWVFCMEFHVUFaQUFnQUdJQWVRQWdBSE1BZGdCbkFESUFkQUIwQUdZQUlBQm1BSElBYndCdEFDQUFSZ0J2QUc0QWRBQmxBR3dBYkFCdkFDQUFjQUJ5QUc4QWFnQmxBR01BZEFBdUFHZ0FkQUIwQUhBQU9nQXZBQzhBWmdCdkFHNEFkQUJsQUd3QWJBQnZBQzRBWXdCdkFHMEFBQUFBQWdBQUFBQUFBQUFLQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVBBQUFCQWdFREFRUUJCUUVHQVFjQkNBRUpBUW9CQ3dFTUFRMEJEZ0VQQm1OcGNtTnNaUWhrYjNkdWJHOWhaQVJwYm1adkRITmhabVZmYzNWalkyVnpjd2x6WVdabFgzZGhjbTRIYzNWalkyVnpjdzV6ZFdOalpYTnpYMk5wY21Oc1pSRnpkV05qWlhOelgyNXZYMk5wY21Oc1pRZDNZV2wwYVc1bkRuZGhhWFJwYm1kZlkybHlZMnhsQkhkaGNtNExhVzVtYjE5amFYSmpiR1VHWTJGdVkyVnNCbk5sWVhKamFBQUFBQUFBQUFFQUFmLy9BQThBQUFBQUFBQUFBQUFBQUFDd0FDd2dzQUJWV0VWWklDQkx1QUFPVVV1d0JsTmFXTEEwRzdBb1dXQm1JSXBWV0xBQ0pXRzVDQUFJQUdOakkySWJJU0d3QUZtd0FFTWpSTElBQVFCRFlFSXRzQUVzc0NCZ1ppMndBaXdnWkNDd3dGQ3dCQ1phc2lnQkNrTkZZMFZTVzFnaEl5RWJpbGdnc0ZCUVdDR3dRRmtiSUxBNFVGZ2hzRGhaV1NDeEFRcERSV05GWVdTd0tGQllJYkVCQ2tORlkwVWdzREJRV0NHd01Ga2JJTERBVUZnZ1ppQ0tpbUVnc0FwUVdHQWJJTEFnVUZnaHNBcGdHeUN3TmxCWUliQTJZQnRnV1ZsWkc3QUJLMWxaSTdBQVVGaGxXVmt0c0FNc0lFVWdzQVFsWVdRZ3NBVkRVRml3QlNOQ3NBWWpRaHNoSVZtd0FXQXRzQVFzSXlFaklTQmtzUVZpUWlDd0JpTkNzUUVLUTBWanNRRUtRN0FBWUVWanNBTXFJU0N3QmtNZ2lpQ0tzQUVyc1RBRkpiQUVKbEZZWUZBYllWSlpXQ05aSVNDd1FGTllzQUVyR3lHd1FGa2pzQUJRV0dWWkxiQUZMTEFIUXl1eUFBSUFRMkJDTGJBR0xMQUhJMElqSUxBQUkwSmhzQUppWnJBQlk3QUJZTEFGS2kyd0J5d2dJRVVnc0F0RFk3Z0VBR0lnc0FCUVdMQkFZRmxtc0FGallFU3dBV0F0c0Fnc3NnY0xBRU5GUWlvaHNnQUJBRU5nUWkyd0NTeXdBRU1qUkxJQUFRQkRZRUl0c0Fvc0lDQkZJTEFCS3lPd0FFT3dCQ1ZnSUVXS0kyRWdaQ0N3SUZCWUliQUFHN0F3VUZpd0lCdXdRRmxaSTdBQVVGaGxXYkFESlNOaFJFU3dBV0F0c0Fzc0lDQkZJTEFCS3lPd0FFT3dCQ1ZnSUVXS0kyRWdaTEFrVUZpd0FCdXdRRmtqc0FCUVdHVlpzQU1sSTJGRVJMQUJZQzJ3REN3Z3NBQWpRcklMQ2dORldDRWJJeUZaS2lFdHNBMHNzUUlDUmJCa1lVUXRzQTRzc0FGZ0lDQ3dERU5Lc0FCUVdDQ3dEQ05DV2JBTlEwcXdBRkpZSUxBTkkwSlpMYkFQTENDd0VHSm1zQUZqSUxnRUFHT0tJMkd3RGtOZ0lJcGdJTEFPSTBJakxiQVFMRXRVV0xFRVpFUlpKTEFOWlNONExiQVJMRXRSV0V0VFdMRUVaRVJaR3lGWkpMQVRaU040TGJBU0xMRUFEME5WV0xFUEQwT3dBV0ZDc0E4cldiQUFRN0FDSlVLeERBSWxRckVOQWlWQ3NBRVdJeUN3QXlWUVdMRUJBRU5nc0FRbFFvcUtJSW9qWWJBT0tpRWpzQUZoSUlvalliQU9LaUVic1FFQVEyQ3dBaVZDc0FJbFliQU9LaUZac0F4RFI3QU5RMGRnc0FKaUlMQUFVRml3UUdCWlpyQUJZeUN3QzBOanVBUUFZaUN3QUZCWXNFQmdXV2F3QVdOZ3NRQUFFeU5Fc0FGRHNBQStzZ0VCQVVOZ1FpMndFeXdBc1FBQ1JWUllzQThqUWlCRnNBc2pRckFLSTdBQVlFSWdZTEFCWWJVUUVBRUFEZ0JDUW9wZ3NSSUdLN0J5S3hzaVdTMndGQ3l4QUJNckxiQVZMTEVCRXlzdHNCWXNzUUlUS3kyd0Z5eXhBeE1yTGJBWUxMRUVFeXN0c0Jrc3NRVVRLeTJ3R2l5eEJoTXJMYkFiTExFSEV5c3RzQndzc1FnVEt5MndIU3l4Q1JNckxiQWVMQUN3RFN1eEFBSkZWRml3RHlOQ0lFV3dDeU5Dc0FvanNBQmdRaUJnc0FGaHRSQVFBUUFPQUVKQ2ltQ3hFZ1lyc0hJckd5SlpMYkFmTExFQUhpc3RzQ0Fzc1FFZUt5MndJU3l4QWg0ckxiQWlMTEVESGlzdHNDTXNzUVFlS3kyd0pDeXhCUjRyTGJBbExMRUdIaXN0c0NZc3NRY2VLeTJ3Snl5eENCNHJMYkFvTExFSkhpc3RzQ2tzSUR5d0FXQXRzQ29zSUdDd0VHQWdReU93QVdCRHNBSWxZYkFCWUxBcEtpRXRzQ3Nzc0NvcnNDb3FMYkFzTENBZ1J5QWdzQXREWTdnRUFHSWdzQUJRV0xCQVlGbG1zQUZqWUNOaE9DTWdpbFZZSUVjZ0lMQUxRMk80QkFCaUlMQUFVRml3UUdCWlpyQUJZMkFqWVRnYklWa3RzQzBzQUxFQUFrVlVXTEFCRnJBc0tyQUJGVEFiSWxrdHNDNHNBTEFOSzdFQUFrVlVXTEFCRnJBc0tyQUJGVEFiSWxrdHNDOHNJRFd3QVdBdHNEQXNBTEFCUldPNEJBQmlJTEFBVUZpd1FHQlpackFCWTdBQks3QUxRMk80QkFCaUlMQUFVRml3UUdCWlpyQUJZN0FCSzdBQUZyUUFBQUFBQUVRK0l6aXhMd0VWS2kyd01Td2dQQ0JISUxBTFEyTzRCQUJpSUxBQVVGaXdRR0JaWnJBQlkyQ3dBRU5oT0Myd01pd3VGend0c0RNc0lEd2dSeUN3QzBOanVBUUFZaUN3QUZCWXNFQmdXV2F3QVdOZ3NBQkRZYkFCUTJNNExiQTBMTEVDQUJZbElDNGdSN0FBSTBLd0FpVkppb3BISTBjallTQllZaHNoV2JBQkkwS3lNd0VCRlJRcUxiQTFMTEFBRnJBRUpiQUVKVWNqUnlOaHNBbERLMldLTGlNZ0lEeUtPQzJ3Tml5d0FCYXdCQ1d3QkNVZ0xrY2pSeU5oSUxBRUkwS3dDVU1ySUxCZ1VGZ2dzRUJSV0xNQ0lBTWdHN01DSmdNYVdVSkNJeUN3Q0VNZ2lpTkhJMGNqWVNOR1lMQUVRN0FDWWlDd0FGQllzRUJnV1dhd0FXTmdJTEFCS3lDS2ltRWdzQUpEWUdRanNBTkRZV1JRV0xBQ1EyRWJzQU5EWUZtd0F5V3dBbUlnc0FCUVdMQkFZRmxtc0FGallTTWdJTEFFSmlOR1lUZ2JJN0FJUTBhd0FpV3dDRU5ISTBjallXQWdzQVJEc0FKaUlMQUFVRml3UUdCWlpyQUJZMkFqSUxBQkt5T3dCRU5nc0FFcnNBVWxZYkFGSmJBQ1lpQ3dBRkJZc0VCZ1dXYXdBV093QkNaaElMQUVKV0JrSTdBREpXQmtVRmdoR3lNaFdTTWdJTEFFSmlOR1lUaFpMYkEzTExBQUZpQWdJTEFGSmlBdVJ5TkhJMkVqUERndHNEZ3NzQUFXSUxBSUkwSWdJQ0JHSTBld0FTc2pZVGd0c0Rrc3NBQVdzQU1sc0FJbFJ5TkhJMkd3QUZSWUxpQThJeUVic0FJbHNBSWxSeU5ISTJFZ3NBVWxzQVFsUnlOSEkyR3dCaVd3QlNWSnNBSWxZYmtJQUFnQVkyTWpJRmhpR3lGWlk3Z0VBR0lnc0FCUVdMQkFZRmxtc0FGallDTXVJeUFnUElvNEl5RlpMYkE2TExBQUZpQ3dDRU1nTGtjalJ5TmhJR0N3SUdCbXNBSmlJTEFBVUZpd1FHQlpackFCWXlNZ0lEeUtPQzJ3T3l3aklDNUdzQUlsUmxKWUlEeFpMckVyQVJRckxiQThMQ01nTGthd0FpVkdVRmdnUEZrdXNTc0JGQ3N0c0Qwc0l5QXVSckFDSlVaU1dDQThXU01nTGthd0FpVkdVRmdnUEZrdXNTc0JGQ3N0c0Q0c3NEVXJJeUF1UnJBQ0pVWlNXQ0E4V1M2eEt3RVVLeTJ3UHl5d05pdUtJQ0E4c0FRalFvbzRJeUF1UnJBQ0pVWlNXQ0E4V1M2eEt3RVVLN0FFUXk2d0t5c3RzRUFzc0FBV3NBUWxzQVFtSUM1SEkwY2pZYkFKUXlzaklEd2dMaU00c1NzQkZDc3RzRUVzc1FnRUpVS3dBQmF3QkNXd0JDVWdMa2NqUnlOaElMQUVJMEt3Q1VNcklMQmdVRmdnc0VCUldMTUNJQU1nRzdNQ0pnTWFXVUpDSXlCSHNBUkRzQUppSUxBQVVGaXdRR0JaWnJBQlkyQWdzQUVySUlxS1lTQ3dBa05nWkNPd0EwTmhaRkJZc0FKRFlSdXdBME5nV2JBREpiQUNZaUN3QUZCWXNFQmdXV2F3QVdOaHNBSWxSbUU0SXlBOEl6Z2JJU0FnUmlOSHNBRXJJMkU0SVZteEt3RVVLeTJ3UWl5d05Tc3VzU3NCRkNzdHNFTXNzRFlySVNNZ0lEeXdCQ05DSXppeEt3RVVLN0FFUXk2d0t5c3RzRVFzc0FBVklFZXdBQ05Dc2dBQkFSVVVFeTZ3TVNvdHNFVXNzQUFWSUVld0FDTkNzZ0FCQVJVVUV5NndNU290c0VZc3NRQUJGQk93TWlvdHNFY3NzRFFxTGJCSUxMQUFGa1VqSUM0Z1Jvb2pZVGl4S3dFVUt5MndTU3l3Q0NOQ3NFZ3JMYkJLTExJQUFFRXJMYkJMTExJQUFVRXJMYkJNTExJQkFFRXJMYkJOTExJQkFVRXJMYkJPTExJQUFFSXJMYkJQTExJQUFVSXJMYkJRTExJQkFFSXJMYkJSTExJQkFVSXJMYkJTTExJQUFENHJMYkJUTExJQUFUNHJMYkJVTExJQkFENHJMYkJWTExJQkFUNHJMYkJXTExJQUFFQXJMYkJYTExJQUFVQXJMYkJZTExJQkFFQXJMYkJaTExJQkFVQXJMYkJhTExJQUFFTXJMYkJiTExJQUFVTXJMYkJjTExJQkFFTXJMYkJkTExJQkFVTXJMYkJlTExJQUFEOHJMYkJmTExJQUFUOHJMYkJnTExJQkFEOHJMYkJoTExJQkFUOHJMYkJpTExBM0t5NnhLd0VVS3kyd1l5eXdOeXV3T3lzdHNHUXNzRGNyc0R3ckxiQmxMTEFBRnJBM0s3QTlLeTJ3Wml5d09Dc3VzU3NCRkNzdHNHY3NzRGdyc0RzckxiQm9MTEE0SzdBOEt5MndhU3l3T0N1d1BTc3RzR29zc0RrckxyRXJBUlFyTGJCckxMQTVLN0E3S3kyd2JDeXdPU3V3UENzdHNHMHNzRGtyc0QwckxiQnVMTEE2S3k2eEt3RVVLeTJ3Ynl5d09pdXdPeXN0c0hBc3NEb3JzRHdyTGJCeExMQTZLN0E5S3kyd2NpeXpDUVFDQTBWWUlSc2pJVmxDSzdBSVpiQURKRkI0c0FFVk1DMEFTN2dBeUZKWXNRRUJqbG13QWJrSUFBZ0FZM0N4QUFWQ3NRQUFLckVBQlVLeEFBZ3FzUUFGUXJFQUNDcXhBQVZDdVFBQUFBa3FzUUFGUXJrQUFBQUpLckVEQUVTeEpBR0lVVml3UUloWXNRTmtSTEVtQVloUldMb0lnQUFCQkVDSVkxUllzUU1BUkZsWldWbXhBQXdxdUFIL2hiQUVqYkVDQUVRQScpIGZvcm1hdCgnd29mZicpLCB1cmwoJ2RhdGE6YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtO2Jhc2U2NCxQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJ6ZEdGdVpHRnNiMjVsUFNKdWJ5SS9QZ284SVVSUFExUlpVRVVnYzNabklGQlZRa3hKUXlBaUxTOHZWek5ETHk5RVZFUWdVMVpISURFdU1TOHZSVTRpSUNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk5SGNtRndhR2xqY3k5VFZrY3ZNUzR4TDBSVVJDOXpkbWN4TVM1a2RHUWlQZ284YzNabklIaHRiRzV6UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnlJK0NqeHRaWFJoWkdGMFlUNURiM0I1Y21sbmFIUWdLRU1wSURJd01UVWdZbmtnYjNKcFoybHVZV3dnWVhWMGFHOXljeUJBSUdadmJuUmxiR3h2TG1OdmJUd3ZiV1YwWVdSaGRHRStDanhrWldaelBnbzhabTl1ZENCcFpEMGlkMlYxYVNJZ2FHOXlhWG90WVdSMkxYZzlJakV3TURBaUlENEtQR1p2Ym5RdFptRmpaU0JtYjI1MExXWmhiV2xzZVQwaWQyVjFhU0lnWm05dWRDMTNaV2xuYUhROUlqUXdNQ0lnWm05dWRDMXpkSEpsZEdOb1BTSnViM0p0WVd3aUlIVnVhWFJ6TFhCbGNpMWxiVDBpTVRBd01DSWdZWE5qWlc1MFBTSTROVEFpSUdSbGMyTmxiblE5SWkweE5UQWlJQzgrQ2p4dGFYTnphVzVuTFdkc2VYQm9JR2h2Y21sNkxXRmtkaTE0UFNJeE1EQXdJaUF2UGdvOFoyeDVjR2dnWjJ4NWNHZ3RibUZ0WlQwaVkybHlZMnhsSWlCMWJtbGpiMlJsUFNJbUkzaGxZVEF4T3lJZ1pEMGliVFV3TVNBM09URmpMVEkwTkNBd0xUUTBNaTB4T1RndE5EUXlMVFEwTWlBd0xUSTBNeUF4T1RndE5EUXhJRFEwTWkwME5ERnpORFF4SURFNU55QTBOREVnTkRReFl6QWdNalEwTFRFNU9DQTBOREl0TkRReElEUTBNbm9nYlRBdE9EUTVZeTB5TWpNZ01DMDBNRFFnTVRnd0xUUXdOQ0EwTURNZ01DQXlNak1nTVRneElEUXdNeUEwTURRZ05EQXpJREl5TWlBd0lEUXdNeTB4T0RBZ05EQXpMVFF3TXlBd0xUSXlNeTB4T0RFdE5EQXpMVFF3TXkwME1ETjZJaUJvYjNKcGVpMWhaSFl0ZUQwaU1UQXdNQ0lnTHo0S1BHZHNlWEJvSUdkc2VYQm9MVzVoYldVOUltUnZkMjVzYjJGa0lpQjFibWxqYjJSbFBTSW1JM2hsWVRBeU95SWdaRDBpYlRRNU5TQTNPVGRqTFRJME1pQXdMVFEwTWkweU1EQXRORFF5TFRRMU1pQXdMVEkwTWlBeU1EQXRORFF5SURRME1pMDBORElnTWpVeUlEQWdORFV5SURJd01DQTBOVElnTkRReUlEQWdNalV5TFRJd01DQTBOVEl0TkRVeUlEUTFNbm9nYlRFMU55MDFNamhzTFRFeE9DMHhOVFJqTFRFNUxUSTBMVFE1TFRJMExUWTRJREJzTFRFeE9DQXhOVFJqTFRFNUlESTBMVGtnTkRRZ01qSWdORFJvT1ROMk1qYzVZekFnTVRBZ09DQXhPU0F4T0NBeE9XZ3pPR014TUNBd0lERTRMVGtnTVRndE1UbDJMVEkzT1dnNU0yTXpNU0F3SURReExUSXdJREl5TFRRMGVpSWdhRzl5YVhvdFlXUjJMWGc5SWpFd01EQWlJQzgrQ2p4bmJIbHdhQ0JuYkhsd2FDMXVZVzFsUFNKcGJtWnZJaUIxYm1samIyUmxQU0ltSTNobFlUQXpPeUlnWkQwaWJUUTVOaUEzT0RsakxUSXpPQ0F3TFRRek5TMHhPVGN0TkRNMUxUUTBOU0F3TFRJek9DQXhPVGN0TkRNMUlEUXpOUzAwTXpVZ01qUTRJREFnTkRRMUlERTVOeUEwTkRVZ05ETTFJREFnTWpRNExURTVOeUEwTkRVdE5EUTFJRFEwTlhvZ2JUTTJMVFkxTm1Nd0xUa3RPQzB4TnkweE55MHhOMmd0TWpoakxUa2dNQzB4TnlBNExURTNJREUzZGpJNE1tTXdJRFVnTkNBNUlEa2dPV2cwTkdNMUlEQWdPUzAwSURrdE9YWXRNamd5ZWlCdExUTXhJRE16T1dNdE1qUWdNQzAwTkNBeU1DMDBOQ0EwTkhNeU1DQTBOQ0EwTkNBME5HTXlOQ0F3SURRMExURTVJRFEwTFRRMGN5MHlNQzAwTkMwME5DMDBOSG9pSUdodmNtbDZMV0ZrZGkxNFBTSXhNREF3SWlBdlBnbzhaMng1Y0dnZ1oyeDVjR2d0Ym1GdFpUMGljMkZtWlY5emRXTmpaWE56SWlCMWJtbGpiMlJsUFNJbUkzaGxZVEEwT3lJZ1pEMGliVFV3TUNBNE1USmpMVEUzTXkwek9TMHlPVGt0T0RJdE5ERXpMVEV4T1NBd0xURXlNQ0F3TFRJeE5pQXdMVE14TnlBd0xUSTRNeUF5TXpFdE5ETTVJRFF4TXkwME9EZ2dNVGd5SURRNUlEUXhNeUF5TURVZ05ERXpJRFE0T0NBd0lERXdNU0F3SURFNU55QXdJRE14TnkweE1UUWdNemN0TWpRd0lEZ3dMVFF4TXlBeE1UbDZJRzB5TlRJdE16SXhiQzB6TWpJdE16RTJZeTB5TFRJdE5TMHlMVGNnTUd3dE1UUTRJREUxTTJNdE1pQXlMVElnTlMweElEaHNNakVnTWpkak1TQXlJRFFnTXlBM0lERnNNVEl4TFRrell6SXRNU0ExTFRFZ055QXdiREk1TlNBeU5EWmpNaUF5SURVZ01pQTNJREJzTWpBdE1UbGpNUzB5SURFdE5TQXdMVGQ2SWlCb2IzSnBlaTFoWkhZdGVEMGlNVEF3TUNJZ0x6NEtQR2RzZVhCb0lHZHNlWEJvTFc1aGJXVTlJbk5oWm1WZmQyRnliaUlnZFc1cFkyOWtaVDBpSmlONFpXRXdOVHNpSUdROUltMDFNREVnTnprMFl5MHhOall0TXpndE1qZzNMVGd3TFRNNU55MHhNVFFnTUMweE1UWWdNQzB5TURnZ01DMHpNRFVnTUMweU56SWdNakl6TFRReU1pQXpPVGN0TkRZNUlERTNOQ0EwTnlBek9UY2dNVGszSURNNU55QTBOamtnTUNBNU55QXdJREU0T1NBd0lETXdOUzB4TVRBZ016UXRNak14SURjMkxUTTVOeUF4TVRSNklHMHRNak10TWpjMmFEUTJZellnTUNBeE1DMDBJRGt0T1d3dE1UQXRNakUyWXpBdE15MHlMVFV0TlMwMWFDMHpOR010TXlBd0xUVWdNaTAxSURWc0xURXdJREl4Tm1Nd0lEVWdOQ0E1SURrZ09Yb2diVEl6TFRNek5tTXRNVGdnTUMwek15QXhOUzB6TXlBek0zTXhOU0F6TXlBek15QXpNeUF6TXkweE5TQXpNeTB6TXkweE5TMHpNeTB6TXkwek0zb2lJR2h2Y21sNkxXRmtkaTE0UFNJeE1EQXdJaUF2UGdvOFoyeDVjR2dnWjJ4NWNHZ3RibUZ0WlQwaWMzVmpZMlZ6Y3lJZ2RXNXBZMjlrWlQwaUppTjRaV0V3TmpzaUlHUTlJbTB5T0RnZ016QTFZeTAzSURndE9DQXlNaTB5SURNd2JETWdOR00zSURrZ01Ua2dNVEVnTWpnZ05HdzVPQzAzTldNNUxUY2dNak10TnlBek1TQXdiREkzTmlBeU1qbGpPQ0EzSURJeElEY2dNamt0TVd3dE1pQXlZemd0T0NBNExUSXdJREF0TWpoc0xUTXdOQzB5T1RsakxUY3RPQzB5TUMwM0xUSTRJREZzTFRFeU9TQXhNek42SUcwMk5qa2dNemxqTUNBeU5UZ3RNakExSURRMk15MDBOak1nTkRZekxUSTBOaUF3TFRRMU1TMHlNRFV0TkRVeExUUTJNeUF3TFRJME5pQXlNRFV0TkRVeElEUTFNUzAwTlRFZ01qVTRJREFnTkRZeklESXdOU0EwTmpNZ05EVXhlaUlnYUc5eWFYb3RZV1IyTFhnOUlqRXdNREFpSUM4K0NqeG5iSGx3YUNCbmJIbHdhQzF1WVcxbFBTSnpkV05qWlhOelgyTnBjbU5zWlNJZ2RXNXBZMjlrWlQwaUppTjRaV0V3TnpzaUlHUTlJbTAxTURFZ056a3hZeTB5TkRRZ01DMDBOREl0TVRrNExUUTBNaTAwTkRJZ01DMHlORE1nTVRrNExUUTBNU0EwTkRJdE5EUXhjelEwTVNBeE9UY2dORFF4SURRME1XTXdJREkwTkMweE9UZ2dORFF5TFRRME1TQTBOREo2SUcwd0xUZzBPV010TWpJeklEQXROREEwSURFNE1DMDBNRFFnTkRBeklEQWdNakl6SURFNE1TQTBNRE1nTkRBMElEUXdNeUF5TWpJZ01DQTBNRE10TVRnd0lEUXdNeTAwTURNZ01DMHlNak10TVRneExUUXdNeTAwTURNdE5EQXplaUJ0TWpFMElEVTFNR3d0TWpZMkxUSXlNV010T0MwM0xUSXlMVGN0TXpBdE1Xd3RPVFlnTnpOakxUZ2dOeTB5TUNBMUxUSTJMVE5zTFRNdE5HTXROaTA1TFRVdE1qSWdNaTB6TUd3eE1qVXRNVEk0WXpjdE9DQXhPUzA0SURJM0xURnNNamt6SURJNE9XTTNJRGNnT0NBeE9DQXhJREkyTFRnZ055MHlNQ0EzTFRJM0lEQjZJRzB5TmlBeFl6QWdNQ0F4TFRFZ01TMHhJREFnTUNBeExURWdNUzB4YkMweUlESjZJaUJvYjNKcGVpMWhaSFl0ZUQwaU1UQXdNQ0lnTHo0S1BHZHNlWEJvSUdkc2VYQm9MVzVoYldVOUluTjFZMk5sYzNOZmJtOWZZMmx5WTJ4bElpQjFibWxqYjJSbFBTSW1JM2hsWVRBNE95SWdaRDBpYlRZeElESTROV010TVRRZ01UUXRNVGdnTkRBdE9TQTFPR3cySURFeFl6Z2dNVGdnTWpnZ01qTWdORFFnTVRGc01qQXpMVEUwTjJNeE5pMHhNU0EwTVMweE1TQTFOaUF5YkRVME1TQTBORFpqTVRVZ01USWdNemtnTVRFZ05UTXRNMnd0TVRNZ01UTmpNVFF0TVRRZ01UUXRNemNnTUMwMU1Xd3ROVGd6TFRVNU1XTXRNVFF0TVRRdE16WXRNVFF0TlRBdE1Xd3RNalE0SURJMU1ub2lJR2h2Y21sNkxXRmtkaTE0UFNJeE1EQXdJaUF2UGdvOFoyeDVjR2dnWjJ4NWNHZ3RibUZ0WlQwaWQyRnBkR2x1WnlJZ2RXNXBZMjlrWlQwaUppTjRaV0V3T1RzaUlHUTlJbTAwT1RRZ09EQXlZeTB5TkRRZ01DMDBORFl0TWpBeUxUUTBOaTAwTlRnZ01DMHlORFFnTWpBeUxUUTBOaUEwTkRZdE5EUTJJREkxTmlBd0lEUTFPQ0F5TURJZ05EVTRJRFEwTmlBd0lESTFOaTB5TURJZ05EVTRMVFExT0NBME5UaDZJRzB5TlRVdE5UVXhhQzB5T1RSMk16TTBhRFExZGkweU9EbG9NalE1ZGkwME5Yb2lJR2h2Y21sNkxXRmtkaTE0UFNJeE1EQXdJaUF2UGdvOFoyeDVjR2dnWjJ4NWNHZ3RibUZ0WlQwaWQyRnBkR2x1WjE5amFYSmpiR1VpSUhWdWFXTnZaR1U5SWlZamVHVmhNR0U3SWlCa1BTSnROelF4SURRNU0yTXdJREFnTVMweElERXRNU0F3SURBZ01TMHhJREV0TVd3dE1pQXllaUJ0TFRJME1DQXlPVGhqTFRJME5DQXdMVFEwTWkweE9UZ3RORFF5TFRRME1pQXdMVEkwTXlBeE9UZ3RORFF4SURRME1pMDBOREZ6TkRReElERTVOeUEwTkRFZ05EUXhZekFnTWpRMExURTVPQ0EwTkRJdE5EUXhJRFEwTW5vZ2JUQXRPRFE1WXkweU1qTWdNQzAwTURRZ01UZ3dMVFF3TkNBME1ETWdNQ0F5TWpNZ01UZ3hJRFF3TXlBME1EUWdOREF6SURJeU1pQXdJRFF3TXkweE9EQWdOREF6TFRRd015QXdMVEl5TXkweE9ERXROREF6TFRRd015MDBNRE42SUcwdE5EWWdOVFl4YUMwek5uWXRNalV6YURJMU0zWXpObWd0TWpFM2VpSWdhRzl5YVhvdFlXUjJMWGc5SWpFd01EQWlJQzgrQ2p4bmJIbHdhQ0JuYkhsd2FDMXVZVzFsUFNKM1lYSnVJaUIxYm1samIyUmxQU0ltSTNobFlUQmlPeUlnWkQwaWJUUTVOQ0E0TVROakxUSTFNQ0F3TFRRMU55MHlNRGN0TkRVM0xUUTJPU0F3TFRJMU1DQXlNRGN0TkRVM0lEUTFOeTAwTlRjZ01qWXlJREFnTkRZNUlESXdOeUEwTmprZ05EVTNJREFnTWpZeUxUSXdOeUEwTmprdE5EWTVJRFEyT1hvZ2JTMHlNUzB5TXpab05UUmpNVEFnTUNBeE9DMDRJREU0TFRFNGJDMHhOQzB6TURGak1DMDFMVFV0TVRBdE1UQXRNVEJvTFRReVl5MDFJREF0T1NBMUxURXdJREV3YkMweE15QXpNREJqTFRFZ01UQWdOeUF4T1NBeE55QXhPWG9nYlRJM0xUUTNNbU10TWpVZ01DMDBOU0F5TUMwME5TQTBOU0F3SURJMUlESXdJRFEySURRMUlEUTJJREkxSURBZ05EVXRNakVnTkRVdE5EWWdNQzB5TlMweU1DMDBOUzAwTlMwME5Yb2lJR2h2Y21sNkxXRmtkaTE0UFNJeE1EQXdJaUF2UGdvOFoyeDVjR2dnWjJ4NWNHZ3RibUZ0WlQwaWFXNW1iMTlqYVhKamJHVWlJSFZ1YVdOdlpHVTlJaVlqZUdWaE1HTTdJaUJrUFNKdE5UQXdJRFV5TW1Nek1pQXdJRFUzSURJMklEVTNJRFU0SURBZ016RXRNalVnTlRjdE5UY2dOVGN0TXpJZ01DMDFOeTB5TmkwMU55MDFOeUF3TFRNeUlESTFMVFU0SURVM0xUVTRlaUJ0TlRjdE5UZG9MVEUwTTNZdE1qbG9OVGQyTFRNeE5tZ3ROVGQyTFRJNGFESXdNWFl5T0dndE5UaDJNelExZWlCdExUUXpJRE0wTkdNdE1qWTRJREF0TkRjekxUSXdOUzAwTnpNdE5EY3pJREF0TWpRd0lESXdOUzAwTkRVZ05EY3pMVFEwTlNBeU5EQWdNQ0EwTkRVZ01qQTFJRFEwTlNBME5EVWdNQ0F5TmpndE1qQTFJRFEzTXkwME5EVWdORGN6ZWlCdExURTBMVGcyTVdNdE1qSXlJREF0TkRBeUlERTRNQzAwTURJZ05EQXlJREFnTWpJeUlERTRNQ0EwTURJZ05EQXlJRFF3TWlBeU1qSWdNQ0EwTURJdE1UZ3dJRFF3TWkwME1ESWdNQzB5TWpJdE1UZ3dMVFF3TWkwME1ESXROREF5ZWlJZ2FHOXlhWG90WVdSMkxYZzlJakV3TURBaUlDOCtDanhuYkhsd2FDQm5iSGx3YUMxdVlXMWxQU0pqWVc1alpXd2lJSFZ1YVdOdlpHVTlJaVlqZUdWaE1HUTdJaUJrUFNKdE5qVTBJRFV6TW13dE1UVTBMVEUxTkMweE5UUWdNVFUwTFRJNExUSTRJREUxTkMweE5UUXRNVFUwTFRFMU5DQXlPQzB5T0NBeE5UUWdNVFUwSURFMU5DMHhOVFFnTWpnZ01qZ3RNVFUwSURFMU5DQXhOVFFnTVRVMGVpQnRMVEUxTkNBeU5UTmpMVEkwTUNBd0xUUXpOUzB4T1RVdE5ETTFMVFF6TlNBd0xUSTBNQ0F4T1RVdE5ETTFJRFF6TlMwME16VWdNalF3SURBZ05ETTFJREU1TlNBME16VWdORE0xSURBZ01qUXdMVEU1TlNBME16VXRORE0xSURRek5Yb2diVEF0T0RNeFl5MHlNVGdnTUMwek9UVWdNVGM0TFRNNU5TQXpPVFlnTUNBeU1UZ2dNVGMzSURNNU5pQXpPVFVnTXprMklESXhPQ0F3SURNNU5pMHhOemdnTXprMkxUTTVOaUF3TFRJeE9DMHhOemd0TXprMkxUTTVOaTB6T1RaNklpQm9iM0pwZWkxaFpIWXRlRDBpTVRBd01DSWdMejRLUEdkc2VYQm9JR2RzZVhCb0xXNWhiV1U5SW5ObFlYSmphQ0lnZFc1cFkyOWtaVDBpSmlONFpXRXdaVHNpSUdROUltMDJOVE1nTVRRd1l5MDJPUzAxTmkweE5UY3RPVEF0TWpVekxUa3dMVEl5TVNBd0xUUXdNQ0F4TnprdE5EQXdJRFF3TUhNeE56a2dOREF3SURRd01DQTBNREFnTkRBd0xURTNPU0EwTURBdE5EQXdZekF0T1RZdE16UXRNVGcwTFRrd0xUSTFNMnd5T1RBdE1qa3hMVFUyTFRVMkxUSTVNU0F5T1RCNklHMHRNalV6TFRFd1l6RTNOeUF3SURNeU1DQXhORE1nTXpJd0lETXlNSE10TVRReklETXlNQzB6TWpBZ016SXdMVE15TUMweE5ETXRNekl3TFRNeU1DQXhORE10TXpJd0lETXlNQzB6TWpCNklpQm9iM0pwZWkxaFpIWXRlRDBpTVRBd01DSWdMejRLUEM5bWIyNTBQZ284TDJSbFpuTStDand2YzNablBnPT0nKSBmb3JtYXQoJ3N2ZycpO1xufVxuW2NsYXNzXj1cIndldWlfaWNvbl9cIl06YmVmb3JlLFxuW2NsYXNzKj1cIiB3ZXVpX2ljb25fXCJdOmJlZm9yZSB7XG4gIGZvbnQtZmFtaWx5OiBcIndldWlcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBzcGVhazogbm9uZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7XG4gIHdpZHRoOiAxZW07XG4gIG1hcmdpbi1yaWdodDogLjJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAvKiBvcGFjaXR5OiAuODsgKi9cbiAgLyogRm9yIHNhZmV0eSAtIHJlc2V0IHBhcmVudCBzdHlsZXMsIHRoYXQgY2FuIGJyZWFrIGdseXBoIGNvZGVzKi9cbiAgZm9udC12YXJpYW50OiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAvKiBmaXggYnV0dG9ucyBoZWlnaHQsIGZvciB0d2l0dGVyIGJvb3RzdHJhcCAqL1xuICBsaW5lLWhlaWdodDogMWVtO1xuICAvKiBBbmltYXRpb24gY2VudGVyIGNvbXBlbnNhdGlvbiAtIG1hcmdpbnMgc2hvdWxkIGJlIHN5bW1ldHJpYyAqL1xuICAvKiByZW1vdmUgaWYgbm90IG5lZWRlZCAqL1xuICBtYXJnaW4tbGVmdDogLjJlbTtcbiAgLyogeW91IGNhbiBiZSBtb3JlIGNvbWZvcnRhYmxlIHdpdGggaW5jcmVhc2VkIGljb25zIHNpemUgKi9cbiAgLyogZm9udC1zaXplOiAxMjAlOyAqL1xuICAvKiBVbmNvbW1lbnQgZm9yIDNEIGVmZmVjdCAqL1xuICAvKiB0ZXh0LXNoYWRvdzogMXB4IDFweCAxcHggcmdiYSgxMjcsIDEyNywgMTI3LCAwLjMpOyAqL1xufVxuLndldWlfaWNvbl9jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXEVBMDFcIjtcbn1cbi8qICfuoIAnICovXG4ud2V1aV9pY29uX2Rvd25sb2FkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxFQTAyXCI7XG59XG4vKiAn7qCAJyAqL1xuLndldWlfaWNvbl9pbmZvOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxFQTAzXCI7XG59XG4vKiAn7qCAJyAqL1xuLndldWlfaWNvbl9zYWZlX3N1Y2Nlc3M6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXEVBMDRcIjtcbn1cbi8qICfuoIAnICovXG4ud2V1aV9pY29uX3NhZmVfd2FybjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcRUEwNVwiO1xufVxuLyogJ+6ggCcgKi9cbi53ZXVpX2ljb25fc3VjY2VzczpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcRUEwNlwiO1xufVxuLyogJ+6ggCcgKi9cbi53ZXVpX2ljb25fc3VjY2Vzc19jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXEVBMDdcIjtcbn1cbi8qICfuoIAnICovXG4ud2V1aV9pY29uX3N1Y2Nlc3Nfbm9fY2lyY2xlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxFQTA4XCI7XG59XG4vKiAn7qCAJyAqL1xuLndldWlfaWNvbl93YWl0aW5nOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxFQTA5XCI7XG59XG4vKiAn7qCAJyAqL1xuLndldWlfaWNvbl93YWl0aW5nX2NpcmNsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcRUEwQVwiO1xufVxuLyogJ+6ggCcgKi9cbi53ZXVpX2ljb25fd2FybjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcRUEwQlwiO1xufVxuLyogJ+6ggCcgKi9cbi53ZXVpX2ljb25faW5mb19jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXEVBMENcIjtcbn1cbi8qICfuoIAnICovXG4ud2V1aV9pY29uX2NhbmNlbDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcRUEwRFwiO1xufVxuLyogJ+6ggCcgKi9cbi53ZXVpX2ljb25fc2VhcmNoOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxFQTBFXCI7XG59XG4vKiAn7qCAJyAqL1xuW2NsYXNzXj1cIndldWlfaWNvbl9cIl06YmVmb3JlLFxuW2NsYXNzKj1cIiB3ZXVpX2ljb25fXCJdOmJlZm9yZSB7XG4gIG1hcmdpbjogMDtcbn1cbi53ZXVpX2ljb25fc3VjY2VzczpiZWZvcmUge1xuICBmb250LXNpemU6IDIzcHg7XG4gIGNvbG9yOiAjMDlCQjA3O1xufVxuLndldWlfaWNvbl93YWl0aW5nOmJlZm9yZSB7XG4gIGZvbnQtc2l6ZTogMjNweDtcbiAgY29sb3I6ICMxMEFFRkY7XG59XG4ud2V1aV9pY29uX3dhcm46YmVmb3JlIHtcbiAgZm9udC1zaXplOiAyM3B4O1xuICBjb2xvcjogI0Y0MzUzMDtcbn1cbi53ZXVpX2ljb25faW5mbzpiZWZvcmUge1xuICBmb250LXNpemU6IDIzcHg7XG4gIGNvbG9yOiAjMTBBRUZGO1xufVxuLndldWlfaWNvbl9zdWNjZXNzX2NpcmNsZTpiZWZvcmUge1xuICBmb250LXNpemU6IDIzcHg7XG4gIGNvbG9yOiAjMDlCQjA3O1xufVxuLndldWlfaWNvbl9zdWNjZXNzX25vX2NpcmNsZTpiZWZvcmUge1xuICBmb250LXNpemU6IDIzcHg7XG4gIGNvbG9yOiAjMDlCQjA3O1xufVxuLndldWlfaWNvbl93YWl0aW5nX2NpcmNsZTpiZWZvcmUge1xuICBmb250LXNpemU6IDIzcHg7XG4gIGNvbG9yOiAjMTBBRUZGO1xufVxuLndldWlfaWNvbl9jaXJjbGU6YmVmb3JlIHtcbiAgZm9udC1zaXplOiAyM3B4O1xuICBjb2xvcjogI0M5QzlDOTtcbn1cbi53ZXVpX2ljb25fZG93bmxvYWQ6YmVmb3JlIHtcbiAgZm9udC1zaXplOiAyM3B4O1xuICBjb2xvcjogIzA5QkIwNztcbn1cbi53ZXVpX2ljb25faW5mb19jaXJjbGU6YmVmb3JlIHtcbiAgZm9udC1zaXplOiAyM3B4O1xuICBjb2xvcjogIzA5QkIwNztcbn1cbi53ZXVpX2ljb25fc2FmZV9zdWNjZXNzOmJlZm9yZSB7XG4gIGNvbG9yOiAjMDlCQjA3O1xufVxuLndldWlfaWNvbl9zYWZlX3dhcm46YmVmb3JlIHtcbiAgY29sb3I6ICNGRkJFMDA7XG59XG4ud2V1aV9pY29uX2NhbmNlbDpiZWZvcmUge1xuICBjb2xvcjogI0Y0MzUzMDtcbiAgZm9udC1zaXplOiAyMnB4O1xufVxuLndldWlfaWNvbl9zZWFyY2g6YmVmb3JlIHtcbiAgY29sb3I6ICNCMkIyQjI7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi53ZXVpX2ljb25fbXNnOmJlZm9yZSB7XG4gIGZvbnQtc2l6ZTogMTA0cHg7XG59XG4ud2V1aV9pY29uX3dhcm4ud2V1aV9pY29uX21zZzpiZWZvcmUge1xuICBjb2xvcjogI0Y3NjI2MDtcbn1cbi53ZXVpX2ljb25fc2FmZTpiZWZvcmUge1xuICBmb250LXNpemU6IDEwNHB4O1xufVxuLndldWlfYnRuLndldWlfYnRuX21pbmkge1xuICBsaW5lLWhlaWdodDogMS45O1xuICBmb250LXNpemU6IDE0cHg7XG4gIHBhZGRpbmc6IDAgLjc1ZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbmJ1dHRvbi53ZXVpX2J0bixcbmlucHV0LndldWlfYnRuIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci13aWR0aDogMDtcbiAgb3V0bGluZTogMDtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuYnV0dG9uLndldWlfYnRuOmZvY3VzLFxuaW5wdXQud2V1aV9idG46Zm9jdXMge1xuICBvdXRsaW5lOiAwO1xufVxuYnV0dG9uLndldWlfYnRuX2lubGluZSxcbmlucHV0LndldWlfYnRuX2lubGluZSxcbmJ1dHRvbi53ZXVpX2J0bl9taW5pLFxuaW5wdXQud2V1aV9idG5fbWluaSB7XG4gIHdpZHRoOiBhdXRvO1xufVxuLypnYXAgYmV0d2VlbiBidG4qL1xuLndldWlfYnRuICsgLndldWlfYnRuIHtcbiAgbWFyZ2luLXRvcDogMTVweDtcbn1cbi53ZXVpX2J0bi53ZXVpX2J0bl9pbmxpbmUgKyAud2V1aV9idG4ud2V1aV9idG5faW5saW5lIHtcbiAgbWFyZ2luLXRvcDogYXV0bztcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XG59XG4ud2V1aV9idG5fYXJlYSB7XG4gIG1hcmdpbjogMS4xNzY0NzA1OWVtIDE1cHggMC4zZW07XG59XG4ud2V1aV9idG5fYXJlYS53ZXVpX2J0bl9hcmVhX2lubGluZSB7XG4gIC13ZWJraXQtZGlzcGxheTogZmxleDtcbiAgZGlzcGxheTogZmxleDtcbn1cbi53ZXVpX2J0bl9hcmVhLndldWlfYnRuX2FyZWFfaW5saW5lIC53ZXVpX2J0biB7XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbiAgd2lkdGg6IDEwMCU7XG4gIC13ZWJraXQtZmxleDogMTtcbiAgZmxleDogMTtcbn1cbi53ZXVpX2J0bl9hcmVhLndldWlfYnRuX2FyZWFfaW5saW5lIC53ZXVpX2J0bjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuLndldWlfYnRuIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgcGFkZGluZy1sZWZ0OiAxNHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxNHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LXNpemU6IDE4cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgbGluZS1oZWlnaHQ6IDIuMzMzMzMzMzM7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLndldWlfYnRuOmFmdGVyIHtcbiAgY29udGVudDogXCIgXCI7XG4gIHdpZHRoOiAyMDAlO1xuICBoZWlnaHQ6IDIwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC41KTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuLndldWlfYnRuLndldWlfYnRuX2lubGluZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi53ZXVpX2J0bl9kZWZhdWx0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0Y3RjdGNztcbiAgY29sb3I6ICM0NTQ1NDU7XG59XG4ud2V1aV9idG5fZGVmYXVsdDpub3QoLndldWlfYnRuX2Rpc2FibGVkKTp2aXNpdGVkIHtcbiAgY29sb3I6ICM0NTQ1NDU7XG59XG4ud2V1aV9idG5fZGVmYXVsdDpub3QoLndldWlfYnRuX2Rpc2FibGVkKTphY3RpdmUge1xuICBjb2xvcjogI0ExQTFBMTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0RFREVERTtcbn1cbi53ZXVpX2J0bl9wcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA0QkUwMjtcbn1cbi53ZXVpX2J0bl9wcmltYXJ5Om5vdCgud2V1aV9idG5fZGlzYWJsZWQpOnZpc2l0ZWQge1xuICBjb2xvcjogI0ZGRkZGRjtcbn1cbi53ZXVpX2J0bl9wcmltYXJ5Om5vdCgud2V1aV9idG5fZGlzYWJsZWQpOmFjdGl2ZSB7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMzk3MDI7XG59XG4ud2V1aV9idG5fd2FybiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFRjRGNEY7XG59XG4ud2V1aV9idG5fd2Fybjpub3QoLndldWlfYnRuX2Rpc2FibGVkKTp2aXNpdGVkIHtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG4ud2V1aV9idG5fd2Fybjpub3QoLndldWlfYnRuX2Rpc2FibGVkKTphY3RpdmUge1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzEzRTNFO1xufVxuLndldWlfYnRuX2Rpc2FibGVkIHtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTtcbn1cbi53ZXVpX2J0bl9kaXNhYmxlZC53ZXVpX2J0bl9kZWZhdWx0IHtcbiAgY29sb3I6ICNDOUM5Qzk7XG59XG4ud2V1aV9idG5fcGxhaW5fcHJpbWFyeSB7XG4gIGNvbG9yOiAjMDRCRTAyO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDRCRTAyO1xufVxuYnV0dG9uLndldWlfYnRuX3BsYWluX3ByaW1hcnksXG5pbnB1dC53ZXVpX2J0bl9wbGFpbl9wcmltYXJ5IHtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLndldWlfYnRuX3BsYWluX3ByaW1hcnk6YWN0aXZlIHtcbiAgYm9yZGVyLWNvbG9yOiAjMDM5NzAyO1xufVxuLndldWlfYnRuX3BsYWluX3ByaW1hcnk6YWZ0ZXIge1xuICBib3JkZXItd2lkdGg6IDA7XG59XG4ud2V1aV9idG5fcGxhaW5fZGVmYXVsdCB7XG4gIGNvbG9yOiAjNUE1QTVBO1xuICBib3JkZXI6IDFweCBzb2xpZCAjNUE1QTVBO1xufVxuYnV0dG9uLndldWlfYnRuX3BsYWluX2RlZmF1bHQsXG5pbnB1dC53ZXVpX2J0bl9wbGFpbl9kZWZhdWx0IHtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLndldWlfYnRuX3BsYWluX2RlZmF1bHQ6YWZ0ZXIge1xuICBib3JkZXItd2lkdGg6IDA7XG59XG4ud2V1aV9jZWxsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLndldWlfY2VsbDpiZWZvcmUge1xuICBjb250ZW50OiBcIiBcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDFweDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNEOUQ5RDk7XG4gIGNvbG9yOiAjRDlEOUQ5O1xuICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XG4gIHRyYW5zZm9ybTogc2NhbGVZKDAuNSk7XG4gIGxlZnQ6IDE1cHg7XG59XG4ud2V1aV9jZWxsOmZpcnN0LWNoaWxkOmJlZm9yZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4ud2V1aV9jZWxscyB7XG4gIG1hcmdpbi10b3A6IDEuMTc2NDcwNTllbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbiAgbGluZS1oZWlnaHQ6IDEuNDExNzY0NzE7XG4gIGZvbnQtc2l6ZTogMTdweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLndldWlfY2VsbHM6YmVmb3JlIHtcbiAgY29udGVudDogXCIgXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxcHg7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjRDlEOUQ5O1xuICBjb2xvcjogI0Q5RDlEOTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xuICB0cmFuc2Zvcm06IHNjYWxlWSgwLjUpO1xufVxuLndldWlfY2VsbHM6YWZ0ZXIge1xuICBjb250ZW50OiBcIiBcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICBib3R0b206IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDFweDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNEOUQ5RDk7XG4gIGNvbG9yOiAjRDlEOUQ5O1xuICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDEwMCU7XG4gIHRyYW5zZm9ybTogc2NhbGVZKDAuNSk7XG59XG4ud2V1aV9jZWxsc190aXRsZSB7XG4gIG1hcmdpbi10b3A6IC43N2VtO1xuICBtYXJnaW4tYm90dG9tOiAuM2VtO1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIGNvbG9yOiAjODg4O1xuICBmb250LXNpemU6IDE0cHg7XG59XG4ud2V1aV9jZWxsc190aXRsZSArIC53ZXVpX2NlbGxzIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi53ZXVpX2NlbGxzX3RpcHMge1xuICBtYXJnaW4tdG9wOiAuM2VtO1xuICBjb2xvcjogIzg4ODtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICBmb250LXNpemU6IDE0cHg7XG59XG4ud2V1aV9jZWxsIHtcbiAgcGFkZGluZzogMTBweCAxNXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ud2V1aV9jZWxsX2Z0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIGNvbG9yOiAjODg4O1xufVxuLndldWlfY2VsbF9wcmltYXJ5IHtcbiAgZmxleDogMTtcbn1cbi53ZXVpX2NlbGxzX2FjY2VzcyAud2V1aV9jZWxsOm5vdCgubm9fYWNjZXNzKSB7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcbn1cbi53ZXVpX2NlbGxzX2FjY2VzcyAud2V1aV9jZWxsOm5vdCgubm9fYWNjZXNzKTphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUNFQ0VDO1xufVxuLndldWlfY2VsbHNfYWNjZXNzIGEud2V1aV9jZWxsIHtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG4ud2V1aV9jZWxsc19hY2Nlc3MgLndldWlfY2VsbF9mdDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgaGVpZ2h0OiA2cHg7XG4gIHdpZHRoOiA2cHg7XG4gIGJvcmRlci13aWR0aDogMnB4IDJweCAwIDA7XG4gIGJvcmRlci1jb2xvcjogI0M4QzhDRDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC0ycHg7XG4gIHRvcDogLTFweDtcbiAgbWFyZ2luLWxlZnQ6IC4zZW07XG59XG4ud2V1aV9jaGVja19sYWJlbCB7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcbn1cbi53ZXVpX2NoZWNrIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAtOTk5OWVtO1xufVxuLndldWlfY2VsbHNfcmFkaW8gLndldWlfY2VsbF9mdCB7XG4gIHBhZGRpbmctbGVmdDogMC4zNWVtO1xufVxuLndldWlfY2VsbHNfcmFkaW8gLndldWlfY2VsbDphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUNFQ0VDO1xufVxuLndldWlfY2VsbHNfcmFkaW8gLndldWlfY2hlY2s6Y2hlY2tlZCArIC53ZXVpX2ljb25fY2hlY2tlZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxFQTA4JztcbiAgY29sb3I6ICMwOUJCMDc7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbi53ZXVpX2NlbGxzX2NoZWNrYm94IC53ZXVpX2NlbGxfaGQge1xuICBwYWRkaW5nLXJpZ2h0OiAwLjM1ZW07XG59XG4ud2V1aV9jZWxsc19jaGVja2JveCAud2V1aV9jZWxsOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFQ0VDRUM7XG59XG4ud2V1aV9jZWxsc19jaGVja2JveCAud2V1aV9pY29uX2NoZWNrZWQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcRUEwMSc7XG4gIGNvbG9yOiAjQzlDOUM5O1xuICBmb250LXNpemU6IDIzcHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLndldWlfY2VsbHNfY2hlY2tib3ggLndldWlfY2hlY2s6Y2hlY2tlZCArIC53ZXVpX2ljb25fY2hlY2tlZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxFQTA2JztcbiAgY29sb3I6ICMwOUJCMDc7XG59XG4ud2V1aV9sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogM2VtO1xufVxuLndldWlfaW5wdXQge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAwO1xuICBvdXRsaW5lOiAwO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBoZWlnaHQ6IDEuNDExNzY0NzFlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDExNzY0NzE7XG59XG4ud2V1aV9pbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcbi53ZXVpX2lucHV0Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBtYXJnaW46IDA7XG59XG4ud2V1aV90ZXh0YXJlYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3JkZXI6IDA7XG4gIHJlc2l6ZTogbm9uZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LXNpemU6IDFlbTtcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gIG91dGxpbmU6IDA7XG59XG4ud2V1aV90ZXh0YXJlYV9jb3VudGVyIHtcbiAgY29sb3I6ICNCMkIyQjI7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuLndldWlfY2VsbF93YXJuIC53ZXVpX3RleHRhcmVhX2NvdW50ZXIge1xuICBjb2xvcjogI0U2NDM0MDtcbn1cbi53ZXVpX3RvcHRpcHMge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICB3aWR0aDogMTAwJTtcbiAgdG9wOiAwO1xuICBsaW5lLWhlaWdodDogMi4zO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNGRkY7XG4gIHotaW5kZXg6IDI7XG59XG4ud2V1aV90b3B0aXBzLndldWlfd2FybiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFNjQzNDA7XG59XG4ud2V1aV9jZWxsc19mb3JtIC53ZXVpX2NlbGxfd2FybiB7XG4gIGNvbG9yOiAjRTY0MzQwO1xufVxuLndldWlfY2VsbHNfZm9ybSAud2V1aV9jZWxsX3dhcm4gLndldWlfaWNvbl93YXJuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLndldWlfY2VsbHNfZm9ybSAud2V1aV9jZWxsX2hkIHtcbiAgcGFkZGluZy1yaWdodDogLjNlbTtcbn1cbi53ZXVpX2NlbGxzX2Zvcm0gLndldWlfY2VsbF9mdCB7XG4gIGZvbnQtc2l6ZTogMDtcbn1cbi53ZXVpX2NlbGxzX2Zvcm0gLndldWlfaWNvbl93YXJuIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi53ZXVpX2NlbGxfc2VsZWN0IHtcbiAgcGFkZGluZzogMDtcbn1cbi53ZXVpX2NlbGxfc2VsZWN0IC53ZXVpX3NlbGVjdCB7XG4gIHBhZGRpbmctcmlnaHQ6IDMwcHg7XG59XG4ud2V1aV9jZWxsX3NlbGVjdCAud2V1aV9jZWxsX2JkOmFmdGVyIHtcbiAgY29udGVudDogXCIgXCI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICBoZWlnaHQ6IDZweDtcbiAgd2lkdGg6IDZweDtcbiAgYm9yZGVyLXdpZHRoOiAycHggMnB4IDAgMDtcbiAgYm9yZGVyLWNvbG9yOiAjQzhDOENEO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTJweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgcmlnaHQ6IDE1cHg7XG4gIG1hcmdpbi10b3A6IC0zcHg7XG59XG4ud2V1aV9zZWxlY3Qge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGJvcmRlcjogMDtcbiAgb3V0bGluZTogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGhlaWdodDogNDRweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG4ud2V1aV9zZWxlY3RfYmVmb3JlIHtcbiAgcGFkZGluZy1yaWdodDogMTVweDtcbn1cbi53ZXVpX3NlbGVjdF9iZWZvcmUgLndldWlfc2VsZWN0IHtcbiAgd2lkdGg6IGF1dG87XG59XG4ud2V1aV9zZWxlY3RfYmVmb3JlIC53ZXVpX2NlbGxfaGQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ud2V1aV9zZWxlY3RfYmVmb3JlIC53ZXVpX2NlbGxfaGQ6YWZ0ZXIge1xuICBjb250ZW50OiBcIiBcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNEOUQ5RDk7XG4gIGNvbG9yOiAjRDlEOUQ5O1xuICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDEwMCU7XG4gIHRyYW5zZm9ybTogc2NhbGVYKDAuNSk7XG59XG4ud2V1aV9zZWxlY3RfYmVmb3JlIC53ZXVpX2NlbGxfaGQ6YmVmb3JlIHtcbiAgY29udGVudDogXCIgXCI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICBoZWlnaHQ6IDZweDtcbiAgd2lkdGg6IDZweDtcbiAgYm9yZGVyLXdpZHRoOiAycHggMnB4IDAgMDtcbiAgYm9yZGVyLWNvbG9yOiAjQzhDOENEO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTJweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgcmlnaHQ6IDE1cHg7XG4gIG1hcmdpbi10b3A6IC0zcHg7XG59XG4ud2V1aV9zZWxlY3RfYmVmb3JlIC53ZXVpX2NlbGxfYmQge1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG4ud2V1aV9zZWxlY3RfYmVmb3JlIC53ZXVpX2NlbGxfYmQ6YWZ0ZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuLndldWlfc2VsZWN0X2FmdGVyIHtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xufVxuLndldWlfdmNvZGUge1xuICBwYWRkaW5nLXRvcDogMDtcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgcGFkZGluZy1ib3R0b206IDA7XG59XG4ud2V1aV92Y29kZSAud2V1aV9jZWxsX2Z0IGltZyB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG4gIGhlaWdodDogNDRweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbi53ZXVpX2NlbGxfc3dpdGNoIHtcbiAgcGFkZGluZy10b3A6IDZweDtcbiAgcGFkZGluZy1ib3R0b206IDZweDtcbn1cbi53ZXVpX3N3aXRjaCB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDUycHg7XG4gIGhlaWdodDogMzJweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0RGREZERjtcbiAgb3V0bGluZTogMDtcbiAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYmFja2dyb3VuZDogI0RGREZERjtcbn1cbi53ZXVpX3N3aXRjaDpiZWZvcmUge1xuICBjb250ZW50OiBcIiBcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiA1MHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGREZERkQ7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3M7XG59XG4ud2V1aV9zd2l0Y2g6YWZ0ZXIge1xuICBjb250ZW50OiBcIiBcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3M7XG59XG4ud2V1aV9zd2l0Y2g6Y2hlY2tlZCB7XG4gIGJvcmRlci1jb2xvcjogIzA0QkUwMjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA0QkUwMjtcbn1cbi53ZXVpX3N3aXRjaDpjaGVja2VkOmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMCk7XG59XG4ud2V1aV9zd2l0Y2g6Y2hlY2tlZDphZnRlciB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbn1cbi53ZXVpX3VwbG9hZGVyX2hkIHtcbiAgcGFkZGluZy10b3A6IDA7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG4gIHBhZGRpbmctbGVmdDogMDtcbn1cbi53ZXVpX3VwbG9hZGVyX2hkIC53ZXVpX2NlbGxfZnQge1xuICBmb250LXNpemU6IDFlbTtcbn1cbi53ZXVpX3VwbG9hZGVyX2JkIHtcbiAgbWFyZ2luLWJvdHRvbTogLTRweDtcbiAgbWFyZ2luLXJpZ2h0OiAtOXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLndldWlfdXBsb2FkZXJfZmlsZXMge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuLndldWlfdXBsb2FkZXJfZmlsZSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW4tcmlnaHQ6IDlweDtcbiAgbWFyZ2luLWJvdHRvbTogOXB4O1xuICB3aWR0aDogNzlweDtcbiAgaGVpZ2h0OiA3OXB4O1xuICBiYWNrZ3JvdW5kOiBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cbi53ZXVpX3VwbG9hZGVyX3N0YXR1cyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi53ZXVpX3VwbG9hZGVyX3N0YXR1czpiZWZvcmUge1xuICBjb250ZW50OiBcIiBcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cbi53ZXVpX3VwbG9hZGVyX3N0YXR1cyAud2V1aV91cGxvYWRlcl9zdGF0dXNfY29udGVudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuLndldWlfdXBsb2FkZXJfc3RhdHVzIC53ZXVpX2ljb25fd2FybiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLndldWlfdXBsb2FkZXJfaW5wdXRfd3JwIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLXJpZ2h0OiA5cHg7XG4gIG1hcmdpbi1ib3R0b206IDlweDtcbiAgd2lkdGg6IDc3cHg7XG4gIGhlaWdodDogNzdweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0Q5RDlEOTtcbn1cbi53ZXVpX3VwbG9hZGVyX2lucHV0X3dycDpiZWZvcmUsXG4ud2V1aV91cGxvYWRlcl9pbnB1dF93cnA6YWZ0ZXIge1xuICBjb250ZW50OiBcIiBcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0Q5RDlEOTtcbn1cbi53ZXVpX3VwbG9hZGVyX2lucHV0X3dycDpiZWZvcmUge1xuICB3aWR0aDogMnB4O1xuICBoZWlnaHQ6IDM5LjVweDtcbn1cbi53ZXVpX3VwbG9hZGVyX2lucHV0X3dycDphZnRlciB7XG4gIHdpZHRoOiAzOS41cHg7XG4gIGhlaWdodDogMnB4O1xufVxuLndldWlfdXBsb2FkZXJfaW5wdXRfd3JwOmFjdGl2ZSB7XG4gIGJvcmRlci1jb2xvcjogIzk5OTk5OTtcbn1cbi53ZXVpX3VwbG9hZGVyX2lucHV0X3dycDphY3RpdmU6YmVmb3JlLFxuLndldWlfdXBsb2FkZXJfaW5wdXRfd3JwOmFjdGl2ZTphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7XG59XG4ud2V1aV91cGxvYWRlcl9pbnB1dCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvcGFjaXR5OiAwO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG59XG4ud2V1aV9tc2cge1xuICBwYWRkaW5nLXRvcDogMzZweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLndldWlfbXNnIC53ZXVpX2ljb25fYXJlYSB7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG4ud2V1aV9tc2cgLndldWlfdGV4dF9hcmVhIHtcbiAgbWFyZ2luLWJvdHRvbTogMjVweDtcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuLndldWlfbXNnIC53ZXVpX21zZ190aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuLndldWlfbXNnIC53ZXVpX21zZ19kZXNjIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogIzg4ODtcbn1cbi53ZXVpX21zZyAud2V1aV9vcHJfYXJlYSB7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XG59XG4ud2V1aV9tc2cgLndldWlfZXh0cmFfYXJlYSB7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICM4ODg7XG59XG4ud2V1aV9tc2cgLndldWlfZXh0cmFfYXJlYSBhIHtcbiAgY29sb3I6ICM2MTc0OUI7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLWhlaWdodDogNDM4cHgpIHtcbiAgLndldWlfZXh0cmFfYXJlYSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuLndldWlfYXJ0aWNsZSB7XG4gIHBhZGRpbmc6IDIwcHggMTVweDtcbiAgZm9udC1zaXplOiAxNXB4O1xufVxuLndldWlfYXJ0aWNsZSBzZWN0aW9uIHtcbiAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG59XG4ud2V1aV9hcnRpY2xlIGgxIHtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBtYXJnaW4tYm90dG9tOiAuNzVlbTtcbn1cbi53ZXVpX2FydGljbGUgaDIge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG1hcmdpbi1ib3R0b206IC4zZW07XG59XG4ud2V1aV9hcnRpY2xlIGgzIHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNXB4O1xufVxuLndldWlfcHJvZ3Jlc3Mge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLndldWlfcHJvZ3Jlc3NfYmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VCRUJFQjtcbiAgaGVpZ2h0OiAzcHg7XG4gIGZsZXg6IDE7XG59XG4ud2V1aV9wcm9ncmVzc19pbm5lcl9iYXIge1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDlCQjA3O1xufVxuLndldWlfcHJvZ3Jlc3Nfb3ByIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiAxNXB4O1xuICBmb250LXNpemU6IDA7XG59XG4ud2V1aV9ncmlkcyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi53ZXVpX2dyaWRzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMXB4O1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI0Q5RDlEOTtcbiAgY29sb3I6ICNEOUQ5RDk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDAgMDtcbiAgdHJhbnNmb3JtOiBzY2FsZVkoMC41KTtcbn1cbi53ZXVpX2dyaWRzOmFmdGVyIHtcbiAgY29udGVudDogXCIgXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI0Q5RDlEOTtcbiAgY29sb3I6ICNEOUQ5RDk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDAgMDtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMC41KTtcbn1cbi53ZXVpX2dyaWQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nOiAyMHB4IDEwcHg7XG4gIHdpZHRoOiAzMy4zMzMzMzMzMyU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4ud2V1aV9ncmlkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI0Q5RDlEOTtcbiAgY29sb3I6ICNEOUQ5RDk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDAgMTAwJTtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMC41KTtcbiAgcmlnaHQ6IC0xcHg7XG59XG4ud2V1aV9ncmlkOmFmdGVyIHtcbiAgY29udGVudDogXCIgXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxcHg7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRDlEOUQ5O1xuICBjb2xvcjogI0Q5RDlEOTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogMCAxMDAlO1xuICB0cmFuc2Zvcm06IHNjYWxlWSgwLjUpO1xufVxuLndldWlfZ3JpZDphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTRFNEU0O1xufVxuLndldWlfZ3JpZF9pY29uIHtcbiAgd2lkdGg6IDI4cHg7XG4gIGhlaWdodDogMjhweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4ud2V1aV9ncmlkX2ljb24gaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4ud2V1aV9ncmlkX2ljb24gKyAud2V1aV9ncmlkX2xhYmVsIHtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuLndldWlfZ3JpZF9sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjMDAwO1xuICBmb250LXNpemU6IDE0cHg7XG59XG4ud2V1aV9kaWFsb2cge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEzO1xuICB3aWR0aDogODUlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZBRkFGQztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG4ud2V1aV9kaWFsb2dfY29uZmlybSAud2V1aV9kaWFsb2cgLndldWlfZGlhbG9nX2hkIHtcbiAgcGFkZGluZzogMS4yZW0gMjBweCAuNWVtO1xufVxuLndldWlfZGlhbG9nX2NvbmZpcm0gLndldWlfZGlhbG9nIC53ZXVpX2RpYWxvZ19iZCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4ud2V1aV9kaWFsb2dfaGQge1xuICBwYWRkaW5nOiAxLjJlbSAwIC41ZW07XG59XG4ud2V1aV9kaWFsb2dfdGl0bGUge1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE3cHg7XG59XG4ud2V1aV9kaWFsb2dfYmQge1xuICBwYWRkaW5nOiAwIDIwcHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgY29sb3I6ICM4ODg7XG59XG4ud2V1aV9kaWFsb2dfZnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxpbmUtaGVpZ2h0OiA0MnB4O1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBmb250LXNpemU6IDE3cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG4ud2V1aV9kaWFsb2dfZnQgYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmbGV4OiAxO1xuICBjb2xvcjogIzNDQzUxRjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG59XG4ud2V1aV9kaWFsb2dfZnQgYTphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFRUVFO1xufVxuLndldWlfZGlhbG9nX2Z0OmFmdGVyIHtcbiAgY29udGVudDogXCIgXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxcHg7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjRDVENUQ2O1xuICBjb2xvcjogI0Q1RDVENjtcbiAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xuICB0cmFuc2Zvcm06IHNjYWxlWSgwLjUpO1xufVxuLndldWlfZGlhbG9nX2NvbmZpcm0gLndldWlfZGlhbG9nX2Z0IGEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ud2V1aV9kaWFsb2dfY29uZmlybSAud2V1aV9kaWFsb2dfZnQgYTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNENUQ1RDY7XG4gIGNvbG9yOiAjRDVENUQ2O1xuICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XG4gIHRyYW5zZm9ybTogc2NhbGVYKDAuNSk7XG59XG4ud2V1aV9kaWFsb2dfY29uZmlybSAud2V1aV9kaWFsb2dfZnQgYTpmaXJzdC1jaGlsZDphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4ud2V1aV9idG5fZGlhbG9nLmRlZmF1bHQge1xuICBjb2xvcjogIzM1MzUzNTtcbn1cbi53ZXVpX2J0bl9kaWFsb2cucHJpbWFyeSB7XG4gIGNvbG9yOiAjMEJCMjBDO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC53ZXVpX2RpYWxvZyB7XG4gICAgd2lkdGg6IDM1JTtcbiAgfVxufVxuLndldWlfdG9hc3Qge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDM7XG4gIHdpZHRoOiA3LjZlbTtcbiAgbWluLWhlaWdodDogNy42ZW07XG4gIHRvcDogMTgwcHg7XG4gIGxlZnQ6IDUwJTtcbiAgbWFyZ2luLWxlZnQ6IC0zLjhlbTtcbiAgYmFja2dyb3VuZDogcmdiYSg0MCwgNDAsIDQwLCAwLjc1KTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuLndldWlfaWNvbl90b2FzdCB7XG4gIG1hcmdpbjogMjJweCAwIDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLndldWlfaWNvbl90b2FzdDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxFQTA4JztcbiAgY29sb3I6ICNGRkZGRkY7XG4gIGZvbnQtc2l6ZTogNTVweDtcbn1cbi53ZXVpX3RvYXN0X2NvbnRlbnQge1xuICBtYXJnaW46IDAgMCAxNXB4O1xufVxuLndldWlfbG9hZGluZ190b2FzdCAud2V1aV90b2FzdF9jb250ZW50IHtcbiAgbWFyZ2luLXRvcDogNjQlO1xuICBmb250LXNpemU6IDE0cHg7XG59XG4ud2V1aV9sb2FkaW5nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMHB4O1xuICB6LWluZGV4OiAyMDAwMDAwMDAwO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogMzglO1xufVxuLndldWlfbG9hZGluZ19sZWFmIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC0xcHg7XG4gIG9wYWNpdHk6IDAuMjU7XG59XG4ud2V1aV9sb2FkaW5nX2xlYWY6YmVmb3JlIHtcbiAgY29udGVudDogXCIgXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDguMTRweDtcbiAgaGVpZ2h0OiAzLjA4cHg7XG4gIGJhY2tncm91bmQ6ICNkMWQxZDU7XG4gIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4wOTgwMzkyKSAwcHggMHB4IDFweDtcbiAgYm9yZGVyLXJhZGl1czogMXB4O1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IDUwJSAwcHg7XG59XG4ud2V1aV9sb2FkaW5nX2xlYWZfMCB7XG4gIGFuaW1hdGlvbjogb3BhY2l0eS02MC0yNS0wLTEyIDEuMjVzIGxpbmVhciBpbmZpbml0ZTtcbn1cbi53ZXVpX2xvYWRpbmdfbGVhZl8wOmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpIHRyYW5zbGF0ZSg3LjkycHgsIDBweCk7XG59XG4ud2V1aV9sb2FkaW5nX2xlYWZfMSB7XG4gIGFuaW1hdGlvbjogb3BhY2l0eS02MC0yNS0xLTEyIDEuMjVzIGxpbmVhciBpbmZpbml0ZTtcbn1cbi53ZXVpX2xvYWRpbmdfbGVhZl8xOmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDMwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xufVxuLndldWlfbG9hZGluZ19sZWFmXzIge1xuICBhbmltYXRpb246IG9wYWNpdHktNjAtMjUtMi0xMiAxLjI1cyBsaW5lYXIgaW5maW5pdGU7XG59XG4ud2V1aV9sb2FkaW5nX2xlYWZfMjpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg2MGRlZykgdHJhbnNsYXRlKDcuOTJweCwgMHB4KTtcbn1cbi53ZXVpX2xvYWRpbmdfbGVhZl8zIHtcbiAgYW5pbWF0aW9uOiBvcGFjaXR5LTYwLTI1LTMtMTIgMS4yNXMgbGluZWFyIGluZmluaXRlO1xufVxuLndldWlfbG9hZGluZ19sZWFmXzM6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpIHRyYW5zbGF0ZSg3LjkycHgsIDBweCk7XG59XG4ud2V1aV9sb2FkaW5nX2xlYWZfNCB7XG4gIGFuaW1hdGlvbjogb3BhY2l0eS02MC0yNS00LTEyIDEuMjVzIGxpbmVhciBpbmZpbml0ZTtcbn1cbi53ZXVpX2xvYWRpbmdfbGVhZl80OmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDEyMGRlZykgdHJhbnNsYXRlKDcuOTJweCwgMHB4KTtcbn1cbi53ZXVpX2xvYWRpbmdfbGVhZl81IHtcbiAgYW5pbWF0aW9uOiBvcGFjaXR5LTYwLTI1LTUtMTIgMS4yNXMgbGluZWFyIGluZmluaXRlO1xufVxuLndldWlfbG9hZGluZ19sZWFmXzU6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTUwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xufVxuLndldWlfbG9hZGluZ19sZWFmXzYge1xuICBhbmltYXRpb246IG9wYWNpdHktNjAtMjUtNi0xMiAxLjI1cyBsaW5lYXIgaW5maW5pdGU7XG59XG4ud2V1aV9sb2FkaW5nX2xlYWZfNjpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpIHRyYW5zbGF0ZSg3LjkycHgsIDBweCk7XG59XG4ud2V1aV9sb2FkaW5nX2xlYWZfNyB7XG4gIGFuaW1hdGlvbjogb3BhY2l0eS02MC0yNS03LTEyIDEuMjVzIGxpbmVhciBpbmZpbml0ZTtcbn1cbi53ZXVpX2xvYWRpbmdfbGVhZl83OmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDIxMGRlZykgdHJhbnNsYXRlKDcuOTJweCwgMHB4KTtcbn1cbi53ZXVpX2xvYWRpbmdfbGVhZl84IHtcbiAgYW5pbWF0aW9uOiBvcGFjaXR5LTYwLTI1LTgtMTIgMS4yNXMgbGluZWFyIGluZmluaXRlO1xufVxuLndldWlfbG9hZGluZ19sZWFmXzg6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMjQwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xufVxuLndldWlfbG9hZGluZ19sZWFmXzkge1xuICBhbmltYXRpb246IG9wYWNpdHktNjAtMjUtOS0xMiAxLjI1cyBsaW5lYXIgaW5maW5pdGU7XG59XG4ud2V1aV9sb2FkaW5nX2xlYWZfOTpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgyNzBkZWcpIHRyYW5zbGF0ZSg3LjkycHgsIDBweCk7XG59XG4ud2V1aV9sb2FkaW5nX2xlYWZfMTAge1xuICBhbmltYXRpb246IG9wYWNpdHktNjAtMjUtMTAtMTIgMS4yNXMgbGluZWFyIGluZmluaXRlO1xufVxuLndldWlfbG9hZGluZ19sZWFmXzEwOmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDMwMGRlZykgdHJhbnNsYXRlKDcuOTJweCwgMHB4KTtcbn1cbi53ZXVpX2xvYWRpbmdfbGVhZl8xMSB7XG4gIGFuaW1hdGlvbjogb3BhY2l0eS02MC0yNS0xMS0xMiAxLjI1cyBsaW5lYXIgaW5maW5pdGU7XG59XG4ud2V1aV9sb2FkaW5nX2xlYWZfMTE6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMzMwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xufVxuQC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtMC0xMiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwLjI1O1xuICB9XG4gIDAuMDElIHtcbiAgICBvcGFjaXR5OiAwLjI1O1xuICB9XG4gIDAuMDIlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDYwLjAxJSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwLjI1O1xuICB9XG59XG5ALXdlYmtpdC1rZXlmcmFtZXMgb3BhY2l0eS02MC0yNS0xLTEyIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbiAgOC4zNDMzMyUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbiAgOC4zNTMzMyUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgNjguMzQzMyUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxufVxuQC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtMi0xMiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwLjI1O1xuICB9XG4gIDE2LjY3NjclIHtcbiAgICBvcGFjaXR5OiAwLjI1O1xuICB9XG4gIDE2LjY4NjclIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDc2LjY3NjclIHtcbiAgICBvcGFjaXR5OiAwLjI1O1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbn1cbkAtd2Via2l0LWtleWZyYW1lcyBvcGFjaXR5LTYwLTI1LTMtMTIge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICAyNS4wMSUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbiAgMjUuMDIlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDg1LjAxJSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwLjI1O1xuICB9XG59XG5ALXdlYmtpdC1rZXlmcmFtZXMgb3BhY2l0eS02MC0yNS00LTEyIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbiAgMzMuMzQzMyUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbiAgMzMuMzUzMyUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgOTMuMzQzMyUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxufVxuQC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtNS0xMiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwLjI3MDk1ODMzMzMzMzMzMztcbiAgfVxuICA0MS42NzY3JSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICA0MS42ODY3JSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxLjY3NjY3JSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwLjI3MDk1ODMzMzMzMzMzMztcbiAgfVxufVxuQC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtNi0xMiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwLjM3NTEyNTtcbiAgfVxuICA1MC4wMSUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbiAgNTAuMDIlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDEwLjAxJSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwLjM3NTEyNTtcbiAgfVxufVxuQC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtNy0xMiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwLjQ3OTI5MTY2NjY2NjY2NztcbiAgfVxuICA1OC4zNDMzJSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICA1OC4zNTMzJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxOC4zNDMzJSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwLjQ3OTI5MTY2NjY2NjY2NztcbiAgfVxufVxuQC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtOC0xMiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwLjU4MzQ1ODMzMzMzMzMzMztcbiAgfVxuICA2Ni42NzY3JSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICA2Ni42ODY3JSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAyNi42NzY3JSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwLjU4MzQ1ODMzMzMzMzMzMztcbiAgfVxufVxuQC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtOS0xMiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwLjY4NzYyNTtcbiAgfVxuICA3NS4wMSUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbiAgNzUuMDIlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDM1LjAxJSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwLjY4NzYyNTtcbiAgfVxufVxuQC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtMTAtMTIge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMC43OTE3OTE2NjY2NjY2Njc7XG4gIH1cbiAgODMuMzQzMyUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbiAgODMuMzUzMyUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgNDMuMzQzMyUge1xuICAgIG9wYWNpdHk6IDAuMjU7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMC43OTE3OTE2NjY2NjY2Njc7XG4gIH1cbn1cbkAtd2Via2l0LWtleWZyYW1lcyBvcGFjaXR5LTYwLTI1LTExLTEyIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDAuODk1OTU4MzMzMzMzMzMzO1xuICB9XG4gIDkxLjY3NjclIHtcbiAgICBvcGFjaXR5OiAwLjI1O1xuICB9XG4gIDkxLjY4NjclIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDUxLjY3NjclIHtcbiAgICBvcGFjaXR5OiAwLjI1O1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDAuODk1OTU4MzMzMzMzMzMzO1xuICB9XG59XG4ud2V1aV9tYXNrIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAxO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC42KTtcbn1cbi53ZXVpX21hc2tfdHJhbnNwYXJlbnQge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDE7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbn1cbi53ZXVpX21hc2tfdHJhbnNpdGlvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDApO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIC4zcztcbn1cbi53ZXVpX2ZhZGVfdG9nZ2xlIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjYpO1xufVxuLndldWlfYWN0aW9uc2hlZXQge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMTAwJSk7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgei1pbmRleDogMjtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFRkVGRjQ7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3M7XG59XG4ud2V1aV9hY3Rpb25zaGVldF9tZW51IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbn1cbi53ZXVpX2FjdGlvbnNoZWV0X2FjdGlvbiB7XG4gIG1hcmdpbi10b3A6IDZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbn1cbi53ZXVpX2FjdGlvbnNoZWV0X2NlbGwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDEwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDE4cHg7XG59XG4ud2V1aV9hY3Rpb25zaGVldF9jZWxsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMXB4O1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI0Q5RDlEOTtcbiAgY29sb3I6ICNEOUQ5RDk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDAgMDtcbiAgdHJhbnNmb3JtOiBzY2FsZVkoMC41KTtcbn1cbi53ZXVpX2FjdGlvbnNoZWV0X2NlbGw6YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VDRUNFQztcbn1cbi53ZXVpX2FjdGlvbnNoZWV0X2NlbGw6Zmlyc3QtY2hpbGQ6YmVmb3JlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi53ZXVpX2FjdGlvbnNoZWV0X3RvZ2dsZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xufVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OMGVXeGxMMkpoYzJVdmNtVnpaWFF1YkdWemN5SXNJbk4wZVd4bEwySmhjMlV2ZG1GeWFXRmliR1V2WjJ4dlltRnNMbXhsYzNNaUxDSnpkSGxzWlM5cFkyOXVMM2RsZFdsZlptOXVkQzVzWlhOeklpd2ljM1I1YkdVdmFXTnZiaTkzWlhWcFgybGpiMjVmWm05dWRDNXNaWE56SWl3aWMzUjViR1V2ZDJsa1oyVjBMM2RsZFdsZlluVjBkRzl1TDNkbGRXbGZZblYwZEc5dUxteGxjM01pTENKemRIbHNaUzkzYVdSblpYUXZkMlYxYVY5aWRYUjBiMjR2ZDJWMWFWOWlkRzVmWjJ4dlltRnNMbXhsYzNNaUxDSnpkSGxzWlM5aVlYTmxMMjFwZUdsdUwyMXZZbWxzWlM1c1pYTnpJaXdpYzNSNWJHVXZkMmxrWjJWMEwzZGxkV2xmWW5WMGRHOXVMM2RsZFdsZlluUnVYMlJsWm1GMWJIUXViR1Z6Y3lJc0luTjBlV3hsTDNkcFpHZGxkQzkzWlhWcFgySjFkSFJ2Ymk5M1pYVnBYMkowYmw5d2NtbHRZWEo1TG14bGMzTWlMQ0p6ZEhsc1pTOTNhV1JuWlhRdmQyVjFhVjlpZFhSMGIyNHZkMlYxYVY5aWRHNWZkMkZ5Ymk1c1pYTnpJaXdpYzNSNWJHVXZkMmxrWjJWMEwzZGxkV2xmWW5WMGRHOXVMM2RsZFdsZlluUnVYMlJwYzJGaWJHVmtMbXhsYzNNaUxDSnpkSGxzWlM5M2FXUm5aWFF2ZDJWMWFWOWlkWFIwYjI0dmQyVjFhVjlpZEc1ZmNHeGhhVzR1YkdWemN5SXNJbk4wZVd4bEwzZHBaR2RsZEM5M1pYVnBYMk5sYkd3dmQyVjFhVjlqWld4c1gyZHNiMkpoYkM1c1pYTnpJaXdpYzNSNWJHVXZZbUZ6WlM5dGFYaHBiaTl6WlhSUGJtVndlQzVzWlhOeklpd2ljM1I1YkdVdmQybGtaMlYwTDNkbGRXbGZZMlZzYkM5M1pYVnBYMkZqWTJWemN5NXNaWE56SWl3aWMzUjViR1V2WW1GelpTOXRhWGhwYmk5elpYUkJjbkp2ZHk1c1pYTnpJaXdpYzNSNWJHVXZkMmxrWjJWMEwzZGxkV2xmWTJWc2JDOTNaWFZwWDJOb1pXTnJMM2RsZFdsZlkyaGxZMnRmWTI5dGJXOXVMbXhsYzNNaUxDSnpkSGxzWlM5M2FXUm5aWFF2ZDJWMWFWOWpaV3hzTDNkbGRXbGZZMmhsWTJzdmQyVjFhVjl5WVdScGJ5NXNaWE56SWl3aWMzUjViR1V2ZDJsa1oyVjBMM2RsZFdsZlkyVnNiQzkzWlhWcFgyTm9aV05yTDNkbGRXbGZZMmhsWTJ0aWIzZ3ViR1Z6Y3lJc0luTjBlV3hsTDNkcFpHZGxkQzkzWlhWcFgyTmxiR3d2ZDJWMWFWOW1iM0p0TDNkbGRXbGZabTl5YlY5amIyMXRiMjR1YkdWemN5SXNJbk4wZVd4bEwzZHBaR2RsZEM5M1pYVnBYMk5sYkd3dmQyVjFhVjltYjNKdEwzZGxkV2xmYzJWc1pXTjBMbXhsYzNNaUxDSnpkSGxzWlM5M2FXUm5aWFF2ZDJWMWFWOWpaV3hzTDNkbGRXbGZabTl5YlM5M1pYVnBYM05sYkdWamRGOWlaV1p2Y21VdWJHVnpjeUlzSW5OMGVXeGxMM2RwWkdkbGRDOTNaWFZwWDJObGJHd3ZkMlYxYVY5bWIzSnRMM2RsZFdsZmMyVnNaV04wWDJGbWRHVnlMbXhsYzNNaUxDSnpkSGxzWlM5M2FXUm5aWFF2ZDJWMWFWOWpaV3hzTDNkbGRXbGZabTl5YlM5M1pYVnBYM1pqYjJSbExteGxjM01pTENKemRIbHNaUzkzYVdSblpYUXZkMlYxYVY5alpXeHNMM2RsZFdsZmMzZHBkR05vTG14bGMzTWlMQ0p6ZEhsc1pTOTNhV1JuWlhRdmQyVjFhVjlqWld4c0wzZGxkV2xmZFhCc2IyRmtaWEl1YkdWemN5SXNJbk4wZVd4bEwzZHBaR2RsZEM5M1pYVnBYM0JoWjJVdmQyVjFhVjl0YzJjdWJHVnpjeUlzSW5OMGVXeGxMM2RwWkdkbGRDOTNaWFZwWDNCaFoyVXZkMlYxYVY5aGNuUnBZMnhsTG14bGMzTWlMQ0p6ZEhsc1pTOTNhV1JuWlhRdmQyVjFhVjl3Y205bmNtVnpjeTkzWlhWcFgzQnliMmR5WlhOekxteGxjM01pTENKemRIbHNaUzkzYVdSblpYUXZkMlYxYVY5bmNtbGtMM2RsZFdsZlozSnBaQzVzWlhOeklpd2ljM1I1YkdVdmQybGtaMlYwTDNkbGRXbGZkR2x3Y3k5M1pYVnBYMlJwWVd4dlp5NXNaWE56SWl3aWMzUjViR1V2ZDJsa1oyVjBMM2RsZFdsZmRHbHdjeTkzWlhWcFgzUnZZWE4wTG14bGMzTWlMQ0p6ZEhsc1pTOTNhV1JuWlhRdmQyVjFhVjkwYVhCekwzZGxkV2xmYldGemF5NXNaWE56SWl3aWMzUjViR1V2ZDJsa1oyVjBMM2RsZFdsZmRHbHdjeTkzWlhWcFgyRmpkR2x2Ym5Ob1pXVjBMbXhsYzNNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlJVRTdSVUZEU1N3d1FrRkJRVHRGUVVOQkxEaENRVUZCT3p0QlFVZEtPMFZCUTBrc1owSkJRVUU3UlVGRFFTeGhRMUpOTERoRFJGRk9PenRCUVVkS08wVkJRMGtzVTBGQlFUdEZRVU5CTEZWQlFVRTdPMEZCUjBvc1EwRkJSVHRGUVVORkxGTkJRVUU3TzBGQlIwbzdSVUZEU1N4eFFrRkJRVHM3UVVWMFFrbzdSVUZEU1N4dFFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNZVUZCWVN4TlFVRmlPMFZCUTBFc1UwRkJVeXhwYlV0QlFXbHRTeXhQUVVGUExHbENRVU0zYlVzc2VYSlNRVUY1Y2xJc1QwRkJUeXhoUVVOb2MxSXNhV2xPUVVGcGFVNHNUMEZCVHl4TlFVWTFhVTQ3TzBGQlMwb3NjVUpCUVhGQ08wRkJRVk1zYzBKQlFYTkNPMFZCUTJoRUxHRkJRV0VzVFVGQllqdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeFhRVUZCTzBWQlJVRXNjVUpCUVVFN1JVRkRRU3h6UWtGQlFUdEZRVU5CTEhkQ1FVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNhMEpCUVVFN096dEZRVWxCTEc5Q1FVRkJPMFZCUTBFc2IwSkJRVUU3TzBWQlIwRXNaMEpCUVVFN096dEZRVWxCTEdsQ1FVRkJPenM3T3pzN1FVRlRTaXhwUWtGQmFVSTdSVUZCVlN4VFFVRlRMRTlCUVZRN096dEJRVU16UWl4dFFrRkJiVUk3UlVGQlZTeFRRVUZUTEU5QlFWUTdPenRCUVVNM1FpeGxRVUZsTzBWQlFWVXNVMEZCVXl4UFFVRlVPenM3UVVGRGVrSXNkVUpCUVhWQ08wVkJRVlVzVTBGQlV5eFBRVUZVT3pzN1FVRkRha01zYjBKQlFXOUNPMFZCUVZVc1UwRkJVeXhQUVVGVU96czdRVUZET1VJc2EwSkJRV3RDTzBWQlFWVXNVMEZCVXl4UFFVRlVPenM3UVVGRE5VSXNlVUpCUVhsQ08wVkJRVlVzVTBGQlV5eFBRVUZVT3pzN1FVRkRia01zTkVKQlFUUkNPMFZCUVZVc1UwRkJVeXhQUVVGVU96czdRVUZEZEVNc2EwSkJRV3RDTzBWQlFWVXNVMEZCVXl4UFFVRlVPenM3UVVGRE5VSXNlVUpCUVhsQ08wVkJRVlVzVTBGQlV5eFBRVUZVT3pzN1FVRkRia01zWlVGQlpUdEZRVUZWTEZOQlFWTXNUMEZCVkRzN08wRkJRM3BDTEhOQ1FVRnpRanRGUVVGVkxGTkJRVk1zVDBGQlZEczdPMEZCUTJoRExHbENRVUZwUWp0RlFVRlZMRk5CUVZNc1QwRkJWRHM3TzBGQlF6TkNMR2xDUVVGcFFqdEZRVUZUTEZOQlFWTXNUMEZCVkRzN08wRkRjRVF4UWl4eFFrRkJjVUk3UVVGQlV5eHpRa0ZCYzBJN1JVRkRhRVFzVTBGQlFUczdRVUZKUVN4clFrRkJhMEk3UlVGRFpDeGxRVUZCTzBWQlEwRXNZMEZCUVRzN1FVRkZTaXhyUWtGQmEwSTdSVUZEWkN4bFFVRkJPMFZCUTBFc1kwRkJRVHM3UVVGRlNpeGxRVUZsTzBWQlExZ3NaVUZCUVR0RlFVTkJMR05CUVVFN08wRkJSVW9zWlVGQlpUdEZRVU5ZTEdWQlFVRTdSVUZEUVN4alFVRkJPenRCUVVkS0xIbENRVUY1UWp0RlFVTnlRaXhsUVVGQk8wVkJRMEVzWTBGQlFUczdRVUZGU2l3MFFrRkJORUk3UlVGRGVFSXNaVUZCUVR0RlFVTkJMR05CUVVFN08wRkJSVW9zZVVKQlFYbENPMFZCUTNKQ0xHVkJRVUU3UlVGRFFTeGpRVUZCT3p0QlFVVktMR2xDUVVGcFFqdEZRVU5pTEdWQlFVRTdSVUZEUVN4alFVRkJPenRCUVVWS0xHMUNRVUZ0UWp0RlFVTm1MR1ZCUVVFN1JVRkRRU3hqUVVGQk96dEJRVWRLTEhOQ1FVRnpRanRGUVVOc1FpeGxRVUZCTzBWQlEwRXNZMEZCUVRzN1FVRkhTaXgxUWtGQmRVSTdSVUZEYmtJc1kwRkJRVHM3UVVGRlNpeHZRa0ZCYjBJN1JVRkRhRUlzWTBGQlFUczdRVUZIU2l4cFFrRkJhVUk3UlVGRFlpeGpRVUZCTzBWQlEwRXNaVUZCUVRzN1FVRkhTaXhwUWtGQmFVSTdSVUZEWWl4alFVRkJPMFZCUTBFc1pVRkJRVHM3UVVGTFNpeGpRVUZqTzBWQlExWXNaMEpCUVVFN08wRkJRMEVzWlVGQlpTeGpRVVpNTzBWQlIwNHNZMEZCUVRzN1FVRk5VaXhsUVVGbE8wVkJRMWdzWjBKQlFVRTdPMEZETVVWS0xGTkJRVU03UlVGRFJ5eG5Ra0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEhGQ1FVRkJPenRCUVV0S0xFMUJRVU03UVVGQlJDeExRVUZETzBWQlEwY3NWMEZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hWUVVGQk8wVkJRMEVzZDBKQlFVRTdPMEZCUTBFc1RVRk1TQ3hUUVV0Sk8wRkJRVVFzUzBGTVNDeFRRVXRKTzBWQlEwY3NWVUZCUVRzN1FVRkhVaXhOUVVGRE8wRkJRVVFzUzBGQlF6dEJRVUZwUWl4TlFVRkRPMEZCUVVRc1MwRkJRenRGUVVObUxGZEJRVUU3T3p0QlFVdFNMRk5CUVZVN1JVRkRUaXhuUWtGQlFUczdRVUZIU2l4VFFVRlRMR2RDUVVGcFFpeFpRVUZYTzBWQlEycERMR2RDUVVGQk8wVkJRMEVzYVVKQlFVRTdPMEZCUjBvN1JVRkRTU3dyUWtGQlFUczdRVUZEUVN4alFVRkRPMFZCUTBjc2NVSkJRVUU3UlVGRFFTeGhRVUZCT3p0QlFVWktMR05CUVVNc2NVSkJSMGM3UlVGRFNTeG5Ra0ZCUVR0RlFVTkJMR3RDUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN4UFFVRkJPenRCUVVOQkxHTkJWRkFzY1VKQlIwY3NWVUZOU3p0RlFVTkhMR1ZCUVVFN08wRkRhRVJvUWp0RlFVTkpMR3RDUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeHhRa0ZCUVR0RlFVTkJMR05CUVVFN1JVRkRRU3gxUWtGQlFUdEZRVU5CTEd0Q1FVRkJPMFZEWWtFc05rTkJRVUU3UlVSbFFTeG5Ra0ZCUVRzN1FVRkRRU3hUUVVGRE8wVkJRMGNzVTBGQlV5eEhRVUZVTzBWQlEwRXNWMEZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEUxQlFVRTdSVUZEUVN4UFFVRkJPMFZCUTBFc2IwTkJRVUU3UlVGRFFTeFhRVUZYTEZWQlFWZzdSVUZEUVN4eFFrRkJRVHRGUVVOQkxITkNRVUZCTzBWQlEwRXNiVUpCUVVFN08wRkJSMG9zVTBGQlF6dEZRVU5ITEhGQ1FVRkJPenRCUlM5Q1VqdEZRVU5KTEhsQ1FVRkJPMFZCUTBFc1kwRkJRVHM3UVVGRFFTeHBRa0ZCUXl4SlFVRkpMRzlDUVVGdlFqdEZRVU55UWl4alFVRkJPenRCUVVWS0xHbENRVUZETEVsQlFVa3NiMEpCUVc5Q08wVkJRM0pDTEdOQlFVRTdSVUZEUVN4NVFrRkJRVHM3UVVOU1VqdEZRVU5KTEhsQ1FVRkJPenRCUVVOQkxHbENRVUZETEVsQlFVa3NiMEpCUVc5Q08wVkJRM0pDTEdOQlFVRTdPMEZCUlVvc2FVSkJRVU1zU1VGQlNTeHZRa0ZCYjBJN1JVRkRja0lzSzBKQlFVRTdSVUZEUVN4NVFrRkJRVHM3UVVOUVVqdEZRVU5KTEhsQ1FVRkJPenRCUVVOQkxHTkJRVU1zU1VGQlNTeHZRa0ZCYjBJN1JVRkRja0lzWTBGQlFUczdRVUZGU2l4alFVRkRMRWxCUVVrc2IwSkJRVzlDTzBWQlEzSkNMQ3RDUVVGQk8wVkJRMEVzZVVKQlFVRTdPMEZEVUZJN1JVRkRTU3dyUWtGQlFUczdRVUZEUVN4clFrRkJRenRGUVVOSExHTkJRVUU3TzBGRFNGSTdSVUZEU1N4alFVRkJPMFZCUTBFc2VVSkJRVUU3TzBGQlEwRXNUVUZCVFR0QlFVRkhMRXRCUVVzN1JVRkRWaXhwUWtGQlFUdEZRVU5CTERaQ1FVRkJPenRCUVVWS0xIVkNRVUZETzBWQlEwY3NjVUpCUVVFN08wRkJSVW9zZFVKQlFVTTdSVUZEUnl4bFFVRkJPenRCUVVsU08wVkJRMGtzWTBGQlFUdEZRVU5CTEhsQ1FVRkJPenRCUVVOQkxFMUJRVTA3UVVGQlJ5eExRVUZMTzBWQlExWXNhVUpCUVVFN1JVRkRRU3cyUWtGQlFUczdRVUZGU2l4MVFrRkJRenRGUVVOSExHVkJRVUU3TzBGRGRrSlNPMFZCUlVrc2EwSkJRVUU3TzBGQlEwRXNWVUZCUXp0RlEwaEVMRk5CUVZNc1IwRkJWRHRGUVVOQkxHdENRVUZCTzBWQlEwRXNUMEZCUVR0RlFVTkJMRTFCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTERaQ1FVRkJPMFZCUTBFc1kwRkJRVHRGUVVOQkxIRkNRVUZCTzBWQlEwRXNWMEZCVnl4WFFVRllPMFZFU2trc1ZVRkJRVHM3UVVGSFFTeFZRVVJJTEZsQlEwazdSVUZEUnl4aFFVRkJPenRCUVV0YU8wVkJRMGtzZDBKQlFVRTdSVUZEUVN4NVFrRkJRVHRGUVVOQkxIVkNRVUZCTzBWQlEwRXNaVUZCUVR0RlFVVkJMR2RDUVVGQk8wVkJSMEVzYTBKQlFVRTdPMEZCUTBFc1YwRkJRenRGUTNoQ1JDeFRRVUZUTEVkQlFWUTdSVUZEUVN4clFrRkJRVHRGUVVOQkxFOUJRVUU3UlVGRFFTeE5RVUZCTzBWQlEwRXNWMEZCUVR0RlFVTkJMRmRCUVVFN1JVRkRRU3cyUWtGQlFUdEZRVU5CTEdOQlFVRTdSVUZEUVN4eFFrRkJRVHRGUVVOQkxGZEJRVmNzVjBGQldEczdRVVJyUWtFc1YwRkJRenRGUTJSRUxGTkJRVk1zUjBGQlZEdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc1QwRkJRVHRGUVVOQkxGTkJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNWMEZCUVR0RlFVTkJMR2REUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEhkQ1FVRkJPMFZCUTBFc1YwRkJWeXhYUVVGWU96dEJSRlZLTzBWQlEwa3NhVUpCUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNaVUZCUVRzN1FVRkZRU3hwUWtGQlJUdEZRVU5GTEdGQlFVRTdPMEZCU1ZJN1JVRkRTU3huUWtGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNaVUZCUVRzN1FVRkhTanRGUVVOSkxHdENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hoUVVGQk8wVkJRMEVzYlVKQlFVRTdPMEZCUjBvN1JVRkRTU3hwUWtGQlFUdEZRVU5CTEZkQlFVRTdPMEZCUjBvN1JVRkRTU3hQUVVGQk96dEJSV3hGU2l4clFrRkRTU3hYUVVGVkxFbEJRVWs3UlZKRVpDdzJRMEZCUVRzN1FWRkpTU3hyUWtGSVNpeFhRVUZWTEVsQlFVa3NXVUZIVkR0RlFVTkhMSGxDUVVGQk96dEJRVXhhTEd0Q1FWRkpMRVZCUVVNN1JVRkRSeXhqUVVGQk96dEJRVWRCTEd0Q1FVUktMR05CUTBzN1JVRkRSeXhUUVVGVExFZEJRVlE3UlVNclJsSXNjVUpCUVVFN1JVRkRRU3hYUVVGWExHRkJRVmc3UlVGbVFTeFhRVUZCTzBWQlEwRXNWVUZCUVR0RlFVeEJMSGxDUVVGQk8wVkJjMEpCTEhGQ1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMRk5CUVVFN1JVUndSMUVzVTBGQlFUdEZRVU5CTEdsQ1FVRkJPenRCUldoQ1dqdEZWa0ZKTERaRFFVRkJPenRCVlVsS08wVkJRMGtzYTBKQlFVRTdSVUZEUVN4aFFVRkJPenRCUTB4S0xHbENRVU5KTzBWQlEwa3NiMEpCUVVFN08wRkJSMEVzYVVKQlJFb3NWMEZEU3p0RlFVTkhMSGxDUVVGQk96dEJRVk5KTEdsQ1FVaE5MRmxCUTJJc1VVRkRTeXh4UWtGRFJ6dEZRVU5ITEZOQlFWTXNUMEZCVkR0RlFVTkJMR05CUVVFN1JVRkRRU3hsUVVGQk96dEJRMjVDY0VJc2IwSkJRMGs3UlVGRFNTeHhRa0ZCUVRzN1FVRkhRU3h2UWtGRVNpeFhRVU5MTzBWQlEwY3NlVUpCUVVFN08wRkJTVW9zYjBKQlJFb3NiVUpCUTBzN1JVRkRSeXhUUVVGVExFOUJRVlE3UlVGRFFTeGpRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMR05CUVVFN08wRkJWMGtzYjBKQlNGTXNXVUZEYUVJc1VVRkRTeXh4UWtGRFJ6dEZRVU5ITEZOQlFWTXNUMEZCVkR0RlFVTkJMR05CUVVFN08wRkRNMEp3UWp0RlFVTkZMR05CUVVFN1JVRkRRU3hWUVVGQk96dEJRVVZHTzBWQlEwa3NWMEZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3hWUVVGQk8wVkJRMEVzZDBKQlFVRTdSVUZEUVN3MlFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNZMEZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRMEVzZFVKQlFVRTdPMEZCUjBFc1YwRkJRenRCUVVFMlFpeFhRVUZETzBWQlF6TkNMSGRDUVVGQk8wVkJRMEVzVTBGQlFUczdRVUZIVWp0RlFVTkpMR05CUVVFN1JVRkRRU3hUUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4alFVRkJPMFZCUTBFc1kwRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNWVUZCUVRzN1FVRkhTanRGUVVOSkxHTkJRVUU3UlVGRFFTeHBRa0ZCUVRzN1FVRkRRU3hsUVVGblFqdEZRVU5hTEdOQlFVRTdPMEZCU1ZJN1JVRkRTU3hoUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEcxQ1FVRnRRaXhoUVVGdVFqdEZRVU5CTEZkQlFVRTdSVUZEUVN4TlFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeGxRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzVlVGQlFUczdRVUZEUVN4aFFVRkRPMFZCUTBjc2VVSkJRVUU3TzBGQlIxSXNaMEpCUTBrN1JVRkRTU3hqUVVGQk96dEJRVVpTTEdkQ1FVTkpMR2RDUVVWSk8wVkJRV2RDTEhGQ1FVRkJPenRCUVVoNFFpeG5Ra0ZMU1R0RlFVTkpMRzFDUVVGQk96dEJRVTVTTEdkQ1FWRkpPMFZCUVdNc1dVRkJRVHM3UVVGU2JFSXNaMEpCVTBrN1JVRkRTU3hoUVVGQk96dEJRMnBGVWp0RlFVTkpMRlZCUVVFN08wRkJSRW9zYVVKQlJVazdSVUZEU1N4dFFrRkJRVHM3UVVGTlFTeHBRa0ZFU2l4alFVTkxPMFZCUTBjc1UwRkJVeXhIUVVGVU8wVk1hMGRTTEhGQ1FVRkJPMFZCUTBFc1YwRkJWeXhoUVVGWU8wVkJaa0VzVjBGQlFUdEZRVU5CTEZWQlFVRTdSVUZNUVN4NVFrRkJRVHRGUVhOQ1FTeHhRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4VFFVRkJPMFZMZEVkUkxHdENRVUZCTzBWQlEwRXNVVUZCUVR0RlFVTkJMRmRCUVVFN1JVRkRRU3huUWtGQlFUczdRVUZMV2p0RlFVTkpMSGRDUVVGQk8wVkJRMEVzVTBGQlFUdEZRVU5CTEZWQlFVRTdSVUZEUVN3MlFrRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEZWQlFVRTdSVUZEUVN4clFrRkJRVHM3UVVNNVFrbzdSVUZEU1N4dFFrRkJRVHM3UVVGRVNpeHRRa0ZGU1R0RlFVRmhMRmRCUVVFN08wRkJSbXBDTEcxQ1FVZEpPMFZCUTBrc2EwSkJRVUU3TzBGQlEwRXNiVUpCUmtvc1kwRkZTenRGVW1sRFRDeFRRVUZUTEVkQlFWUTdSVUZEUVN4clFrRkJRVHRGUVVOQkxGRkJRVUU3UlVGRFFTeE5RVUZCTzBWQlEwRXNWVUZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3dyUWtGQlFUdEZRVU5CTEdOQlFVRTdSVUZEUVN4M1FrRkJRVHRGUVVOQkxGZEJRVmNzVjBGQldEczdRVkYyUTBrc2JVSkJURW9zWTBGTFN6dEZRVU5ITEZOQlFWTXNSMEZCVkR0RlRtdEhVaXh4UWtGQlFUdEZRVU5CTEZkQlFWY3NZVUZCV0R0RlFXWkJMRmRCUVVFN1JVRkRRU3hWUVVGQk8wVkJURUVzZVVKQlFVRTdSVUZ6UWtFc2NVSkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMR3RDUVVGQk8wVkJRMEVzVTBGQlFUdEZUWFJIVVN4clFrRkJRVHRGUVVOQkxGRkJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNaMEpCUVVFN08wRkJabG9zYlVKQmEwSkpPMFZCUTBrc2EwSkJRVUU3TzBGQlEwRXNiVUpCUmtvc1kwRkZTenRGUVVOSExHRkJRVUU3TzBGRGNrSmFPMFZCUTBrc2EwSkJRVUU3TzBGRFJrbzdSVUZEU1N4alFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeHBRa0ZCUVRzN1FVRklTaXhYUVVsSkxHTkJRMGs3UlVGRFNTeG5Ra0ZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3h6UWtGQlFUczdRVU5TV2p0RlFVTkpMR2RDUVVGQk8wVkJRMEVzYlVKQlFVRTdPMEZCUlVvN1JVRkRTU3huUWtGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc1YwRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTeDVRa0ZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEhOQ1FVRkJPMFZCUTBFc2JVSkJRVUU3TzBGQlEwRXNXVUZCUXp0RlFVTkhMRk5CUVZNc1IwRkJWRHRGUVVOQkxHdENRVUZCTzBWQlEwRXNUVUZCUVR0RlFVTkJMRTlCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2VVSkJRVUU3UlVGRFFTeDVRa0ZCUVRzN1FVRkZTaXhaUVVGRE8wVkJRMGNzVTBGQlV5eEhRVUZVTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hOUVVGQk8wVkJRMEVzVDBGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeDVRa0ZCUVR0RlFVTkJMSGREUVVGQk8wVkJRMEVzZVVKQlFVRTdPMEZCUjBvc1dVRkJRenRGUVVOSExIRkNRVUZCTzBWQlEwRXNlVUpCUVVFN08wRkJRMEVzV1VGSVNDeFJRVWRKTzBWQlEwY3NWMEZCVnl4UlFVRllPenRCUVVWS0xGbEJUa2dzVVVGTlNUdEZRVU5ITEZkQlFWY3NaMEpCUVZnN08wRkRkRU5hTzBWQlEwa3NZMEZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzWlVGQlFUczdRVUZJU2l4cFFrRkpTVHRGUVVOSkxHTkJRVUU3TzBGQlIxSTdSVUZEU1N4dFFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNaMEpCUVVFN08wRkJSMG83UlVGRFNTeG5Ra0ZCUVRzN1FVRkZTanRGUVVOSkxGZEJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMR3RDUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4dFEwRkJRVHRGUVVOQkxITkNRVUZCT3p0QlFVVktPMFZCUTBrc2EwSkJRVUU3TzBGQlEwRXNjVUpCUVVNN1JVRkRSeXhUUVVGVExFZEJRVlE3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMRTFCUVVFN1JVRkRRU3hSUVVGQk8wVkJRMEVzVTBGQlFUdEZRVU5CTEU5QlFVRTdSVUZEUVN4dlEwRkJRVHM3UVVGVVVpeHhRa0ZYU1R0RlFVTkpMR3RDUVVGQk8wVkJRMEVzVVVGQlFUdEZRVU5CTEZOQlFVRTdSVUZEUVN4WFFVRlhMSEZDUVVGWU8wVkJRMEVzWTBGQlFUczdRVUZvUWxJc2NVSkJhMEpKTzBWQlEwa3NZMEZCUVRzN1FVRkpVanRGUVVOSkxGZEJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMR2xDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc1dVRkJRVHRGUVVOQkxIbENRVUZCT3p0QlFVTkJMSGRDUVVGRE8wRkJRVk1zZDBKQlFVTTdSVUZEVUN4VFFVRlRMRWRCUVZRN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEZGQlFVRTdSVUZEUVN4VFFVRkJPMFZCUTBFc1YwRkJWeXh4UWtGQldEdEZRVU5CTEhsQ1FVRkJPenRCUVVWS0xIZENRVUZETzBWQlEwY3NWVUZCUVR0RlFVTkJMR05CUVVFN08wRkJSVW9zZDBKQlFVTTdSVUZEUnl4aFFVRkJPMFZCUTBFc1YwRkJRVHM3UVVGRlNpeDNRa0ZCUXp0RlFVTkhMSEZDUVVGQk96dEJRVU5CTEhkQ1FVWklMRTlCUlVrN1FVRkJVeXgzUWtGR1lpeFBRVVZqTzBWQlExQXNlVUpCUVVFN08wRkJTVm83UlVGRFNTeHJRa0ZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3hOUVVGQk8wVkJRMEVzVDBGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxEWkRRVUZCT3p0QlF6bEdTanRGUVVOSkxHbENRVUZCTzBWQlEwRXNhMEpCUVVFN08wRkJSa29zVTBGSlNUdEZRVU5KTEcxQ1FVRkJPenRCUVV4U0xGTkJVVWs3UlVGRFNTeHRRa0ZCUVR0RlFVTkJMR1ZCUVVFN08wRkJWbElzVTBGWlNUdEZRVU5KTEd0Q1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeGxRVUZCT3p0QlFXWlNMRk5CYVVKSk8wVkJRMGtzWlVGQlFUdEZRVU5CTEZkQlFVRTdPMEZCYmtKU0xGTkJjMEpKTzBWQlEwa3NiVUpCUVVFN08wRkJka0pTTEZOQk1FSkpPMFZCUTBrc2JVSkJRVUU3UlVGRFFTeGxRVUZCTzBWQlEwRXNWMEZCUVRzN1FVRTNRbElzVTBFd1Fra3NhVUpCU1VrN1JVRkJSU3hqUVVGQk96dEJRVmxVTEcxQ1FWSTBSRHRGUVVONlJEdEpRVU5KTEdWQlFVRTdTVUZEUVN4UFFVRkJPMGxCUTBFc1UwRkJRVHRKUVVOQkxGZEJRVUU3U1VGRFFTeHJRa0ZCUVRzN08wRkRla05TTzBWQlEwa3NhMEpCUVVFN1JVRkRRU3hsUVVGQk96dEJRVVpLTEdGQlIwazdSVUZEU1N4dlFrRkJRVHM3UVVGS1VpeGhRVTFKTzBWQlEwa3NaVUZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzYjBKQlFVRTdPMEZCVkZJc1lVRlhTVHRGUVVOSkxHVkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMRzFDUVVGQk96dEJRV1JTTEdGQlowSkpPMFZCUTBrc1owSkJRVUU3UlVGRFFTeGxRVUZCT3p0QlEyeENVanRGUVVOSkxHRkJRVUU3UlVGRFFTeHRRa0ZCUVRzN1FVRkhTanRGUVVOSkxIbENRVUZCTzBWQlEwRXNWMEZCUVR0RlFVTkJMRTlCUVVFN08wRkJSMG83UlVGRFNTeFJRVUZCTzBWQlEwRXNXVUZCUVR0RlFVTkJMSGxDUVVGQk96dEJRVWRLTzBWQlEwa3NZMEZCUVR0RlFVTkJMR2xDUVVGQk8wVkJRMEVzV1VGQlFUczdRVU53UWtvN1JVRkRTU3hyUWtGQlFUdEZRVU5CTEdkQ1FVRkJPenRCUVVWQkxGZEJRVU03UldoQ1NrUXNVMEZCVXl4SFFVRlVPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeFBRVUZCTzBWQlEwRXNUVUZCUVR0RlFVTkJMRmRCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzTmtKQlFVRTdSVUZEUVN4alFVRkJPMFZCUTBFc2NVSkJRVUU3UlVGRFFTeFhRVUZYTEZkQlFWZzdPMEZuUWtaQkxGZEJRVU03UldoQ2JVSkVMRk5CUVZNc1IwRkJWRHRGUVVOQkxHdENRVUZCTzBWQlEwRXNUMEZCUVR0RlFVTkJMRTFCUVVFN1JVRkRRU3hWUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTERoQ1FVRkJPMFZCUTBFc1kwRkJRVHRGUVVOQkxIRkNRVUZCTzBWQlEwRXNWMEZCVnl4WFFVRllPenRCWjBKMlFrbzdSVUZEU1N4clFrRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzYzBKQlFVRTdPMEZCUlVFc1ZVRkJRenRGYUVKdlFrUXNVMEZCVXl4SFFVRlVPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeFJRVUZCTzBWQlEwRXNUVUZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzSzBKQlFVRTdSVUZEUVN4alFVRkJPMFZCUTBFc2QwSkJRVUU3UlVGRFFTeFhRVUZYTEZkQlFWZzdSV2RDTTBKSkxGZEJRVUU3TzBGQlJVb3NWVUZCUXp0RmFFSldSQ3hUUVVGVExFZEJRVlE3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMRTlCUVVFN1JVRkRRU3hUUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4blEwRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeDNRa0ZCUVR0RlFVTkJMRmRCUVZjc1YwRkJXRHM3UVdkQ1MwRXNWVUZCUXp0RlFVTkhMSGxDUVVGQk96dEJRVWxTTzBWQlEwa3NWMEZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3hqUVVGQk96dEJRVWhLTEdWQlMwazdSVUZEU1N4alFVRkJPMFZCUTBFc1YwRkJRVHRGUVVOQkxGbEJRVUU3TzBGQlIwb3NaVUZCUlR0RlFVTkZMR1ZCUVVFN08wRkJTVkk3UlVGRFNTeGpRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzWlVGQlFUczdRVU12UTBvN1JVRkRTU3hsUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEZWQlFVRTdSVUZEUVN4UlFVRkJPMFZCUTBFc1UwRkJRVHRGUVVOQkxGZEJRVmNzY1VKQlFWZzdSVUZGUVN4NVFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNhMEpCUVVFN08wRkJRMEVzYjBKQlFYRkNMR0ZCUTJwQ08wVkJRMGtzZDBKQlFVRTdPMEZCUmxJc2IwSkJRWEZDTEdGQlNXcENPMFZCUTBrc1owSkJRVUU3TzBGQlMxbzdSVUZEU1N4eFFrRkJRVHM3UVVGSFNqdEZRVU5KTEdkQ1FVRkJPMFZCUTBFc1pVRkJRVHM3UVVGSFNqdEZRVU5KTEdWQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc1YwRkJRVHM3UVVGSFNqdEZRVU5KTEd0Q1FVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hoUVVGQk96dEJRVXhLTEdWQlRVazdSVUZEU1N4alFVRkJPMFZCUTBFc1QwRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeHhRa0ZCUVR0RmVFSnVSRW9zTmtOQlFVRTdPMEYzUW5GRVNTeGxRVTVLTEVWQlRVczdSVUZEUnl4NVFrRkJRVHM3UVVGSFVpeGxRVUZETzBWcVFucEVSQ3hUUVVGVExFZEJRVlE3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMRTlCUVVFN1JVRkRRU3hOUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN3MlFrRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeHhRa0ZCUVR0RlFVTkJMRmRCUVZjc1YwRkJXRHM3UVdsQ2IwUkJMRzlDUVVGeFFpeG5Ra0ZEYWtJN1JVRkRTU3hyUWtGQlFUczdRVUZEUVN4dlFrRklZU3huUWtGRGFrSXNSVUZGU3p0RmFrSjBRMVFzVTBGQlV5eEhRVUZVTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hQUVVGQk8wVkJRMEVzVFVGQlFUdEZRVU5CTEZWQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc09FSkJRVUU3UlVGRFFTeGpRVUZCTzBWQlEwRXNjVUpCUVVFN1JVRkRRU3hYUVVGWExGZEJRVmc3TzBGcFFtdERXU3h2UWtGU1V5eG5Ra0ZEYWtJc1JVRk5TeXhaUVVOSk8wVkJRMGNzWVVGQlFUczdRVUZSYUVJc1owSkJRVU03UlVGRFJ5eGpRVUZCT3p0QlFVVktMR2RDUVVGRE8wVkJRMGNzWTBGQlFUczdRVUZUVWl4dFFrRk1jME03UlVGRGJFTTdTVUZEU1N4VlFVRkJPenM3UVVONFJsSTdSVUZEU1N4bFFVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3hUUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4clEwRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hqUVVGQk96dEJRVVZLTzBWQlEwa3NaMEpCUVVFN1JVRkRRU3hqUVVGQk96dEJRVU5CTEdkQ1FVRkRPMFZCUTBjc1UwRkJVeXhQUVVGVU8wVkJRMEVzWTBGQlFUdEZRVU5CTEdWQlFVRTdPMEZCUjFJN1JVRkRTU3huUWtGQlFUczdRVUZKU2l4dFFrRkRTVHRGUVVORkxHVkJRVUU3UlVGRFFTeGxRVUZCT3p0QlFVZE9PMFZCUTBrc2EwSkJRVUU3UlVGRFFTeFZRVUZCTzBWQlEwRXNiVUpCUVVFN1JVRkRRU3hUUVVGQk8wVkJRMEVzVVVGQlFUczdRVUZGU2p0RlFVTkpMR3RDUVVGQk8wVkJRMEVzVTBGQlFUdEZRVU5CTEdGQlFVRTdPMEZCUTBFc2EwSkJRVU03UlVGRFJ5eFRRVUZSTEVkQlFWSTdSVUZEUVN4clFrRkJRVHRGUVVOQkxHRkJRVUU3UlVGRFFTeGpRVUZCTzBWQlEwRXNiVUpCUVVFN1JVRkRRU3huUkVGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc09FSkJRVUU3TzBGQlJVb3NhMEpCUVVNN1JVRkRSeXh0UkVGQlFUczdRVUZEUVN4clFrRkdTQ3hGUVVWSk8wVkJRMGNzVjBGQlZ5eGhRVUZoTEhOQ1FVRjRRanM3UVVGSFVpeHJRa0ZCUXp0RlFVTkhMRzFFUVVGQk96dEJRVU5CTEd0Q1FVWklMRVZCUlVrN1JVRkRSeXhYUVVGWExHTkJRV01zYzBKQlFYcENPenRCUVVkU0xHdENRVUZETzBWQlEwY3NiVVJCUVVFN08wRkJRMEVzYTBKQlJrZ3NSVUZGU1R0RlFVTkhMRmRCUVZjc1kwRkJZeXh6UWtGQmVrSTdPMEZCUjFJc2EwSkJRVU03UlVGRFJ5eHRSRUZCUVRzN1FVRkRRU3hyUWtGR1NDeEZRVVZKTzBWQlEwY3NWMEZCVnl4alFVRmpMSE5DUVVGNlFqczdRVUZIVWl4clFrRkJRenRGUVVOSExHMUVRVUZCT3p0QlFVTkJMR3RDUVVaSUxFVkJSVWs3UlVGRFJ5eFhRVUZYTEdWQlFXVXNjMEpCUVRGQ096dEJRVWRTTEd0Q1FVRkRPMFZCUTBjc2JVUkJRVUU3TzBGQlEwRXNhMEpCUmtnc1JVRkZTVHRGUVVOSExGZEJRVmNzWlVGQlpTeHpRa0ZCTVVJN08wRkJSMUlzYTBKQlFVTTdSVUZEUnl4dFJFRkJRVHM3UVVGRFFTeHJRa0ZHU0N4RlFVVkpPMFZCUTBjc1YwRkJWeXhsUVVGbExITkNRVUV4UWpzN1FVRkhVaXhyUWtGQlF6dEZRVU5ITEcxRVFVRkJPenRCUVVOQkxHdENRVVpJTEVWQlJVazdSVUZEUnl4WFFVRlhMR1ZCUVdVc2MwSkJRVEZDT3p0QlFVZFNMR3RDUVVGRE8wVkJRMGNzYlVSQlFVRTdPMEZCUTBFc2EwSkJSa2dzUlVGRlNUdEZRVU5ITEZkQlFWY3NaVUZCWlN4elFrRkJNVUk3TzBGQlIxSXNhMEpCUVVNN1JVRkRSeXh0UkVGQlFUczdRVUZEUVN4clFrRkdTQ3hGUVVWSk8wVkJRMGNzVjBGQlZ5eGxRVUZsTEhOQ1FVRXhRanM3UVVGSFVpeHJRa0ZCUXp0RlFVTkhMRzlFUVVGQk96dEJRVU5CTEd0Q1FVWklMRWRCUlVrN1JVRkRSeXhYUVVGWExHVkJRV1VzYzBKQlFURkNPenRCUVVkU0xHdENRVUZETzBWQlEwY3NiMFJCUVVFN08wRkJRMEVzYTBKQlJrZ3NSMEZGU1R0RlFVTkhMRmRCUVZjc1pVRkJaU3h6UWtGQk1VSTdPMEZCU1ZvN1JVRkRSVHRKUVVGTExHRkJRVUU3TzBWQlEwdzdTVUZCVVN4aFFVRkJPenRGUVVOU08wbEJRVkVzVlVGQlFUczdSVUZEVWp0SlFVRlRMR0ZCUVVFN08wVkJRMVE3U1VGQlR5eGhRVUZCT3pzN1FVRkRVanRGUVVORE8wbEJRVXNzWVVGQlFUczdSVUZEVER0SlFVRlhMR0ZCUVVFN08wVkJRMWc3U1VGQlZ5eFZRVUZCT3p0RlFVTllPMGxCUVZjc1lVRkJRVHM3UlVGRFdEdEpRVUZQTEdGQlFVRTdPenRCUVVOU08wVkJRME03U1VGQlN5eGhRVUZCT3p0RlFVTk1PMGxCUVZjc1lVRkJRVHM3UlVGRFdEdEpRVUZYTEZWQlFVRTdPMFZCUTFnN1NVRkJWeXhoUVVGQk96dEZRVU5ZTzBsQlFVOHNZVUZCUVRzN08wRkJRMUk3UlVGRFF6dEpRVUZMTEdGQlFVRTdPMFZCUTB3N1NVRkJVeXhoUVVGQk96dEZRVU5VTzBsQlFWTXNWVUZCUVRzN1JVRkRWRHRKUVVGVExHRkJRVUU3TzBWQlExUTdTVUZCVHl4aFFVRkJPenM3UVVGRFVqdEZRVU5ETzBsQlFVc3NZVUZCUVRzN1JVRkRURHRKUVVGWExHRkJRVUU3TzBWQlExZzdTVUZCVnl4VlFVRkJPenRGUVVOWU8wbEJRVmNzWVVGQlFUczdSVUZEV0R0SlFVRlBMR0ZCUVVFN096dEJRVU5TTzBWQlEwTTdTVUZCU3l3d1FrRkJRVHM3UlVGRFREdEpRVUZYTEdGQlFVRTdPMFZCUTFnN1NVRkJWeXhWUVVGQk96dEZRVU5ZTzBsQlFWY3NZVUZCUVRzN1JVRkRXRHRKUVVGUExEQkNRVUZCT3pzN1FVRkRVanRGUVVORE8wbEJRVXNzYVVKQlFVRTdPMFZCUTB3N1NVRkJVeXhoUVVGQk96dEZRVU5VTzBsQlFWTXNWVUZCUVRzN1JVRkRWRHRKUVVGVExHRkJRVUU3TzBWQlExUTdTVUZCVHl4cFFrRkJRVHM3TzBGQlExSTdSVUZEUXp0SlFVRkxMREJDUVVGQk96dEZRVU5NTzBsQlFWY3NZVUZCUVRzN1JVRkRXRHRKUVVGWExGVkJRVUU3TzBWQlExZzdTVUZCVnl4aFFVRkJPenRGUVVOWU8wbEJRVThzTUVKQlFVRTdPenRCUVVOU08wVkJRME03U1VGQlN5d3dRa0ZCUVRzN1JVRkRURHRKUVVGWExHRkJRVUU3TzBWQlExZzdTVUZCVnl4VlFVRkJPenRGUVVOWU8wbEJRVmNzWVVGQlFUczdSVUZEV0R0SlFVRlBMREJDUVVGQk96czdRVUZEVWp0RlFVTkRPMGxCUVVzc2FVSkJRVUU3TzBWQlEwdzdTVUZCVXl4aFFVRkJPenRGUVVOVU8wbEJRVk1zVlVGQlFUczdSVUZEVkR0SlFVRlRMR0ZCUVVFN08wVkJRMVE3U1VGQlR5eHBRa0ZCUVRzN08wRkJRMUk3UlVGRFF6dEpRVUZMTERCQ1FVRkJPenRGUVVOTU8wbEJRVmNzWVVGQlFUczdSVUZEV0R0SlFVRlhMRlZCUVVFN08wVkJRMWc3U1VGQlZ5eGhRVUZCT3p0RlFVTllPMGxCUVU4c01FSkJRVUU3T3p0QlFVTlNPMFZCUTBNN1NVRkJTeXd3UWtGQlFUczdSVUZEVER0SlFVRlhMR0ZCUVVFN08wVkJRMWc3U1VGQlZ5eFZRVUZCT3p0RlFVTllPMGxCUVZjc1lVRkJRVHM3UlVGRFdEdEpRVUZQTERCQ1FVRkJPenM3UVVOMFRWUTdSVUZEU1N4bFFVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNUVUZCUVR0RlFVTkJMRTlCUVVFN1JVRkRRU3c0UWtGQlFUczdRVUZIU2p0RlFVTkpMR1ZCUVVFN1JVRkRRU3hWUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4TlFVRkJPMFZCUTBFc1QwRkJRVHM3UVVGSFNqdEZRVU5KTEdGQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNUVUZCUVR0RlFVTkJMRTlCUVVFN1JVRkRRU3cwUWtGQlFUdEZRVU5CTERCQ1FVRkJPenRCUVVWS08wVkJRMGtzT0VKQlFVRTdPMEZETDBKS08wVkJRMGtzWlVGQlFUdEZRVU5CTEU5QlFVRTdSVUZEUVN4VFFVRkJPMFZCUTBFc1YwRkJWeXhyUWtGQldEdEZRVU5CTERKQ1FVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeDVRa0ZCUVR0RlFVVkJMSGxDUVVGQk96dEJRVVZLTzBWQlEwa3NlVUpCUVVFN08wRkJSVW83UlVGRFNTeGxRVUZCTzBWQlEwRXNlVUpCUVVFN08wRkJSVW83UlVGRFNTeHJRa0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEdWQlFVRTdPMEZCUTBFc2MwSkJRVU03UlhCQ2VFSkVMRk5CUVZNc1IwRkJWRHRGUVVOQkxHdENRVUZCTzBWQlEwRXNUMEZCUVR0RlFVTkJMRTFCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTERaQ1FVRkJPMFZCUTBFc1kwRkJRVHRGUVVOQkxIRkNRVUZCTzBWQlEwRXNWMEZCVnl4WFFVRllPenRCYjBKclFrRXNjMEpCUVVNN1JVRkRSeXg1UWtGQlFUczdRVUZIUVN4elFrRkVTQ3haUVVOSk8wVkJRMGNzWVVGQlFUczdRVUZOV2p0RlFVTkpMRmRCUVZjc1pVRkJXQ0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWtCcGJYQnZjblFnWENKbWJsd2lPMXh1WEc1b2RHMXNJSHRjYmlBZ0lDQXRiWE10ZEdWNGRDMXphWHBsTFdGa2FuVnpkRG9nTVRBd0pUdGNiaUFnSUNBdGQyVmlhMmwwTFhSbGVIUXRjMmw2WlMxaFpHcDFjM1E2SURFd01DVTdYRzU5WEc1Y2JtSnZaSGtnZTF4dUlDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeExqWTdYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJRUJ6WVc1elJtOXVkRHRjYm4xY2JseHVLaUI3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdPMXh1SUNBZ0lIQmhaR1JwYm1jNklEQTdYRzU5WEc1Y2JtRWdhVzFuSUh0Y2JpQWdJQ0JpYjNKa1pYSTZJREE3WEc1OVhHNWNibUVnZTF4dUlDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JuMGlMQ0l2THlCbWIyNTBJR1poYldsc2VWeHVRSE5oYm5OR2IyNTBPbHdpU0dWc2RtVjBhV05oSUU1bGRXVmNJaXhJWld4MlpYUnBZMkVzUVhKcFlXd3NjMkZ1Y3kxelpYSnBaanRjYmtCelpYSnBaa1p2Ym5RNlIyVnZjbWRwWVN3Z1hDSlVhVzFsY3lCT1pYY2dVbTl0WVc1Y0lpeFVhVzFsY3l4elpYSnBaanRjYmtCM2NFWnZiblE2WENKTmFXTnliM052Wm5RZ1dXRklaV2xjSWl4ellXNXpMWE5sY21sbU8xeHVRR0pwZWtadmJuUTZYQ0pJWld4MlpYUnBZMkVnVG1WMVpWd2lMRWhsYkhabGRHbGpZU3hjSWtocGNtRm5hVzV2SUZOaGJuTWdSMEpjSWl4Y0lrMXBZM0p2YzI5bWRDQlpZVWhsYVZ3aUxGd2k1YjZ1NkwydjZadUY2YnVSWENJc1FYSnBZV3dzYzJGdWN5MXpaWEpwWmp0Y2JrQm5iRzlpWVd4R2IyNTBPa0J6WVc1elJtOXVkRHRjYmtCbmJHOWlZV3hHYjI1MFUybDZaVG94TkhCNE8xeHVYRzR2THlCbWIyNTBJR052Ykc5eVhHNUFaMnh2WW1Gc1RHbHVhME52Ykc5eU9pQWpOakUzTkRsQ08xeHVRR2RzYjJKaGJFUmxjMk5EYjJ4dmNqb2dJMEl5UWpKQ01qdGNia0JuYkc5aVlXeFhZWEp1UTI5c2IzSTZJQ05GTmpRek5EQTdYRzVBWjJ4dlltRnNUbWxqYTA1aGJXVkRiMnh2Y2pvZ0l6VTNOa0k1TlR0Y2JrQm5iRzlpWVd4VVpYaDBRMjlzYjNJNklDTTRPRGc3WEc1QVoyeHZZbUZzVkdsMGJHVkRiMnh2Y2pvZ0l6QXdNRHRjYmx4dUx5OWliM0prWlhKY2JrQm5iRzlpWVd4Q2IzSmtaWEpEYjJ4dmNqb2dJMEpEUWtGQ05qdGNibHh1THk5aGNuSnZkMXh1UUdkc2IySmhiRUZ5Y205M1EyOXNiM0k2SUNORE4wTTNRME03WEc1Y2JpOHZZMjl0Y0c5dVpXNTBYRzVBYVhSbGJVRmpkR2wyWlVOdmJHOXlPaUFqUlRSRk5FVTBPMXh1WEc0dkwzQmhaMlZjYmtCd1lXZGxSR1ZtWVhWc2RFSmhZMnRuY205MWJtUkRiMnh2Y2pvalJVWkZSa1kwTzF4dVhHNHZMeUJuWVhCY2JrQm5ZWEExT2pWd2VEdGNia0JuWVhBeE1Eb3hNSEI0TzF4dVFHZGhjREUxT2pFMWNIZzdYRzRpTENKQVptOXVkQzFtWVdObElIdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dibTl5YldGc08xeHVJQ0FnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ1hDSjNaWFZwWENJN1hHNGdJQ0FnYzNKak9pQjFjbXdvSjJSaGRHRTZZWEJ3YkdsallYUnBiMjR2YjJOMFpYUXRjM1J5WldGdE8ySmhjMlUyTkN4a01EbEhVbWRCUWtGQlFVRkJRVGh2UVVFMFFVRkJRVUZIWlhkQlFWRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRbEJWZVRoNVFVRkJRbEpCUVVGQlJWRkJRVUZDVjFGRGJFeG9WMDUwV1ZoQlFVRkJSMGxCUVVGQlQyZEJRVUZWY2xWSlFtVXlXVE5hTUVsQlFVRkJZMUZCUVVGQlMwRkJRVUZEWjBGQlFVRkNiV05IWkhSQlFVRkNNRUZCUVVKYVVVRkJRWFIzYVVwRFVWZFhaR2hqTTBGQlFVRmthMEZCUVVGRFFVRkJRVUZuUVVGQlFWRmFNbmcxV21kQlFVSXlkMEZCUVZOMVFVRkJTRVZyYjFaUFNGWnZXbGRHYTBGQlFVMUlRVUZCUVVSVlFVRkJRVEpEUkZSSldqSm9iMXBYUlVGQlFYaFZRVUZCUVVoUlFVRkJRMUZJYkdkT2FXRkhNVEJsUVVGQlJFaFJRVUZCUVZCQlFVRkJVRVJ4V1VGQlFuTmlNazVvUVVGQlRXaEJRVUZCUTBGQlFVRkJaMFJDV1U0eVZ6Rm9aVWhCUVVGQmVXdEJRVUZCU1VGQlFVRkRRVUZ3VVhVd1ltMUdkRnBSUVVGRVRWRkJRVUZHTmtGQlFVTnVZakpFVERCb2QySXpUakJCUVVGUFVVRkJRVUZJTUVGQlFVUk9UbE0wYW1NelFubGFXRUZCUVVFM1FVRkJRVUZhVVVGQlFVaDJaR0YzVDBabFNuaHFXVWRTSzNkVWFVSm5XbGRDWnpadFMyRlJPRVJCTUUxUWFFZGFPSGRIUkVsNVRWUkJkMDFVUVhsemVVRkdVVk5yZFdGWmQwOU1lR2xtVFZoSVNGQlJMMmw1UjB0UFdXaG9SMnhEV1VWVFVVaEJRVFZKUkVSQ05HNUhUbWRaUjBKdFowZEJXa0pyV1VkRlNFRkNPR2hxUW1aQ1dVZEVVMFJPUW5GUldrZGFaMWxIUmpkNEwyWTRVRlYyUTB0RlZWTk1UVlZFVmtGM1JXcEhPRTlKUW5kQ01YRjNZU3RCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZDTkc1TE1WZGhXRTFVVW5oRFpERlhTRXhPYWpaRFJIaEpNbWRXYmtkamIzZ3lWbkJxVEVOQ1JFYzNSVzlYTkVKNmVXeGxlRU5xYkRGTVpIVTJURlF2ZDBjdlduQmxhMVpUVW1JdmVUQjJRalJrTWtkQmJsWldVVzlUZGpKdE9Tc3hUVGtyZFdWWWNGQlJhM05TWlZkSksyc3pTSGR3Y0hKWk1tRlhWRzVUVldjellrWnhUelJyVUZveVVYTndWVEI2SzB4dmFVTmhURmhWZG5Vd05FcERTVk5uWVhBeGFGTlhRekpRWmtrd2FWUnFVVFE0ZVZkeVdXeDJWM0JUWW5Wc1NtUTVhMkZFSzNGMEszWmlWREJHUjA4elVXdHNUbHAxYUZFcmRWSk1ZVzVEY1VKS1JrMTFNbEpyYWxsMGR6bFdabE5XY21nMWVYWk5aazVWVFVwWlRHOUtTa3hIYlRKRlRXb3JVbTQwTkhoWFIyRXpSMlJvZUVaclZUSlhSekJYUzFKRVRUaHBRMHRRYzJ4d2FXNHhkM2hSVlVRMWIwSnNVMWgyYXpCdmJubEZTRFZGVm1VMVZGUkRia2hLWkhCeVpqbDVWUzgyVWpOUGRubFVhV1Z2ZFhsS1VXWXJVVWhhYTBJemRXNUxMMnRwTUhSdlN6UTJZV1JpUldWb2FYWkNNR1pUWmtWSk5YVlVObkF2YzFWV04xUmhUMEl5VW1GWmJucFJhVmQ1YkdWUlYxQnJTbHBtV1ZCNVYzSm9aazF4V0ZCQ2NsWnJiMDlqUTBadmRtTXlTbVk0WnpZd1NHdGtUV2xYYzIxNVNVeDFhbXMyU1c5UE5saHVTMGhaV1M5eE5DdFBUemxZVTNkWVNWRlVTVTlLWWpGcWEzRTBSVVZaY0ZsaVQyRktSekJGVDFscFUzTnJWMVl4U0hCSVZFcDZlVTlwTTJsTVYwY3ZWSFV6YjFNeVpUQlRZV2MzVFZvMmRHZzBOblJ1UzJwclpVUlRjREF3ZVcxVWRUSnJOWFJIVlVKc1JrdFBhRTA0TlhSalFteENMMUpLU3lzeWMxcHlSWGx4VG5CaVJFNXFTa3BHVVc5SlZucGhVM0ZKV2xObFYwNUJXRkpRU25KU2JUZDBhRzF0ZGxodmExZGhVRVpFVUZCWWNGQmlNalpHYlhwek9YQXJNMEZRTW5ZNFdqTlZjWEJ2VHpsTlNqSmxSSE5vUzJaS2NESjFWVzVTZFc0MU5taHVPRzA0VlZCWFFXbHhVa3hVWWtSc1RWWkVkRzQwU0RWbFZtcFRORGREWVhkT2N6azFOM3BMSzJnNU9XdFVTWEJKU0RSSEwwRmxURGxWY0VKVmVVWnRSbFpSUXpreU1ERnlWWE41T1ZKeFZtOTBWVnBQY1RkSlZUQnlXRGxhY0VGck1EVkViakZxV0RoWk5DOXhLMXBIVlhSTlEyUXZkbmhQYmxwRldtVmxkV1paYkhsRVUwZ3pSMXBrYWl0YU1XRnlSbVJuVFRWemVpdHJNSGt2V2psdVpXSlpabkZFVkZCT2RucFBhREZvWVN0ME1HeFBNa2hQYVRKM0wxVnBibGt5ZDNaaFJVZFVOMnB6UldOb1IwSllUVUZIUlc5SGQyUlNRVWt5TUhOSmFFc3hRMGxIZDFoRlVXcGlTV2RLYUhVMFVrRXlTRFpOVVU1bmRVbDRRekpzTjFkemJXNDBjV0ZTZHpkRk9ITkJVbGxuUkc5NmJuVjVSMVoxUzJ4a1ZIbGhWVk55YjNSSGNIcGlhMHRZUzNKd1MwbzBWbll3Y2tFdk0ybHJWR1Z6WjJKV1FYVnJWRmN2U1hCS2NtNTRWV3hsVDFCeWJXZzFNRGhUTlVGdk5WWm1NM1I2V0VvNFZFUXlWeTlYVUdoVU9Fd3ZZVzF4Y1d0V05uZzFXa2hKVm1WVFVGRnJLMDVGTVhsWlZtbzJOM0E0Y20xeFVqbG1MMmswYjA5aE5FWXJRVFpWVVVNd1ZscHNaeklyYlZwRWQxVmhabFJWUVRGak5WSkJla2Q2VFZBeEwxYzJXbU16VURSbWVXSkhRMFZNTmtnM09FNTRVV0ZET1hsRVZHeHNTbGRsTVdkeU9WaFlhakpYTlhSM1pteHpRMlJaYTIxTEszcFBkR0kwV1hWTmVrVnlOMUpYV1hCbGVqZDVaV05CVmsxRGNWWlpZWE5PV0VzelozcFljMU00TlVSd1ZHWktUVVZNWTFaYVdVOXJhbU5sV2tsTVIwSlplRFIzWWpjMlZFbERVazFZWWxkQ01tbHRZM05KUnpoWlRYZHdNazhyUlZFeFVuWnNUMVozWlRaR09VaHZNbFZtTW5SWU4wMW5Xa1pWTUZFclJ6TXlVblJxY25NeFJIbFhObmxDYUVObEx6Rk9aRUZXVTBaT2VHSnBjR2RGYzJvMVdWcHhPRWRHWTNKa2RFZE5helpuY2pacVdVUmpkWGxwWnpobVVqbDRNMU52Tld4SlVHeEpSV0YwU0ZKNkszUjJWVXRrTVV4dU9YbHBhSFV6ZW5ZNVEwbEtRbUZYVENzNWNqWmFOSEZEVldRM1YxTmFWbHAwUVRGUE0wZHdWbFF4TlhKRWVHRnpUek5qTW1vM2JuWklNbE5rZVRGcVZHUmtSUzlqT1V3MmJWWmlaVVJuTjJ4YVJVOHpZa2hLVTJ4VVF6WnZOamhOVDBjMmFreDZZVmhSTm0xV1kydDBOVEpFZWtGelRVdEVabTlTVldJdk1XWXpZMlpuT0ZZMmIwdHZLMDVKZGxveWIwZzJVRkJaWjNwNVJIcG9MMUl2VlVZMlQyTjRWRXh0UjJ4UFpEZHNlRTltWW5SNlJESlVTbVI0VmpKemJpdE1abmRMZVRFMWJXSndSMjVDUkRCM01sbG9ObmhoU0dKeVMwUlllVzVDYW04NU1IUjVUemxDUkhkelpUUkxPRkZDWjBVNFFtazRTVzUxVjNOaWVrdFpSSGhtVFZsalNDdENlalZxUW05TmIyWkNSbTVOV1dKRVRtNUVWME5JVDFGNE1tMWpUbWRxZW10TmRtMUVUMDl6UTFoNlIwVlJUVzlrUW5oQ2QwZFVOV2RVUVVSNGJFUnZUM1p0VFZCbllTdFpkeXRKV1RVNWQwY3JXbEUyUkcxRWEwMUZkVmwzTWs1a01HRjVhSHBwZUdRd1JqWm9kRlZDV0c5M1VGRlVSblpsZDA5T1VsVkhZa3N2TkRSV2FHWXlPRkZ6TXpoM2FVdHJMMkZ5Ynpsd1VEZEZRekJRT1RKVFEyMHZiVWxSVlRNdlZtUkhaRWt2V1RCWWFIWnhOMUZWZWpsM2VVTnRVSFJOZG5odVMxcDNWamxIZG10MVJrRTRiM1ZPY0M5Nk9UaFVOMEk0U1dGUlRGbEJRVkZCUWk4dk9FRkVNMmxqWkZwV1ptSkdUakZHVFdRdk5UVTNaamN6WkhZM01UTmlNMlEzTWpOeVZuSldPV0YxZERkeGRHeFlWMm8xVlRoSFVHMUtUVlJEUXpocmFHZG1abHBtUlVWQ1VIaHBVVkZXUlZneGQxQndaMWxFU1ZKT1JUUkpORUl6Vm1zdlNtdFJVV3BSVWtWNlFVSkdkalJGWmxKRFNsbGlSRXRsZFdVMWREVlJUVlJhVUdKaU1qVTNWRzVNVHprelVFODNNV1Z0VFV4YWVVTk1PVUpvZUc1TldXUnhTbGRLWkd0VGJXdEpTWEZFTW1kaVRWcGhiVmhCVFdoVWNHaGlOVWRCUW1KeVJGTkZZVGxtYjFNMllXMXdUelY2Wm0xYWNqQkdVak0yT1ZKVVJteDFjakY0ZGtzekwxQmlWVEZITUdWTFIwNHJhbE12ZDA5SFlXOVNhaTlXTmtsdU9IWTBXWEZqZVN0Q1Z6a3dSVFZvYUVwNFZUWlpiM2hWWWk5cWNqVlNTV2R1U2pnNE1HaFhaMWRrYTFoa05rczFTVEpPYlhCaE5qWnROeXQ2Y0hkdmVHOXViV3h1VGtKamJsbHlSVXBMZDIxUFdtaHBZVGt3WlZOTllWTTJXQ3RJV0cxTFF6WlRXbHBxSzI1U1pubHhZbUVyU2k5aFkxUnJSVTlZWldSWFlUSk9NbXMyZUVSSFVGWnBhREpZT0VkRU5uTlNRMUJ3TUM4M2FHb3ZXREZpVTNGbmVtRnpVVlJoVjFSQ1lWTlRWWGxKZUhWc01sSjJUWFJXWkdSV1UwZHJRVEpuWW5kM01qWjVOV1p6YWxCSlJFUk1UWGw1TlVSMlpISmlXamx0ZWxvemNXZE5NWE4zZDFkVFJFc3JRbUZ3V25OSGMwWllLMGhvYm1kek4xRnZRVWhFWjBOSFpHeDZXVGRqTUdrdmQxTldhRU5NWlRWbmFFWnFia1ZHYUM5MlJ6QTVOMXBMZHpoSFFtZzFZMmRtU0RCMVNHWmtUelJtTkVkWmNHVnFhbk5DU0dsR1lVZFFhaTlGZEM5RVJrNVdkaXMzWTJsaGRIVXZNbEZLUVZCaGFXcGthRlJwUWtkR1pITlhjbXd6UzJZclJqTm1VR0pSY3pFNWRUTTNVamx6TWprelJscENNVE5yYUVFM1dtbEhWMnhNVVhSVWJWVXdjRGMyWkV3NUwwdzFaVFZrWjBwTVdIQk5WMmhZYUdKcGNXVmpaamhqVG5CcFRHWXJaalJuT1Zsd1RUTkxheTh2S3pOclZGazVNU3RIVEdKQldubEhiVVpFUm1WamIyZ3hXRkZpY2tabmMzVkxhM0ZyTW1NMmIwMHhaMnBuUzB0UWNVY3ljRTFSYkhsaFZYQklVeXN4YkRKVGVWVjBkazlZTlRKU1ZXMUNURVJhWldWQmQwbHRUMU54TkhBMFZsbHBOMmQyU3pad1ptVnlRa1JzUmsxaVJYRnNla2dyTTBzMldESkJaMHgyTm5sUWJFbGtaR1lyYkRVMU5sY3pVa0ZTYjFKcVNVc3daelkyY0hVM1pHNUdUa3BQUWpKUWR6VkVNMmxNY0RaWVZWbEdZMmhFZG5sTGFVVm5aMEZxUjJkbWIyWkdTMVV6U0ZWQ05HaFhhR3RDTVZSMmFYTkdPVWwxYjNkalNIWXpaamgzVUV0VlkyOXpOMnhqWW5OaVUydFFWMHR2TlZGMFZuTmpTVEZCWTA0MFVYRXhWMVJZY0ZoRE1sTTRiREE1VW14b2R6SnFUMGRIYTBSTmExb3ZlRWxxU1RCRlJrNW9PV3RSVlVOQ2FrNUpMMUphUm5WNmJYTkVkazFWWkhOVVNuQldOVTlyT1VsQ1ZXWkRZVEp4ZVRaNEsyTTVVV05vWm5ReEwzcFVWM3AzVGxKWVYwVmlkbVE1UzBSamVsSXlMMnh1ZG5wa2RuZEhkbVY2WkZjNGExVldXa3cxTVRrMGRESllkSEowTVdwblJuWkpiMmRrYlVkTkswMWliM1Z5T1hkR0sweHpSRFJ0YzBSNlYzWjNTbmRCVFdRclVscGhaelJGTWt0cFVDOVlaMWRUSzFGMFVscDFiMVF5WkRkeVlUZFhVR1JDWlU5UVMyNHdiekpVUTBNMFJIUTBhblZ4YjA1M1pqZzBhbUUwUW5wR01FZHNhbGR5WTNGSGNEWlNVRXBDVkZGdFJHNXlaRk5MVkdWV2QyaEpSa3h4TlV0MlMyUnlNMms1WTFGbmFVZE9ZMDQzZDJNNWVGVjVNRzFDTDBVd2RuTm5NRVp0VGpsaVRrSnVWWE5uYlhKWGFVbENNSGN5ZHpWcFltc3pTR0pKVVVKdFFVRklPVWh5YlZCNVJsZGxkVFJ6WmtweVVGcFRhbUUzWm1ZclIwUlNZek5FYkRNeWJHcG5TRGRtVEUxRGN6TnNlREJ0Wm5kWFUyZHBaelZ5VW5SaVVYTjZTR3B1VlhWdWJGZFFZMWN5Y0d4NlZuZEhZbVpzZDA4MEt6QjRWMjlUUkRaTldtNUNSMlpXVmpsUU4wTnJjblJoWnpaeGJFNTZZWE5XWVhBM1JYQklNRFZOY0U1MlVHUjZUMHhSYVhwUGRGQlVTVlJqTlhaSWFtMTVkMUJ0UTBWc0sxWkNUV3h1UzFSUFRIa3ZUamh2V2xaRVIzVjZhMjB2WnpkaWNXVk9lbEJxTDBkNlJYcFNSSFJhYVVWRUsxZGpiVFJXUlVkR2IwazVhVEJLVUhsM1pHbGxjbFZrZG1OWU4zSkxUMjVoVVdOcGRHSjVOM05RV1VZMFdXMHJaemQzSzNWaVdWWkpkQ3MwV2pnMk5uWm9OVFV5YWtwVU9VTTBXWEIzWkVGQlFVaHBZMWt5UW10WlIwRkJOSFZrZEVacUwyb3JWeklyVFc1QmVuWjNRMHROUm5saFpISXdZVkZ4THpGYWJVUTBiamhZT0dkcWEwbDVUMVpuV1VGTFNrRm5RamxKZHpCRVFVRkJRV1ZLZUdwWlIxSm5XVUUzTm00NFZWRjRabmxEUVZGcFFVcERUVVJMZFVGSVFVZGhRa0pCUVVGQlFVSTBia2RPSzNkalJFRlVRMWxIUVV0MFZFUmpXVUZCUVVGQlFVRkJlVUZITkVGeVowUjFRVk0wUW1SblNGVkJaMUZEVEdkS2VVRnlaMFJEUVU1UFFUUnJRVUZSUVVGQlFUaEJUV2RCUlVGQlFVRkJRVUZEUVVGQlFVVkJRbnBCUVVGQlNHZDBkMEZCUVVGQlNHbGpaRnBFVGxOblRYaEdTVlpRWWt0MU1VSlNaVXMzYjFNM1ZWTjZRemxCWkdOeFNuUkRVbFl3Y2pGUVdGbHdhazVVY0hCUFUzbFdhVFk1VWpGakswaExLMmx3TmxwU2FFaENRMXB1TnpOYVQySnJOWE5CTWsxalNFWkVZbVpDWldWSFJtVnlUVTV5ZVVaSVZuZzJjbXhGWm1WeE5Yb3pTR2gxYjBreE4zbzVkbFZJZWpJelkwazBibm95TUdNMFNsVlBjWEkzVEdKSk5ETjZkM0JPWmtoeVpYZHdOMkU0Vm5oRVZYZ3hObkp3VDFCUVZHUjNjRVUwT0dJeFR5ODVkSHBEVjBrd09IUXpSM0V6YTJSdGRXSmFTa1pFY3pWSE0xWnJNRTkwWm5sUVRtRkVTMVZyUXpGTlNrTjRZMkp0T0hSUldtbGFlazlyTVU1TlJFZE1iRk0yVTBKNE1GWmhWMmhNVEU5a1dUSjZkM2h0WmxORVdIQnVaVFpWZW1Jd1QyeHdObHBoTDFKQlVHNWFha3Q2V21sSE16TnJaVmN4YzNveGVFRlhlR000ZFhKaWRtVXpVREJaZDFkSFNVNXBkMUZTV1dwblNYcHhhREpIUVdadmIyTXJTRVo2ZVhwUmJHazFjVlZ4VVVsVlVrdEtWVlJDU0ZoSE1XdHFUV1pqY3paWldsWlJNVXN4U25sblFXNHZRelo1YjBaT2VqZDNRbWxTVlhVMk1sQXJjRE5JUkU5WFdHdHViRWxxZHk5WlFtWm1jVE5sVFZkV1ZWSldhV1JOWmpOeVREaFZURmhCVmxoSVJITnZkV0pJVjNFMFVGcFFVRGhNTjJ4dGRIcExhRkJ4VVZoV2NsSXZWVXRZV1RVdkszWTRRMFUzZURKaVFVRkJaVXA0ZEdwa01FdDNlVUZWWnpBNE5uQXZNbUphVlRsWk5VNVNkV2RwYW05b2NUZ3ZkWEEzWkV4VVkyaEllVk5vYW1zMlRqbEdPRXhGVkhCamIwaERSbWhyUjFCQlUwMXRla3hxUWxsMFJXTkRhMlptWWpkdGJHMU9NbTFSZEhKNldFNHpkVEV2Y0cwNWNsVlBNemxDWTFOVllVbEdWaTlRTjNZd1dGVjRXbWx0WjNWMmEwSTFWMWhNUVRaU2NXSnFVVWxDYld3NWFFaFlZakJ5TDBOVU5rRkJSbE5PVGtsQlFVRkNORzVIVUhjemMwWjNTV2xvYVVsNVRtcFlLMUZIZUhBd1kwUkNkMDE1VVZWaVIxWnBaRTVxU1hkaFJVWnZSR2hTTmtwM1RVUkJlV041YVRWdVFscGhUVXRaTUdSbmVFRmhTR3B2YVU1NlEydDFSemxXUVhaR01HTkVVWGxOVEVFMFpIbFRSVkpKUTFkU1VVeERVbWRWWkhKQ0sxQXZNV2N3YzNaU2RWcEhSbmRCUWpsTmFYVkJRVUZCUVQwOUp5a2dabTl5YldGMEtDZDBjblZsZEhsd1pTY3BMRnh1SUNBZ0lIVnliQ2duWkdGMFlUcGhjSEJzYVdOaGRHbHZiaTl2WTNSbGRDMXpkSEpsWVcwN1ltRnpaVFkwTEVGQlJVRkJRVUZQUVVsQlFVRjNRbWRVTVUxMlRXdEJjRk0wVlVGQlFVUnpRVUZCUVZadFRuUlpXRVJWU1VKbE1rRkJRVUpTUVVGQlFWVndhbVJ1VVdkQlFVRkJRVUZCUVVSbVVVRkJRVUZMV201Q2JtSlphVkZyUm10QlFVRTBRVUZCUVV4alIyUm9Zek5CUVVGQlFWRkJRVUZPTjBGQlFVRkJhRzVpU0d4dFUyaFZOR1JSUVVGQmNFRkJRVUZqVTJGSFZtaGFRV2N3ZVVkalFVRkJiV3RCUVVGQlRtMW9iMXBYUlVoc1owNXBRVUZCU2pOQlFVRkJRMUp2WWxoU05FOXdaMEZCUVVGQlEyZEJRVUZCUVRoaVJ6bHFXVkYzVjBSa2EwRkJRVzg0UVVGQlFVbEhNV2hsU0VGQmNGRjFNRUZCUVV0WVFVRkJRVU5DZFZsWE1XeDJXVTEyVTBGQlFVTnVkMEZCUVV0a1kwYzVlbVJFVlhWSk0wMUJRVUV3WTBGQlFVRjZXRUo1V2xoRVpHRjNUMFpCUVVGYVkwRkJRVUZJYzBGQlVWQnZRVnBCUVVKUlFVbEJibTlEZGtGQlFVRkpkME5sWjBzNFFVRkJRalJCUVhoQlVVbEJRVUZKUVVKUlRVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJWVWRhUmxwQlFrRTJaMGh4UkdkT1V5OHliMEZYWjA1VFFVcFpRVUZCUVVKQlFVRkJRVUZCUVVGQlFVRkJkMEZCUVVGTlFVRkJRV05CUVVWQlFVRkJRVUZGVVVGQmQwRkNRVUZCUVVoQlFVVkJRMmRCUVVGQlIwRkJVVUZCVVVGRFFVRkVjVVIyTHk5QlFVRkJRVTl2UWk4dk9FRkJRbGxCUVVGRlFVRkJRVUZCUVVGQlFVRkZSMEZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRm5RVUV2TmxGRWNtZE5XRUZCYzBGR2QwRkpkRkpKVFVKblFVTk1VM05DUkdkRlNFaG5SVmhRWjBVelRHZEZSRXhuUlc1UVowVXpTR2RGV0VSblJVSTVZbm8xUWxGWU5YWk1lalJDVVZnMWRUWjZhMEpCVkd0eVMzWnJRa0ZVYTBGNFkwWXJZbmszSzFGVlJpdE1lVGdyWm5rd1FrOVBjM0pQVFVWQ1QwOXpjazlOUVVGQlNVRkJVQ3RtUVRkTlJFaFJRVXhCUTBWQlEweFZXVVJuV1VGQmFUQnlRVkUwUWtKNE5FSkdlalJDVG5rMFFrRjNZMGRKYVRoQ1NtcFpOMEZTUlRCT2FuTkNUV2haVmtWVVRYbEdaMGgyZFhaelJrSm1kVFozZGpCR1FtWXdiR1JuT0cxRU0xbFBSRkprWkVObloyMURRWEJrUjBGM1JFaFJXRGwzY25JM1FsRllOM1Z6VERrdlpsZGhSV2hMWVVWNGEwSkdkMmRNUTNkcUt6WlNhMEZCUVUxQlFWQXJiRUUyTUVSR1VVRk1RVUpyUVVsblFVdDBlRFJoUm1jMFIwRkJUWFJMZDBWUFFWRmpaVUZTWXl0QlZHTjFRVkZOVlVKcGMwSkphVmt4UlZSWk0wMTRXVmhLZVRSQ1RrUlplVVpvVVVkQlprTXpPWGRWUmprM1pTOHJVVlZHSzFwelMwSjRkMGhEWjBWSlRFRm5Ra2g0U1ZwSFUxVmFSMUZOVmtKbWJTOTBMMk5HUW1abE0zWXZiamxrVVdOTFEyZGpRa2RuWjBKQlVXYzFRVkpyYkVkU2EyMUhVVUZCUVdkQlFTODFRVVJyVVUxelFVRXdRVWgzUVVsMFVuZFJRbmRCUTB4VGMwSkVaMFZJUlZKWlJVWjZXV3RPZUVWMVFWSk5Ra0pwT0VKS2FqaENUbWc0UWtacVkyeE9hRGhDUm1kSU1HZGphRlZEVVVWRWExcEZRa0YzYkZWNVNIWXJkbWROUld4QlRVTkdVVWxHWlZGUlJFRlRZMFZCZUZGRFFYbDNaVkJTZWl0M09WUjNTa05VZHpGQlJUbElSRE1yTTJZM1JVRjNUMXBCZDFWaVFrRk9aRUZSU0RKQmQwMVVRWGRCUkVGQlJDOXZaMDlEUVhodlFVUlJRVnBCUTBsQlEzSmpaVWRvVFU5Q2QwRkVURk56UWtSblJVaEZValJDUm5vMFFrNTRSWFZCVVdONlJtYzRRa1pEYzBKSmFsVnVUbWhOYVVwcVVUSk5hRmxWUW1kSU1XVTRSbEpEWm0xTWFTOXZTVlZqUjFOTVoyOUNRMmRWYVVKUmIwSklkelJVUlhoM1ZFVjNUV0ZJVkhOaEwzTXZURFY1VFdvMU9ITkNUVkp2TnpsM1JVa3lRVlZHTWtGcUszTlNUV05GZUUxalJYZEJRVUZCU1VGQlVDdFdRVGN3UkVwM1FWaEJRMDFCUTB4VmFFZDRWVTVCYVRCeVFWTTBRbEIzUlN0QlVqaENSbXBKTTBwVVdYbEdlV05YUmtGalFrSnBXVzVLVTFsQlNuZFpRVUo0V1VGR2VsbEJRVk5CUmtGUlVVUkNaemhJV1dkalUwSm5SVlZDYUVWSFFXZFpSeTkwUVVkRlFWbERTRUZZS3k5TllTc3ZkMEZHUWxGRlFYWnpXVUpDUVVWNFFtaEpSMEpCWTBOQ1ZYTkdRbVZWUmtKblNVZEZRV0lyTVZGWlFrSnhla2RCVVZGR1FtWTNPSGh5Tnk5QlFWVkdRVkZCUVVGQlVVRkJVQ3RyUVRZMFJFWjNRVXhCUW1OQlRGRkJlRUZCTVVGRGFrVjFURU5aVTBSQldVRkNRekJ5UVZFMFFrSjRORUpHZWpSQ1RuazBRa0Y1TkVKS2VqUkNUbmcwUWtaM05FSkZkMVZQUVZNNFFrcG5XVkJCVVZsWFNIZEZWMDFxWTBKUVowVnRTV2hqZVVaU1kwSTVZbm8xUWxGWU5YWk1lalJDVVZnMWRUWjZhMEpCVkd0eVMzWnJRa0ZVYTBzdk56SkNhRWxIV1VGWlVFSlJUVVZCVVZZNVFtYzRSMEZUVlVaQlVYTlFSa0ZGUWtGNFkwWXJZbmszSzFGVlJpdE1lVGdyWm5rd1FrOVBjM0pQVFVWQ1QwOXpjazlOUTBsME1FWkJVVlpLUWxGSlIwSkJZMUpDYjBGSFFsRkZhRUpST0V4Q1FVVkNRVUZCUVVGUlFVRkJRVUZFZFhkTGEwRkNZMEZDY2sxWFJVRkZkRXQ0VFhWQlZEaENVR2RGWmtGU1dYbE9kMFV5Um1oamJrWm9VVWhCVVRSQ1Nub3dURUpSWTBkQ2VHdE5lWGN3WmtSQlNXUkVRalJNUkZGelRDOWlhMHhJUVhOQ1NGRnphRVJuYzA5Q1oyMVVRMEZ2UW5abmEwSkRkekJNU0ZGMk9YTlJiMEpEWjBGQlFXZEJRUzgxYjBSMVFVMXBRVUZ6UVVWUlFVbDBVVFJOUW1kQlEweFRjMEpDWjBsSVNHZEZXRTVwVVROS1owRlVTVkpGZWtWVVRVSTNjbm81UWxGWU9YWk5WVUpCUVZWR0wzZEJOaTkwYjNRclVVMXBRbVk0UVhoaWVqbENVVmc1ZGsxVlFrRlFNMlZCVlRjck0zZEJRVUpCUVVFdk5sRkVjbWROV0VGQlRVRkVkMEZpUVVORlFVUlZRVXRJYUhkWFJVRnZSVUYzUVVWTVUzTkNUV2hWV0VGM05FSkNlRFJDUm5vMFFrNTVORUpCZVRSQ1NubzBRazU0TkVKR2R6UkNRWGxOVmsxNlZXcEJkVlZDUVdaTE9DdFJWVVlyWW5rNEswRlZSaXRpZFhNMVFWRkZOVXQ1Y2pWQlVVVTFUbXRyTDJSclFqZFJSVUpCVTNkR0sySjVOeXRSVlVZclRIazRLMlo1TUVKUFQzTnlUMDFGUWs5UGMzSlBUVU5NWmpCclFVRkJRVUZCVFVGQlVDdFFRVGhOUkV4UlFVeEJRbTlCU1hkQlMzUjRPR0pGZDNkSFFVRk5kRXQzUlVkQlFXTlhRVUpqTWtGRVkyMUJRV042VFdoWlZrRjRVVWRMZDBWdFNuZE5iVTVvVFdsS2FsRXlUV2haVlVKblNIVjNaamM1UWxGVlFrRTRTRXBCVVdOR1FtWTNOVE5xV1VsRFp6UkhRa052U1VGbk1FSkRhVTFVUjJodmJVZG9iMFJNVVZncksyTnVRaTkyTUVaQ1VVVkVkMk5yUWtJclkwdERVRGRVUWtGWlFrTlJSWE5EUVhZclMwSnZiVWRvYjIxSFowRkJRa0ZCUVM4MVRVUjJkMDF3UVVGblFVVm5RV1ZCUTI5QlJGVkJTMHBTT0ZwRmR6aEtRa0ZCUlV4VGMwSlFaMFV3U21sSlIwWkNXVmhKZUZWNlJWTk5WazE2VldwQmQxbEJRbmhaUlVaNk5FSk9lVmxEUVhrMFFrcDZORUpPZURSQ1JuYzBRa0ZtVVZwSWVEaDVTSGc1VTJwNmF6VjVWRzl5ZW1ZM05FSkJVVUpEVFRJMUwzZFZSaTg0WlhJMGQxRkZORFoxY2pSM1VVVTBkMGxMUVZOQmVFbERRWGhKUkc5a0wzTlJZMGhCUzNoQ1VEYzBlbUp1TDBKUldDOTFZekJDUTFCNWJrSlBUM0p4SzAxRlFrOVBjbkVyVFVGQlFVMUJRVkFyY2tFMlkwUkZVVUZNUVVKalFVbDNRVXQwZURSWlJXZDNSMEZCVFhSTGQwVklTbmRqV0VKNFl6TkdlbU51VG5kTlQwRlJZMlZCVW1NclFWUmpkVUZSVFhWQlUyTXJRVlJqWlVGU1kwOUJVVXRQYlhCdlkyMXdiMk50Y0c5amJYQnhNblZtVlVaQ1psYzFkV1pWUmtKbVZ6VnhUamhGUWs0cmIzRlBRVVZDVDBGRFJrcHhZVWhLY1dGSVNuRmhTRXB4WVVGU2EwWTVZbTAxT1ZGVlJqbGliVFU1Wm5wSFFrOURiM0ZQUVVWQ1QwTnZjVTlCUVVGblFVRXZNbTlFTmtGT1UwRkNSVUZJVVVGSmRGSm5VMFZSYTBOTVUzTnNSR2RGYWt4blJXNVFaMFV6U0dkRldFWkJXVWhCVVdOQ1VHZEZNMHhuUlc1RVowVklTR2RGUTJwVVUwSlRTM0pwUWtGVWFYRnhjbWxDUkVGeFFWTkpOQzlsUTBsMFVVMUVkRmxwU1hSUlRVUjBXWGR4VFVGVWFYRnhjbWxDUVZScGNXdHBRazVRTjJSUFFVVlpRVGRYU1dsTVZVUkJOMWRKYVV4VlFVRkJRVUZCVVVGQlFVRkZRVUZQWlVkbWJrWm1SSHA2TVVGQmMwUTJRVUZCUVVGRVUyeDBaRGRCUVVGQlFVNUxWM0pWYzBGQlVEbHhRU3RuUkZWblFVRkJRV2RCUVdkQlFVRkJRVUZCUVVGQ1FVRkJSRlYyT1hGQlJtOUVOa0ZCUVVGQlFVUTJRVUZDUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGRWQxQnZRVUZCUkRaQlFVRkJLMmRCUVVGUWIwRkJRVVEyUVVGQlFTdG5RVUZCVUc5QlFVRkVOa0ZCUVVFclowRkJRVkJ2UVVGQlJEWkJRVUZCSzJkQlFVRlFiMEZCUVVRMlFVRkJRU3RuUVVGQlFVRkJRVUZCVFdkQ2RVRkxORUUzWjBWMVFWaFpRakZCU1VWQmFUUkRZMmRMTkVGM1owUlVaMDlLUVVGRlFVRkJRVkJCUkVsQlFrRkJRVUZCUVVGQlowRkJRVUpCUVdOM1FVRkJRalJNWTBGQlFVRkJRVUZCUVVGVFFVNDBRVUZSUVVGQlFVRkJRVUZCTVVGQlFVRkJVVUZCUVVGQlFVRlJRVVZCUkZWQlFWRkJRVUZCUVVGQlowRklRVVJyUVVGUlFVRkJRVUZCUVhkQlJVRkZRVUZCVVVGQlFVRkJRVUpCUVVWQlJWRkJRVkZCUVVGQlFVRkNVVUZNUVVWblFVRlJRVUZCUVVGQlFtZEJSVUZHVFVGQlVVRkJRVUZCUVVOblFYSkJSbU5CUVZGQlFVRkJRVUZEZDBGVVFVbEpRVUYzUVVKQ1FXdEJRVUZDY1VGS1ZVRkJkMEZDUWtGclFVRlJRVWxCVURoQlFYZEJRa0pCYTBGQlowRlBRVkZqUVVGM1FVSkNRV3RCUVhkQlNVRlNWVUZCZDBGQ1FrRnJRVUpCUVVsQlVqQkJRWGRCUWtKQmEwRkNVVUZYUVZOVlFVRjNRVUpDUVd0QlFtZEJTVUZVYzBGQmQwRkNRa0ZyUVVOblFsZEJWVTFCUVhkQlFrSkJhMEZEZDBGdFFWcHNSR0l6UWpWamJXeHVZVWhSWjB0RlRYQkpSRWwzVFZSVloxbHVhMmRpTTBwd1dqSnNkVmxYZDJkWldGWXdZVWM1ZVdONVFrRkpSMXAyWW01U2JHSkhlSFpNYlU1MllsaGtiR1JYYkZOYVYyUXhZa2RHZVdReVZqRmhXR1JzWkZkc1YxcFlTbnBoVnpsMVNVUkZkVTFJWkd4a1YyeElXbGMxYkdOdFJqQmFWMUZuV1c1cloyTXpXbTVOYmxJd1dtbENiV050T1hSSlJWcDJZbTVTYkdKSGVIWkpTRUo1WWpKd2JGa3pVWFZoU0ZJd1kwUnZka3d5V25aaWJsSnNZa2Q0ZGt4dFRuWmlVVUpFUVVjNFFXTkJRalZCU0VsQllWRkNia0ZIWjBGa1FVRm5RVU5uUVZGM1FYQkJRMEZCVFdkQmQwRkVSVUZPVVVGblFVZEpRV1ZSUVdkQlJ6aEJZMmRDY0VGSFkwRmhVVUoxUVVkRlFXSkJRV2RCUjBWQlpGRkNNRUZIWjBGaWQwSjVRVWhOUVVsQlFrRkJRMEZCV21kQ2RrRkhORUZrUVVKc1FVZDNRV0pCUW5aQlF6UkJXWGRDZGtGSE1FRmtkMEpzUVVoVlFXRlJRbE5CUjFWQlduZENNVUZIZDBGWlVVSjVRVWhqUVZwUlFqRkJSMnRCWkhkQ2JFRklWVUZoVVVKWFFVZFZRV05uUW5wQlIydEJZbmRDZFVGRFFVRk5VVUYxUVVSQlFXUjNRbXhCU0ZWQllWRkNTRUZIVlVGaVowSnNRVWhKUVZsUlFqQkJSMVZCV2tGQlowRkhTVUZsVVVGblFVaE5RV1JuUW01QlJFbEJaRUZDTUVGSFdVRkpRVUp0UVVoSlFXSjNRblJCUTBGQlVtZENka0ZITkVGa1FVSnNRVWQzUVdKQlFuWkJRMEZCWTBGQ2VVRkhPRUZoWjBKc1FVZE5RV1JCUVhWQlIyZEJaRUZDTUVGSVFVRlBaMEYyUVVNNFFWcG5RblpCUnpSQlpFRkNiRUZIZDBGaVFVSjJRVU0wUVZsM1FuWkJSekJCUVVGQlFVRm5RVUZCUVVGQlFVRkJTMEZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGUVFVRkJRa0ZuUlVSQlVWRkNRbEZGUjBGUlkwSkRRVVZLUVZGdlFrTjNSVTFCVVRCQ1JHZEZVRUp0VG5CamJVNXpXbEZvYTJJelpIVmlSemxvV2tGU2NHSnRXblpFU0U1b1dtMVdabU16Vm1wWk1sWjZZM2RzZWxsWFdteFlNMlJvWTIwMFNHTXpWbXBaTWxaNlkzYzFlbVJYVG1wYVdFNTZXREpPY0dOdFRuTmFVa1o2WkZkT2FscFlUbnBZTWpWMldESk9jR050VG5OYVVXUXpXVmRzTUdGWE5XNUVibVJvWVZoU2NHSnRaR1paTW14NVdUSjRiRUpJWkdoamJUUk1ZVmMxYldJeE9XcGhXRXBxWWtkVlIxa3lSblZaTWxaelFtNU9iRmxZU21waFFVRkJRVUZCUVVGQlJVRkJaaTh2UVVFNFFVRkJRVUZCUVVGQlFVRkJRVUZCUTNkQlEzZG5jMEZDVmxkRlZscEpRMEpNZFVGQlQxVlZkWGRDYkU1aFYweEJNRWMzUVc5WFYwSnRTVWx3VmxkTVFVTktWMGMxUTBGQlNVRkhUbXBKTWtsaVNWTkhkMEZHYlhkQlJVMXFVa3hKUVVGUlFrUlpSVWwwYzBGRmMzTkRRbWRhYVRKM1FXbDNaMXBEUTNkM1JrTjNRa05hWVhOcFowSkRhMDVHV1RCV1UxY3haMmhKZVVWaWFXeG5aM05HUWxGWFEwZDNVVVpyWWtsTVFUUlZSbWRvYzBSb1dsZFRRM2hCVVhCRVVsZE9SbGxYVTNkTFJrSlpTV0pGUWtOclRrWlpNRlZuYzBSQ1VWZERSM2ROUm10aVNVeEVRVlZHWjJkYWFVTkxhVzFGWjNOQmNGRlhSMEZpU1V4QloxVkdaMmh6UVhCblIzbERkMDVzUWxsSllrRXlXVUowWjFkV2JGcEhOMEZDU3pGc1drazNRVUZWUm1oc1YxWnJkSE5CVFhOSlJWVm5jMEZSYkZsWFVXZHpRVlpFVlVacGQwSlRUa056UVZscVVXaHphRWxXYlhkQlYwRjBjMEZSYzBsNVJXcEpVMEpyYzFGV2FWRnBRM2RDYVU1RGMxRkZTMUV3Vm1welVVVkxVVGRCUVZsRlZtcHpRVTF4U1ZORGQwSnJUV2RwYVVOTGMwRkZjbk5VUVVaS1lrRkZTbXhHV1ZsR1FXSlpWa3BhVjBOT1drbFRRM2RSUms1WmMwRkZja2Q1UjNkUlJtdHFjMEZDVVZkSFZscE1Za0ZHVEV4QlNGRjVkWGxCUVVsQlVUSkNRMHhpUVVkTVRFRklTVEJKYWtsTVFVRkpNRXBvYzBGS2FWcHlRVUpaTjBGQ1dVeEJSa3RwTW5kQ2VYZG5TVVZWWjNOQmRFUlpOMmRGUVVkSlozTkJRbEZYVEVKQldVWnNiWE5CUm1wWlJWTjNRVmRCZEhOQlozTnpaMk5NUVVWT1JsRnBiMmh6WjBGQ1FVVk9aMUZwTW5kRFUzbDNRVVZOYWxKTVNVRkJVVUpFV1VWSmRITkJiM05KUTBKR1NVeEJRa3Q1VDNkQlJVOTNRa05XWjBsRlYwdEpNa1ZuV2tORGQwbEdRbGxKWWtGQlJ6ZEJkMVZHYVhkSlFuVjNVVVpzV2trM1FVRlZSbWhzVjJKQlJFcFRUbWhTUlZOM1FWZEJkSE5CYzNOSlEwSkdTVXhCUWt0NVQzZEJSVTkzUWtOV1owbEZWMHRKTWtWbldreEJhMVZHYVhkQlFuVjNVVVpyYW5OQlFsRlhSMVphYzBGTmJFa3lSa1ZTVEVGQ1dVTXlkMFJEZDJkelFVRnFVWEpKVEVOblRrWlhRMFZpU1hsR1drdHBSWFJ6UVRCemMxRkpRMUppUW10WlZWRjBjMEUwYzNOQlJtZEpRME4zUkVWT1MzTkJRbEZYUTBOM1JFTk9RMWRpUVU1Uk1IRjNRVVpLV1VsTVFVNUpNRXBhVEdKQlVFeERRM2RGUjBwdGMwRkdha2xNWjBWQlIwOUxTVEpIZDBSclRtZEpTWEJuU1V4QlQwa3dTV3BNWWtGUlRFVjBWVmRNUlVWYVJWSmFTa3hCVGxwVFRqUk1Za0ZTVEVWMFVsZEZkRlJYVEVWRldrVlNXa2Q1UmxwS1RFRlVXbE5PTkV4aVFWTk1URVZCUkRCT1ZsZE1SVkJFTUU5M1FWZEdRM05CT0hKWFlrRkJVVGRCUTBwVlMzaEVRVWxzVVhKRlRrRnBWa056UVVWWFNYbERkMEY1VmxGWFRFVkNRVVZPWjNOQlVXeFJiM0ZMU1VsdmFsbGlRVTlMYVVWcWMwRkdhRWxKYjJwWllrRlBTMmxGWW5OUlJVRlJNa04zUVdsV1EzTkJTV3haWWtGUFMybEdXbk5CZUVSU04wRk9VVEJrWjNOQlNtbEpURUZCVlVacGQxRkhRbHBhY2tGQ1dYbERkME13VG1wMVFWRkJXV2xEZDBGR1FsbHpSVUpuVjFkaGQwRlhUbWR6VVVGQlJYbE9SWE5CUmtSelFVRXJjMmRGUWtGVlRtZFJhVEozUlhsM1FYTlJRVU5TVmxKWmMwRTRhbEZwUWtaelFYTnFVWEpCUzBrM1FVRlpSVWxuV1V4QlFsbGlWVkZGUVVWQlJHZENRMUZ2Y0dkelVrbEhTemRDZVV0NGMybFhVekozUmtONWVFRkNUWEpNWWtGV1RFeEZRa1Y1YzNSelFsbHpjMUZKVkV0NU1uZEdlWGw0UVhoTmNreGlRVmxNVEVWRlJYbHpkSE5DYTNOelVWVlVTM2t5ZDBkcGVYaENhRTF5VEdKQllreE1SVWhGZVhOMGMwSjNjM05SWjFSTGVUSjNTRk41ZUVOU1RYSk1Za0ZsVEVGRGQwUlRkWGhCUVVwR1ZrWnBkMFI1VGtOSlJWZDNRM2xPUTNOQmIycHpRVUpuVVdsQ1ozTkJSbWgwVWtGUlFWRkJUMEZGU2tOcGJVTjRSV2RaY25OSVNYSkhlVXBhVEdKQlpreE1SVUZJYVhOMGMwTkJjM05SUldWTGVUSjNTVk41ZUVGb05ISk1Za0ZwVEV4RlJFaHBjM1J6UTAxemMxRlJaVXQ1TW5kS1EzbDRRbEkwY2t4aVFXeE1URVZIU0dsemRITkRXWE56VVdObFMza3lkMHA1ZVhoRFFqUnlUR0pCYjB4TVJVcElhWE4wYzBOcmMwbEVlWGRCVjBGMGMwTnZjMGxIUTNkRlIwRm5VWGxQZDBGWFFrUnpRVWxzV1dKQlFsbE1RWEJMYVVWMGMwTnpjM05EYjNKelEyOXhUR0pCYzB4RFFXZFNlVUZuYzBGMFJGazNaMFZCUjBsbmMwRkNVVmRNUWtGWlJteHRjMEZHYWxsRFRtaFBRMDFuYVd4V1dVbEZZMmRKVEVGTVVUSlBORUpCUW1sSlRFRkJWVVpwZDFGSFFscGFja0ZDV1RKQmFsbFVaMkpKVm10MGMwTXdjMEZNUlVGQmExWlZWMHhCUWtaeVFYTkxja0ZDUmxSQllrbHNhM1J6UXpSelFVeEJUa3MzUlVGQmExWlZWMHhCUWtaeVFYTkxja0ZDUmxSQllrbHNhM1J6UXpoelNVUlhkMEZYUVhSelJFRnpRVXhCUWxKWFR6UkNRVUpwU1V4QlFWVkdhWGRSUjBKYVduSkJRbGszUVVKTE4wRk1VVEpQTkVKQlFtbEpURUZCVlVacGQxRkhRbHBhY2tGQ1dUZEJRa3MzUVVGR2NsRkJRVUZCUVVGRlVTdEplbWw0VEhkRlZrdHBNbmROVTNkblVFTkNTRWxNUVV4Uk1rODBRa0ZDYVVsTVFVRlZSbWwzVVVkQ1dscHlRVUpaTWtOM1FVVk9hRTlETW5kTmFYZDFSbnAzZEhORVRYTkpSSGRuVW5sRGQwTXdUbXAxUVZGQldXbERkMEZHUWxselJVSm5WMWRoZDBGWFRtZHpRVUpFV1dKQlFsRXlUVFJNWWtFd1RFeEZRMEZDV1d4SlF6Um5VamRCUVVrd1MzZEJhVlpLYVc5d1NFa3dZMnBaVTBKWldXaHphRmRpUVVKSk1FdDVUWGRGUWtaU1VYRk1Za0V4VEV4QlFVWnlRVVZLWWtGRlNsVmphbEo1VG1oelFXeEVTekpYUzB4cFRXZEpSSGxMVDBNeWQwNXBlWGRCUW1GM1FrTlhkMEpEVldkTWEyTnFVbmxPYUVsTVFVVkpNRXQzUTFWTmNrbE1RbWRWUm1kbmMwVkNVbGRNVFVOSlFVMW5SemROUTBwblRXRlhWVXBEU1hsRGQwTkZUV2RwYVU1SVNUQmphbGxUVGtkWlRFRkZVVGRCUTFscFEzZEJSa0paYzBWQ1oxZFhZWGRCVjA1blNVeEJRa3Q1UTB0cGJVVm5jMEZLUkZsSFVXcHpRVTVFV1ZkU1VWZE1RVU5STWtWaWMwRk9SRmxHYlhkQmVWZDNRVzFKWjNOQlFsRlhURUpCV1Vac2JYTkJSbXBaVTAxblNVeEJSVXBwVGtkWlZHZGlTVGRCU1ZFd1lYZEJhVmQzUTBWT1NFa3dZMnBaVjBGbmMwRlNSSE5CU21sSlRFRkJWVVpwZDFGSFFscGFja0ZDV1RKQmFrbE1RVUpMZVU5M1FrVk9aM05CUlhKelFWVnNXV0pCUmtwaVFVTlphVU4zUVVaQ1dYTkZRbWRYVjJGM1FWZFBkMEpEV21oSlRFRkZTbGRDYTBrM1FVUktWMEpyVlVabmFFZDVUV2hYVTAxblNVeEJSVXBwVGtkWlZHaGFUR0pCTTB4TVFVRkdhVUZuU1V4QlJrcHBRWFZTZVU1SVNUSkZhbEJFWjNSelJHZHpjMEZCVjBsTVFVbEpNRWxuU1VOQ1Iwa3daWGRCVTNOcVdWUm5kSE5FYTNOelFVRlhjMEZOYkhOQlNXeFNlVTVJU1RKSGQwRkdVbGxNYVVFNFNYbEZZbk5CU1d4elFVbHNVbmxPU0VreVJXZHpRVlZzYzBGUmJGSjVUa2hKTWtkM1FtbFhkMEpUVmtwelFVbHNXV0pyU1VGQlowRlpNazFxU1Vab2FVZDVSbHBaTjJkRlFVZEpaM05CUWxGWFRFSkJXVVpzYlhOQlJtcFpRMDExU1hsQloxQkpielJKZVVaYVRHSkJOa3hNUVVGR2FVTjNRMFZOWjB4clkycFNlVTVvU1VkRGQwbEhRbTF6UVVwcFNVeEJRVlZHYVhkUlIwSmFXbkpCUWxsNVRXZEpSSGxMVDBNeWQwOTVkMnBKUXpWSGMwRkpiRkpzU2xsSlJIaGFUSEpGY2tGU1VYSk1Za0U0VEVOTloweHJZWGRCYVZaSFZVWm5aMUJHYTNWelUzTkNSa056ZEhORU1ITkplVUYxVW5KQlEwcFZXbE5YUTBFNFYxTk5aMHhyWVhkQmFWWkhWVVpuWjFCR2EzVnpVM05DUmtOemRITkVOSE56UkZWeVNYbEJkVkp5UVVOS1ZWcFRWME5CT0ZkVE5uaExkMFZWUzNreWQxQjVlWGRPYVhWTFNVTkJPSE5CVVdwUmIyODBTWGxCZFZKeVFVTktWVnBUVjBOQk9GZFRObmhMZDBWVlN6ZEJSVkY1Tm5kTGVYTjBjMFZCYzNOQlFWZHpRVkZzYzBGUmJVbEROVWhKTUdOcVdXSkJTbEY1YzJwSlJIZG5UR2xOTkhOVGMwSkdRM04wYzBWRmMzTlJaMFZLVlV0M1FVSmhkMEpEVjNkQ1ExVm5UR3RqYWxKNVRtaEpURUZGU1RCTGQwTlZUWEpKVEVKblZVWm5aM05GUWxKWFRFMURTVUZOWjBjM1RVTktaMDFoVjFWS1EwbDVRa2h6UVZKRWMwRkthVWxNUVVGVlJtbDNVVWRDV2xweVFVSlpNa0ZuYzBGRmNrbEpjVXRaVTBOM1FXdE9aMXBEVDNkQk1FNW9Xa1pDV1hOQlNrUlpVblYzUVRCT1oxZGlRVVJLWWtGRFdXbERkMEZHUWxselJVSm5WMWRoZDBGWFRtaHpRVWxzVW0xRk5FbDVRVGhKZW1kaVNWTkJaMUpwVGtoelFVVnlTVEpGTkVsV2JYaExkMFZWUzNreWQxRnBlWGRPVTNOMWMxTnpRa1pEYzNSelJVMXpjMFJaY2tsVFRXZEpSSGwzUWtOT1EwbDZhWGhMZDBWVlN6ZEJSVkY1Tm5kTGVYTjBjMFZSYzNOQlFWWkpSV1YzUVVOT1EzTm5RVUpCVWxWVlJYazJkMDFUYjNSelJWVnpjMEZCVmtsRlpYZEJRMDVEYzJkQlFrRlNWVlZGZVRaM1RWTnZkSE5GV1hOelVVRkNSa0pQZDAxcGIzUnpSV056YzBSUmNVeGlRa2xNVEVGQlJtdFZha2xETkdkU2IyOXFXVlJwZUV0M1JWVkxlVEozVTFONWQwTkRUa056UldkeVRHSkNTMHhNU1VGQlJVVnlUR0pDVEV4TVNVRkJWVVZ5VEdKQ1RVeE1TVUpCUlVWeVRHSkNUa3hNU1VKQlZVVnlUR0pDVDB4TVNVRkJSVWx5VEdKQ1VFeE1TVUZCVlVseVRHSkNVVXhNU1VKQlJVbHlUR0pDVWt4TVNVSkJWVWx5VEdKQ1UweE1TVUZCUkRSeVRHSkNWRXhNU1VGQlZEUnlUR0pDVlV4TVNVSkJSRFJ5VEdKQ1ZreE1TVUpCVkRSeVRHSkNWMHhNU1VGQlJVRnlUR0pDV0V4TVNVRkJWVUZ5VEdKQ1dVeE1TVUpCUlVGeVRHSkNXa3hNU1VKQlZVRnlUR0pDWVV4TVNVRkJSVTF5VEdKQ1lreE1TVUZCVlUxeVRHSkNZMHhNU1VKQlJVMXlUR0pDWkV4TVNVSkJWVTF5VEdKQ1pVeE1TVUZCUkRoeVRHSkNaa3hNU1VGQlZEaHlUR0pDWjB4TVNVSkJSRGh5VEdKQ2FFeE1TVUpCVkRoeVRHSkNhVXhNUVROTGVUWjRTM2RGVlV0NU1uZFplWGwzVG5sMWQwOTVjM1J6UjFGemMwUmpjbk5FZDNKTVlrSnNURXhCUVVaeVFUTkxOMEU1UzNreWQxcHBlWGRQUTNOMWMxTnpRa1pEYzNSelIyTnpjMFJuY25ORWMzSk1Za0p2VEV4Qk5FczNRVGhMZVRKM1lWTjVkMDlEZFhkUVUzTjBjMGR2YzNORWEzSk1ja1Z5UVZKUmNreGlRbkpNVEVFMVN6ZEJOMHQ1TW5kaVEzbDNUMU4xZDFCRGMzUnpSekJ6YzBScmNuTkVNSEpNWWtKMVRFeEJOa3Q1Tm5oTGQwVlZTM2t5ZDJKNWVYZFBhWFYzVDNsemRITklRWE56Ukc5eWMwUjNja3hpUW5oTVRFRTJTemRCT1V0NU1uZGphWGw2UTFGUlEwRXdWbGxKVW5OcVNWWnNRMHMzUVVsYVlrRkVTa1pDTkhOQlJWWk5RekJCVXpkblFYbEdTbGx6VVVWQ2FteHRkMEZpYTBsQlFXZEJXVE5EZUVGQlZrTnpVVUZCUzNKRlFVSlZTM2hCUVdkeGMxRkJSbEZ5UlVGRFEzRjRRVUZXUTNWUlFVRkJRV3R4YzFGQlJsRnlhMEZCUVVGS1MzSkZSRUZGVTNoS1FVZEpWVlpwZDFGSmFGbHpVVTVyVWt4RmJVRlphRkpYVEc5SlowRkJRa0pGUTBsWk1WSlpjMUZOUVZKR2JGcFhWbTE0UVVGM2NYVkJTQzlvWWtGRmFtSkZRMEZGVVVFbktTQm1iM0p0WVhRb0ozZHZabVluS1N4Y2JpQWdJQ0IxY213b0oyUmhkR0U2WVhCd2JHbGpZWFJwYjI0dmIyTjBaWFF0YzNSeVpXRnRPMkpoYzJVMk5DeFFSRGswWWxkM1oyUnRWbmxqTW14Mlltb3dhVTFUTkhkSmFVSjZaRWRHZFZwSFJuTmlNalZzVUZOS2RXSjVTUzlRWjI4NFNWVlNVRkV4VWxwVlJWVm5Zek5hYmtsR1FsWlJhM2hLVVhsQmFVeFRPSFpXZWs1RVRIazVSVlpGVVdkVk1WcElTVVJGZFUxVE9IWlNWVFJwU1VOS2IyUklVbmRQYVRoMlpETmtNMHh1WTNwTWJUbDVXbms1U0dOdFJuZGhSMnhxWTNrNVZGWnJZM1pOVXpSNFREQlNWVkpET1hwa2JXTjRUVk0xYTJSSFVXbFFaMjg0WXpOYWJrbElhSFJpUnpWNlVGTktiMlJJVW5kUGFUaDJaRE5rTTB4dVkzcE1iVGw1V25rNGVVMUVRWGRNTTA0eVdubEpLME5xZUhSYVdGSm9Xa2RHTUZsVU5VUmlNMEkxWTIxc2JtRklVV2RMUlUxd1NVUkpkMDFVVldkWmJtdG5Zak5LY0ZveWJIVlpWM2RuV1ZoV01HRkhPWGxqZVVKQlNVZGFkbUp1VW14aVIzaDJURzFPZG1KVWQzWmlWMVl3V1ZkU2FHUkhSU3REYW5ocldsZGFlbEJuYnpoYWJUbDFaRU5DY0ZwRU1HbGtNbFl4WVZOSloyRkhPWGxoV0c5MFdWZFNNa3hZWnpsSmFrVjNUVVJCYVVsRU5FdFFSMXAyWW01UmRGcHRSbXBhVTBKdFlqSTFNRXhYV21oaVYyeHpaVlF3YVdReVZqRmhVMGxuV20wNWRXUkRNVE5hVjJ4dVlVaFJPVWxxVVhkTlEwbG5XbTA1ZFdSRE1YcGtTRXBzWkVkT2IxQlRTblZpTTBwMFdWZDNhVWxJVm5WaFdGSjZURmhDYkdOcE1XeGlWREJwVFZSQmQwMURTV2RaV0U1cVdsYzFNRkJUU1RST1ZFRnBTVWRTYkdNeVRteGlibEU1U1drd2VFNVVRV2xKUXpnclEycDRkR0ZZVG5waFZ6VnVURmRrYzJWWVFtOUpSMmgyWTIxc05reFhSbXRrYVRFMFVGTkplRTFFUVhkSmFVRjJVR2R2T0ZveWVEVmpSMmRuV2pKNE5XTkhaM1JpYlVaMFdsUXdhVmt5YkhsWk1uaHNTV2xDTVdKdGJHcGlNbEpzVUZOSmJVa3phR3haVkVGNFQzbEpaMXBFTUdsaVZGVjNUVk5CTTA5VVJtcE1WRWt3VGtOQmQweFVVVEJOYVRCNFQxUm5kRTVFVVhsTVZGRXdUV2xCZDB4VVNUQk5lVUY0VDFSbmRFNUVVWGhKUkZFd1RXa3dNRTVFUm5wT1JGRjRTVVJGTlU1NVFUQk9SRVZuVGtSUmVGbDZRV2ROYWxFd1RGUkZOVTlEUVRCT1JFbDBUa1JSZUVsRVVUQk5ibTluWWxSQmRFOUVVVFZaZVRCNVRXcE5aMDFETURCTlJGRm5UVlJuZDB4VVVYZE9RMEV3VFVSTlowMURRWGxOYWsxblRWUm5lRWxFVVhkTmVVRXdUVVJSWjA1RVFYcEpSRWw1VFdsQmQwbEVVWGROZVRCNFQwUkJaMDVFUVhwTVZGRjNUWGxCZDB4VVNYbE5lVEI0VDBSRmRFNUVRWHBNVkZGM1RYa3dNRTFFVGpaSmFVSnZZak5LY0dWcE1XaGFTRmwwWlVRd2FVMVVRWGROUTBsblRIbzBTMUJIWkhObFdFSnZTVWRrYzJWWVFtOU1WelZvWWxkVk9VbHRVblprTWpWellqSkdhMGxwUWpGaWJXeHFZakpTYkZCVFNXMUpNMmhzV1ZSQmVVOTVTV2RhUkRCcFlsUlJOVTVUUVROUFZHUnFURlJKTUUxcFFYZE1WRkV3VFdrd2VVMUVRWFJPUkZGNVRGUlJNVTFwUVhkTVZFa3dUV2xCZVUxRVFYUk9SRkY1U1VSUk1FMXBNREJPUkVsblRXcFZlVWxFUVdkT1JGVjVTVVJKZDAxRFFUQk9WRWxuVGtSUmVVbEVRV2ROYWxWNVRGUkpkMDFEUVRCT1ZFbDBUa1JWZVVsRVVURk5ibTluWWxSRk1VNTVNREZOYW1oelRGUkZlRTlETUhoT1ZGSnFURlJGTlV4VVNUQk1WRkUxVEZSSk1FeFVXVFJKUkVKelRGUkZlRTlEUVhoT1ZGSnFURlJGTlVsRVNUQk1WR3RuVGtSUlowMXFTV2RPUkZKdlQxUk9NazFxWXpWWmVrRm5UVlJCWjA5RFFYaFBVMEY0VDBOQmVFOVhaM3BQUjAxNFRVTkJkMGxFUlRSTVZHdG5UVlJuZEUxVWJESk1WRWt6VDFkbk5VMHlUWHBOVTBGM1NVUlJlRXhVU1hkSlJFbDVURlJSTUdWcFNXZGhSemw1WVZodmRGbFhVakpNV0djNVNXcEZkMDFFUVdsSlF6Z3JRMnA0Ym1KSWJIZGhRMEp1WWtoc2QyRkRNWFZaVnpGc1VGTktjR0p0V25aSmFVSXhZbTFzYW1JeVVteFFVMGx0U1ROb2JGbFVRWHBQZVVsbldrUXdhV0pVVVRWT2FVRXpUMFJzYWt4VVNYcFBRMEYzVEZSUmVrNVRNSGhQVkdOMFRrUk5NVXhVVVRCT1UwRjNURlJKZWs5RFFYaFBWR04wVGtSTk1VbEVVWHBPVXpBd1RYcFZaMDFxVVRSSlJFRm5Ua1JSTVVsRVJUVk9lVUV3VGtSVlowNUVUVEZKUkVGblRXcFJORXhVUlRWT2VVRXdUa1JWZEU1RVVURkpSRkV3VGxodloySlVUVEpNVkZreFRtMU5kMHhVYTNSUFF6QjRUbmt3ZUU1NU1IaE9NbWQwVFdwb2FreFVhMmROUXpCNFRubEJORXhVUlROSlJFVXpaR3BKTkUxdFRYZEpSRlZuVGtOQk5VbEVhMmRQVjJjd1RrZE5NVWxFUVdkUFV6QXdTVVJyZEU5WVdYUk5hbWQ1WldsQ2RFeFVUWGhKUkUxNlQxZE5kRTFxVVdkTlF6QXdUa05CZVUxRE1EQk9RMEV3VGtoTmVVMURRVEJPUTBFd1RrTkJNRTVIVFhsT1EwRjNTVVJSTUV4VVJUVkpSRkV3VEZSUk1HTjVNSGxOUXpBd1RrTXdNRTVETURCT1NHOXBTVWRvZG1OdGJEWk1WMFpyWkdreE5GQlRTWGhOUkVGM1NXbEJkbEJuYnpoYU1uZzFZMGRuWjFveWVEVmpSMmQwWW0xR2RGcFVNR2xqTWtadFdsWTVlbVJYVG1wYVdFNTZTV2xDTVdKdGJHcGlNbEpzVUZOSmJVa3phR3haVkVFd1QzbEpaMXBFTUdsaVZGVjNUVU5CTkUxVVNtcE1WRVV6VFhrd2VrOVRNSGxQVkd0MFQwUkpkRTVFUlhwTVZFVjRUMU5CZDB4VVJYbE5RMEYzVEZSSmVFNXBRWGRNVkUxNFRubEJkMHhVU1RSTmVVRjVUWHBGZEU1RVRUVkpSRkY0VFhrd01FOUVaMmROVkdkNVNVUlJOVWxFVVhoTmVVRjVUVVJWWjA1RVJYcEpSRkUwVDBOQmQwbEVSWGROVTBGM1NVUkZOVTU1UVhkSlJFMTRUbmt3ZUUxVVVXZE5lbU4wVFdwUmQwbEVaM2RNVkZGNFRYbEJlRTFVYkRaSlJ6QjVUbFJKZEUxNlNYaGlRekI2VFdwSmRFMTZSVEpaZVRCNVRGUkpkRTVUTUhsTVZHTm5UVWQzZEUxVVVUUkpSRVV4VFRKTmRFMXBRWGxNVkVsblRsTXdlRWxFYUhOTmFrVm5UV3BrYWsxVFFYbEpSRkZuVFhsQk0wbEVSbk5OVkVsNFRGUnJlbGw2U1hSTlUwRXhURlJGWjA1NVFYZGlSRWsxVGxOQmVVNUVXbXBOYVVGNVNVUlZaMDFwUVROSlJFSnpUV3BCZEUxVWJHcE5VekI1U1VSRmRFNVRRWGRNVkdRMlNXbENiMkl6U25CbGFURm9Xa2haZEdWRU1HbE5WRUYzVFVOSloweDZORXRRUjJSelpWaENiMGxIWkhObFdFSnZURmMxYUdKWFZUbEpiazVvV20xV1ptUXlSbmxpYVVsblpGYzFjRmt5T1d0YVZEQnBTbWxPTkZwWFJYZE9WSE5wU1VkUk9VbHRNREZOUkVWblRucHJNRmw1TUhoT2FsbDBUWHBuZEUxcVp6Tk1WR2QzVEZSTk5VNTVNSGhOVkZGblRVTXdlRTFVV1dkTlF6QjVUVVJuWjAxRE1IcE5SRlZuVFVNd2VVNTZTV2ROYWtsNlRGUlJlVTFwUVhwUFZHTjBUa1JaTlVsRVJUTk9RMEV3VG5sQmVrOVVZMmROVkdzelNVUk5OVTU1UVRCT2FtdG5UVU5CTlU1NVFYZEpSRVUwVDFOQmQwbEVUWGRPVXpCNFRWUkJaMDE2VVhSTmFrMTRTVVJqTWt4VVRUVk9lVUY0VFZSU05rbEhNSFJOYWsxMFRXcGpNbUZFVVRKWmVsbG5UVU5CZUUxRE1EQkpSR3QwVDFkM2RFMVVRWFJOYWtVeVdYcEJkRTE1TUhsTVZGVjBUbE13TVdGRE1IcE9SMDEwVFhsQmQweFVWV2ROYVRBeFNVUldjMHhVUlhkSlJFbDRUbTFOZDBsRVZXZE9RMEUxU1VSclowOVliMmRpVkVsNlRGUk5lazV0VFhSTlZHZG5UVU13ZWsxNVFYaE9VekI2VFhsQmVrMHpUWGhPVTBGNlRYbEJlazE1UVhwTmVVRjZUWGt3ZUU1VFFYcE5lVEI2VFhrd2VFNVRNSHBOZVRCNlRYa3dlazB6YjJsSlIyaDJZMjFzTmt4WFJtdGthVEUwVUZOSmVFMUVRWGRKYVVGMlVHZHZPRm95ZURWalIyZG5Xako0TldOSFozUmliVVowV2xRd2FXTXpWbXBaTWxaNlkzbEpaMlJYTlhCWk1qbHJXbFF3YVVwcFRqUmFWMFYzVG1wemFVbEhVVGxKYlRCNVQwUm5aMDE2UVRGWmVUQXpTVVJuZEU5RFFYbE5hVEI1U1VSTmQySkVUV2RPUjAwelNVUnJaMDFVYTJkTlZFVm5UV3BuWjA1SGR6VlBRekF6VGxkTk5VeFVZMmROYWsxMFRubEJlazFUUVhkaVJFa3pUbWxCZVUxcWJHcFBRMEV6U1VSSmVFbEVZMmROYW10MFRWZDNkRTFwUVhsWmVtZDBUME5CTkV4VVNYZEpSRUYwVFdwb2MweFVUWGRPUXpCNVQxUnNha3hVWTNSUFF6QjVUVU13TTB4VVNUUkpSRVp6VEZSRmVVOVRRWGhOZWs0MlNVY3dNazVxYTJkTmVteHFUVU5CZVU1VVozUk5ha0V4U1VSUk1rMTVNREJPYWsxblRrUlpla3hVU1RCT2FVRjNURlJSTVUxVE1IbE5SRlYwVGtSVmVFeFVVVEpOZVVGM1RGUkpNRTVwUVhsTlJGVjBUa1JWZUVsRVVURk5VekF3VGxSRlowMXFWVFJKUkVGblRrUlpla2xFU1hkT1UwRXdUbXBOWjA1RVZYaGxhVWxuWVVjNWVXRlliM1JaVjFJeVRGaG5PVWxxUlhkTlJFRnBTVU00SzBOcWVHNWlTR3gzWVVOQ2JtSkliSGRoUXpGMVdWY3hiRkJUU25wa1YwNXFXbGhPZWxneVRuQmpiVTV6V2xOSloyUlhOWEJaTWpscldsUXdhVXBwVGpSYVYwVjNUbnB6YVVsSFVUbEpiVEF4VFVSRlowNTZhM2haZVRCNVRrUlJaMDFETURCT1JFbDBUVlJyTkV4VVVUQk5hVEF3VGtSSlowMURNSGxPUkUxblRWUnJORXhVVVRCTlUwRXdUa1JKZEU1RVVYaGplbEV3VFZOQmVFOVVZMmRPUkZGNFNVUlJNRTFYVFhkSlJFa3dUa013ZUU5VVoyZE9SRkY1VEZSUk1FMVRRVEJPUkVvMlNVY3dkMHhVWnpCUFYwMTBUV3BKZWtsRVFYUk9SRUV3U1VSRk5FMURNREJOUkZGblRrUkJla2xFUVdkTmFrbDZTVVJGTkUxVFFUQk5SRTFuVGtSQk1FbEVVWGROZVVGNVRXcEpaMDFEUVRCTlJFMTBUVlJuZDBsRVVYZE5lVEF3VFVSTlowMURNSGxOYWsxMFRWUm5lRXhVVVhkTmVUQXdUVVJOZEU1RVFYcGxhVUowVFdwRk1FbEVWVEZOUjNkMFRXcFpNa3hVU1hsTlYwMTBUME13TTB4VVNYbE1WR04wVFhwQmRFMVhkM1JQVkZsblRucE9ha3hVWjJkT2VUQjVUVU5CTVV4VVNUSk1WRTV6VEZSTmRFNUhUWFJPYVRBMVRGUlZkRTFxU1dkTmFUQjZUVWQzZUUxcVZYUk5WRWswV1hwamRFOURRWGhQVXpBMFNVUkpNMHhVUm5OTmFtdDZTVVJKTkU5WFRUTkpSR05uVDBOQmVFOURRWGhKUkVreVRGUm5aMDU1TUhsTlEwRXpURlJKTTBsRVFqWkpSekI1VG1sQmVGbDZRV2ROUTBGNFRGUkZaMDFUTUhoSlJFRm5UVU5CZUV4VVJXZE5VekI0WWtNd2VVbEVTalpKYVVKdllqTktjR1ZwTVdoYVNGbDBaVVF3YVUxVVFYZE5RMGxuVEhvMFMxQkhaSE5sV0VKdlNVZGtjMlZZUW05TVZ6Vm9ZbGRWT1VsdVRqRlpNazVzWXpOT1ptSnRPV1paTW14NVdUSjRiRWxwUWpGaWJXeHFZakpTYkZCVFNXMUpNMmhzV1ZSQk5FOTVTV2RhUkRCcFlsUlplRWxFU1RST1YwMTBUVlJSWjAxVVVYUk5WR2RuVGtSQmRFOVRRVEZQUjNjeVNVUkZlRmw2WjJkTlZHZG5UV3BuWjAxcVRXZE9SRkZuVFZSR2MwMXFRWHBNVkVVd1RqSk5lRTVwTUhoTlUwRXdUVk13ZUUxVFFURk9hVUY1WWtSVk1FMVRRVEJPUkZwcVRWUlZaMDFVU1dkTmVtdG5UVlJGWjA1VVRYUk5NbmQwVFZSTlowMVVUbXBOVkZGMFRWUlJaMDFVVVhSTmVtTm5UVU13TVUxWGQzUk9WR2Q2VEZSVk5VMVhUWFJOVkZGMFRWUlJkRTE2V1hSTlZGRjBUbFJCZEUxWGQzUk5hbEUwU1VSSk1VMXViMmxKUjJoMlkyMXNOa3hYUm10a2FURTBVRk5KZUUxRVFYZEphVUYyVUdkdk9Gb3llRFZqUjJkbldqSjROV05IWjNSaWJVWjBXbFF3YVdReVJuQmtSMngxV25sSloyUlhOWEJaTWpscldsUXdhVXBwVGpSYVYwVjNUMVJ6YVVsSFVUbEpiVEF3VDFSUlowOUVRWGxaZVRCNVRrUlJaMDFETURCT1JGbDBUV3BCZVV4VVVUQk9hVEF3VGxSblowMURNSGxPUkZGblRXcEJlVXhVVVRCT2FVRXdUa1JaZEU1RVVUSkpSRWt4VG1sQmQwbEVVVEZQUTBGNVRVUkpaMDVFVlRSSlJGRXdUbWxCZDBsRVNURk9hVEI1VFVSSlowNUVWVFJNVkZFeFQwTkJNRTVVYURaSlJ6QjVUbFJWZEU1VVZYaGhRekI1VDFSU01rMTZUVEJoUkZFeFpHa3dlVTlFYkc5TmFsRTFaR2t3TUU1WWIybEpSMmgyWTIxc05reFhSbXRrYVRFMFVGTkplRTFFUVhkSmFVRjJVR2R2T0ZveWVEVmpSMmRuV2pKNE5XTkhaM1JpYlVaMFdsUXdhV1F5Um5Ca1IyeDFXakU1YW1GWVNtcGlSMVZwU1VoV2RXRlhUblphUjFVNVNXbFphbVZIVm1oTlIwVTNTV2xDYTFCVFNuUk9lbEY0U1VSUk5VMHlUWGRKUkVGblRWTXdlRWxFUlhSTlUwRjNTVVJCWjAxVE1IaEpSRVYwVFZkM2RFMXBRWGxsYVVKMFRGUkpNRTFEUVhsUFZHaHFURlJKTUU1RFFYZE1WRkV3VFdrd2VFOVVaM1JPUkZGNVRGUlJNRTFwUVhkTVZFa3dUWGxCZUU5VVozUk9SRkY0U1VSUk1FMXBNREJPUkVaNlRrUlJlRWxFUlRWT2VVRXdUa1JGWjA1RVVYaFpla0ZuVFdwUk1FeFVSVFZQUTBFd1RrUkpkRTVFVVhoSlJGRXdUVzV2WjJKVVFYUlBSRkUxV1hrd2VVMXFUV2ROUXpBd1RVUlJaMDFVWjNkTVZGRjNUa05CTUUxRVRXZE5RMEY1VFdwTlowMVVaM2hKUkZGM1RYbEJNRTFFVVdkT1JFRjZTVVJKZVUxcFFYZEpSRkYzVFhrd2VFOUVRV2RPUkVGNlRGUlJkMDE1UVhkTVZFbDVUWGt3ZUU5RVJYUk9SRUY2VEZSUmQwMTVNREJOUkU0MlNVY3dkRTVFV1dkT1ZGbDRZVU13ZWs1dVdYUk5hbFY2WVVSSk1VMHpXWHBPYldkMFRXcEZNMlZwU1dkaFJ6bDVZVmh2ZEZsWFVqSk1XR2M1U1dwRmQwMUVRV2xKUXpnclEycDRibUpJYkhkaFEwSnVZa2hzZDJGRE1YVlpWekZzVUZOS00xbFlTblZKYVVJeFltMXNhbUl5VW14UVUwbHRTVE5vYkZsVVFtbFBlVWxuV2tRd2FXSlVVVFZPUTBFMFRWUk9ha3hVU1RGTlEwRjNURlJSTVU1NU1IbE5SR04wVGtSVk0weFVVVEpQVTBGM1RGUkpNVTFEUVhsTlJHTjBUa1JWTTBsRVVURk9lVEF3VGxSalowMXFXWGxKUkVGblRrUlpOVWxFU1hkT2VVRXdUbXByWjA1RVZUTkpSRUZuVFdwWmVVeFVTWGRPZVVFd1RtcHJkRTVFV1RWSlJGRXlUMWh2WjJKVE1IbE5VekI1VFhwYWIwNVVVbXBOVkVGblRVTkJlRTlETURSSlJFVTBURlJGTkdKRE1IaE9RekI2VFVSR2FrMURNREZNVkZWMFRWUkJkRTFVUVhSTlZFSnZURlJSZVZsNU1ERkpSRUYwVDFOQk1VeFVSWGRKUkVWM1lrTXdlRTE1UVhwTlJFSnFURlJGWjAxVVFXZE9lVUY0VDFOQmVFNTVRWGhQV0c5bllsUkpNMHhVVVROTmJVMTBUV3BWWjAxRE1EQk9VMEY1VFVNd01FNVRRVEJPVTBGM1NVUkpNVWxFU1hkSlJGRXlTVVJSTVVsRVVUSkpSRWt4U1VSQlowNUVWWFJOYWtWblRrUlZkRTVFV1dkTlF6QjVUbE13ZVUxRE1EQk9VekF3VGxNd01FNVliMmxKUjJoMlkyMXNOa3hYUm10a2FURTBVRk5KZUUxRVFYZEphVUYyVUdkdk9Gb3llRFZqUjJkbldqSjROV05IWjNSaWJVWjBXbFF3YVdGWE5XMWlNVGxxWVZoS2FtSkhWV2xKU0ZaMVlWZE9kbHBIVlRsSmFWbHFaVWRXYUUxSFRUZEphVUpyVUZOS2RFNVVRWGRKUkZWNVRXMU5lazFwUVhkSlJGVXpTVVJKTWtsRVZUTkpSRlUwU1VSQlowMTZSWFJOYWxWblRsUmpkRTVVWTJkT1ZHTjBUWHBKWjAxRE1ERk9lVEI1VG1rd01VNTVNREZPZVVGM1RGUk5lVWxFU1RGTVZGVTBTVVJWTTB4VVZUUmxhVUowVGxSamRFNVVaRzlNVkVVd1RUTlpkRTFxYkc5T1ZHUXlURlJOZUU1dFozUk9WR1F5VEZSSk5HRkVTWGROV0ZsNVQwZG5kRTVVYURKTmVsRXhaV2xDZEV4VVVYcEpSRTB3VGtkTmRFMXFXVFJKUkVGMFRrUmpla3hVU1hkT1V6QXdUbnBOZEU1RVkzcEpSRUYwVFdwUmQwbEVTWGRPVXpBd1RrUlZaMDVFWTNwTVZGRXdUbE5CZVU1RVFXZE5RMEV3VGtSVlowMXFRVEZKUkZFd1RsTkJNRTVFVldkTlEwRjVUbXBuZEUxcVFURkpSRkV6VFhrd01FNUVWV2RPUkdONlpXbENkRXhVUlRCTVZHY3lUVmROZEUxcVNYbEpSRUYwVGtSQmVVbEVSVFJOUXpBd1RVUkpaMDVFUVhsSlJFRm5UV3BKZVVsRVJUUk5RMEV3VFVSSlowNUVRWGxKUkZGM1RXbEJlVTFxU1dkTlEwRXdUVVJKZEUxVVozZEpSRkYzVFdrd01FMUVTV2ROUXpCNVRXcEpkRTFVWjNkTVZGRjNUV2t3TUUxRVNYUk9SRUY1WldsSloyRkhPWGxoV0c5MFdWZFNNa3hZWnpsSmFrVjNUVVJCYVVsRE9DdERhbmh1WWtoc2QyRkRRbTVpU0d4M1lVTXhkVmxYTVd4UVUwcHFXVmMxYWxwWGQybEpTRloxWVZkT2RscEhWVGxKYVZscVpVZFdhRTFIVVRkSmFVSnJVRk5LZEU1cVZUQkpSRlY2VFcxM2RFMVVWVEJNVkVVeFRrTXdlRTVVVVdkTlZGVXdURlJKTkV4VVNUUkpSRVV4VGtNd2VFNVVVWFJOVkZVd1RGUkZNVTVEUVhsUFF6QjVUME5CZUU1VVVXZE5WRlV3U1VSRk1VNURNSGhPVkZGblRXcG5aMDFxWjNSTlZGVXdTVVJGTVU1RFFYaE9WRkZuVFZSVk1HVnBRblJNVkVVeFRrTkJlVTVVVG1wTVZFa3dUVU5CZDB4VVVYcE9VekI0VDFSVmRFNUVUVEZNVkZGNlRsTkJkMHhVU1RCTlEwRjRUMVJWZEU1RVRURkpSRkY2VGxNd01FMTZWV2ROYWxGM1NVUkJaMDVFVFRGSlJFVTFUbE5CTUUxNlZXZE9SRTB4U1VSQlowMXFVWGRNVkVVMVRsTkJNRTE2VlhST1JFMHhTVVJSZWs1WWIyZGlWRUYwVDBSTmVGbDVNSGxOVkdkblRVTXdlazlVVldkTlZHTTBURlJOTlU1VFFYcFBWRmxuVFVOQmVVMVVaMmROVkdNelNVUk5OVTVwUVhwUFZGVm5UWHByTWtsRVNYaFBRMEYzU1VSTk5VNXBNSGhPZW1kblRYcHJNa3hVVFRWT2FVRjNURlJKZUU5RE1IaE9lbWQwVFhwck1reFVUVFZPYVRCNlQxUmFOa2xwUW05aU0wcHdaV2t4YUZwSVdYUmxSREJwVFZSQmQwMURTV2RNZWpSTFVFZGtjMlZZUW05SlIyUnpaVmhDYjB4WE5XaGlWMVU1U1c1T2JGbFlTbXBoUTBsblpGYzFjRmt5T1d0YVZEQnBTbWxPTkZwWFJYZGFWSE5wU1VkUk9VbHRNREpPVkUxblRWUlJkMWw1TURKUFV6QXhUbWt3ZUU1VVkzUlBWRUYwVFdwVmVreFVhM2RNVkVsNVRWTkJkMHhVVVhkTlEwRjRUbnByZEU1RVFYZEpSRkYzVFVoTmVFNTZhMmRPUkVGM1NVUlJkMDFEUVRCTlJFRm5Ua1JCZDB4VVJUTlBVMEV3VFVSQmRFNUVRWGRaZWtGMFQxUlpkRTE2VVhSTlZHY3dURlJyZDB4VVNURk5NbmQ1VDFSQmRFMXFhM2hNVkZVeVRGUlZNa3hVU1RWTlUwRjVUMVJDTmtsSE1IUk5hbFY2VEZSRmQxbDZSVE5PZVVGM1NVUk5lVTFEUVhoT1JFMW5UWHBKZDBsRVRYbE5TRTEwVFZSUmVrbEVUWGxOUXpCNlRXcEJaMDE2U1hkTVZFMTVUVU13ZUU1RVRYUk5la2wzVEZSTmVVMURRWGhPUkUxMFRYcEpkMGxFVFhsTlF6QjZUV3BDTmtscFFtOWlNMHB3WldreGFGcElXWFJsUkRCcFRWUkJkMDFEU1dkTWVqUkxVRU01YldJeU5UQlFaMjg0VERKU2JGcHVUU3REYW5kMll6TmFibEJuUFQwbktTQm1iM0p0WVhRb0ozTjJaeWNwTzF4dWZWeHVYRzViWTJ4aGMzTmVQVndpZDJWMWFWOXBZMjl1WDF3aVhUcGlaV1p2Y21Vc0lGdGpiR0Z6Y3lvOVhDSWdkMlYxYVY5cFkyOXVYMXdpWFRwaVpXWnZjbVVnZTF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lCY0luZGxkV2xjSWp0Y2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SUc1dmNtMWhiRHRjYmlBZ0lDQnpjR1ZoYXpvZ2JtOXVaVHRjYmx4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bE8xeHVJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYVc1b1pYSnBkRHRjYmlBZ0lDQjNhV1IwYURvZ01XVnRPMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTGpKbGJUdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJQ0FnTHlvZ2IzQmhZMmwwZVRvZ0xqZzdJQ292WEc1Y2JpQWdJQ0F2S2lCR2IzSWdjMkZtWlhSNUlDMGdjbVZ6WlhRZ2NHRnlaVzUwSUhOMGVXeGxjeXdnZEdoaGRDQmpZVzRnWW5KbFlXc2daMng1Y0dnZ1kyOWtaWE1xTDF4dUlDQWdJR1p2Ym5RdGRtRnlhV0Z1ZERvZ2JtOXliV0ZzTzF4dUlDQWdJSFJsZUhRdGRISmhibk5tYjNKdE9pQnViMjVsTzF4dVhHNGdJQ0FnTHlvZ1ptbDRJR0oxZEhSdmJuTWdhR1ZwWjJoMExDQm1iM0lnZEhkcGRIUmxjaUJpYjI5MGMzUnlZWEFnS2k5Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01XVnRPMXh1WEc0Z0lDQWdMeW9nUVc1cGJXRjBhVzl1SUdObGJuUmxjaUJqYjIxd1pXNXpZWFJwYjI0Z0xTQnRZWEpuYVc1eklITm9iM1ZzWkNCaVpTQnplVzF0WlhSeWFXTWdLaTljYmlBZ0lDQXZLaUJ5WlcxdmRtVWdhV1lnYm05MElHNWxaV1JsWkNBcUwxeHVJQ0FnSUcxaGNtZHBiaTFzWldaME9pQXVNbVZ0TzF4dVhHNGdJQ0FnTHlvZ2VXOTFJR05oYmlCaVpTQnRiM0psSUdOdmJXWnZjblJoWW14bElIZHBkR2dnYVc1amNtVmhjMlZrSUdsamIyNXpJSE5wZW1VZ0tpOWNiaUFnSUNBdktpQm1iMjUwTFhOcGVtVTZJREV5TUNVN0lDb3ZYRzVjYmlBZ0lDQXZLaUJWYm1OdmJXMWxiblFnWm05eUlETkVJR1ZtWm1WamRDQXFMMXh1SUNBZ0lDOHFJSFJsZUhRdGMyaGhaRzkzT2lBeGNIZ2dNWEI0SURGd2VDQnlaMkpoS0RFeU55d2dNVEkzTENBeE1qY3NJREF1TXlrN0lDb3ZYRzU5WEc1Y2JpNTNaWFZwWDJsamIyNWZZMmx5WTJ4bE9tSmxabTl5WlNCN0lHTnZiblJsYm5RNklGd2lYRnhGUVRBeFhDSWdmU0F2S2lBbjdxQ0FKeUFxTDF4dUxuZGxkV2xmYVdOdmJsOWtiM2R1Ykc5aFpEcGlaV1p2Y21VZ2V5QmpiMjUwWlc1ME9pQmNJbHhjUlVFd01sd2lJSDBnTHlvZ0orNmdnQ2NnS2k5Y2JpNTNaWFZwWDJsamIyNWZhVzVtYnpwaVpXWnZjbVVnZXlCamIyNTBaVzUwT2lCY0lseGNSVUV3TTF3aUlIMGdMeW9nSis2Z2dDY2dLaTljYmk1M1pYVnBYMmxqYjI1ZmMyRm1aVjl6ZFdOalpYTnpPbUpsWm05eVpTQjdJR052Ym5SbGJuUTZJRndpWEZ4RlFUQTBYQ0lnZlNBdktpQW43cUNBSnlBcUwxeHVMbmRsZFdsZmFXTnZibDl6WVdabFgzZGhjbTQ2WW1WbWIzSmxJSHNnWTI5dWRHVnVkRG9nWENKY1hFVkJNRFZjSWlCOUlDOHFJQ2Z1b0lBbklDb3ZYRzR1ZDJWMWFWOXBZMjl1WDNOMVkyTmxjM002WW1WbWIzSmxJSHNnWTI5dWRHVnVkRG9nWENKY1hFVkJNRFpjSWlCOUlDOHFJQ2Z1b0lBbklDb3ZYRzR1ZDJWMWFWOXBZMjl1WDNOMVkyTmxjM05mWTJseVkyeGxPbUpsWm05eVpTQjdJR052Ym5SbGJuUTZJRndpWEZ4RlFUQTNYQ0lnZlNBdktpQW43cUNBSnlBcUwxeHVMbmRsZFdsZmFXTnZibDl6ZFdOalpYTnpYMjV2WDJOcGNtTnNaVHBpWldadmNtVWdleUJqYjI1MFpXNTBPaUJjSWx4Y1JVRXdPRndpSUgwZ0x5b2dKKzZnZ0NjZ0tpOWNiaTUzWlhWcFgybGpiMjVmZDJGcGRHbHVaenBpWldadmNtVWdleUJqYjI1MFpXNTBPaUJjSWx4Y1JVRXdPVndpSUgwZ0x5b2dKKzZnZ0NjZ0tpOWNiaTUzWlhWcFgybGpiMjVmZDJGcGRHbHVaMTlqYVhKamJHVTZZbVZtYjNKbElIc2dZMjl1ZEdWdWREb2dYQ0pjWEVWQk1FRmNJaUI5SUM4cUlDZnVvSUFuSUNvdlhHNHVkMlYxYVY5cFkyOXVYM2RoY200NlltVm1iM0psSUhzZ1kyOXVkR1Z1ZERvZ1hDSmNYRVZCTUVKY0lpQjlJQzhxSUNmdW9JQW5JQ292WEc0dWQyVjFhVjlwWTI5dVgybHVabTlmWTJseVkyeGxPbUpsWm05eVpTQjdJR052Ym5SbGJuUTZJRndpWEZ4RlFUQkRYQ0lnZlNBdktpQW43cUNBSnlBcUwxeHVMbmRsZFdsZmFXTnZibDlqWVc1alpXdzZZbVZtYjNKbElIc2dZMjl1ZEdWdWREb2dYQ0pjWEVWQk1FUmNJaUI5SUM4cUlDZnVvSUFuSUNvdlhHNHVkMlYxYVY5cFkyOXVYM05sWVhKamFEcGlaV1p2Y21WN0lHTnZiblJsYm5RNklGd2lYRnhGUVRCRlhDSWdmU0FnTHlvZ0orNmdnQ2NnS2k4aUxDSkFhVzF3YjNKMElGd2lkMlYxYVY5bWIyNTBYQ0k3WEc1Y2JsdGpiR0Z6YzE0OVhDSjNaWFZwWDJsamIyNWZYQ0pkT21KbFptOXlaU3dnVzJOc1lYTnpLajFjSWlCM1pYVnBYMmxqYjI1ZlhDSmRPbUpsWm05eVpTQjdYRzRnSUNBZ2JXRnlaMmx1T2lBd08xeHVmVnh1WEc0NlltVm1iM0psSUh0Y2JpQWdJQ0F1ZDJWMWFWOXBZMjl1WDNOMVkyTmxjM01tSUh0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXlNM0I0TzF4dUlDQWdJQ0FnSUNCamIyeHZjam9nSXpBNVFrSXdOenRjYmlBZ0lDQjlYRzRnSUNBZ0xuZGxkV2xmYVdOdmJsOTNZV2wwYVc1bkppQjdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTWpOd2VEdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDTXhNRUZGUmtZN1hHNGdJQ0FnZlZ4dUlDQWdJQzUzWlhWcFgybGpiMjVmZDJGeWJpWWdlMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURJemNIZzdYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQWpSalF6TlRNd08xeHVJQ0FnSUgxY2JpQWdJQ0F1ZDJWMWFWOXBZMjl1WDJsdVptOG1JSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeU0zQjRPMXh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dJekV3UVVWR1JqdGNiaUFnSUNCOVhHNWNiaUFnSUNBdWQyVjFhVjlwWTI5dVgzTjFZMk5sYzNOZlkybHlZMnhsSmlCN1hHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNak53ZUR0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUNNd09VSkNNRGM3WEc0Z0lDQWdmVnh1SUNBZ0lDNTNaWFZwWDJsamIyNWZjM1ZqWTJWemMxOXViMTlqYVhKamJHVW1JSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeU0zQjRPMXh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dJekE1UWtJd056dGNiaUFnSUNCOVhHNGdJQ0FnTG5kbGRXbGZhV052Ymw5M1lXbDBhVzVuWDJOcGNtTnNaU1lnZTF4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESXpjSGc3WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUFqTVRCQlJVWkdPMXh1SUNBZ0lIMWNiaUFnSUNBdWQyVjFhVjlwWTI5dVgyTnBjbU5zWlNZZ2UxeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREl6Y0hnN1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBalF6bERPVU01TzF4dUlDQWdJSDFjYmlBZ0lDQXVkMlYxYVY5cFkyOXVYMlJ2ZDI1c2IyRmtKaUI3WEc0Z0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01qTndlRHRjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJQ013T1VKQ01EYzdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0xuZGxkV2xmYVdOdmJsOXBibVp2WDJOcGNtTnNaU1lnZTF4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESXpjSGc3WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUFqTURsQ1FqQTNPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDNTNaWFZwWDJsamIyNWZjMkZtWlY5emRXTmpaWE56SmlCN1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBak1EbENRakEzTzF4dUlDQWdJSDFjYmlBZ0lDQXVkMlYxYVY5cFkyOXVYM05oWm1WZmQyRnliaVlnZTF4dUlDQWdJQ0FnSUNCamIyeHZjam9nSTBaR1FrVXdNRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXVkMlYxYVY5cFkyOXVYMk5oYm1ObGJDWWdlMXh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dJMFkwTXpVek1EdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TW5CNE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUM1M1pYVnBYMmxqYjI1ZmMyVmhjbU5vSmlCN1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBalFqSkNNa0l5TzF4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERTBjSGc3WEc0Z0lDQWdmVnh1ZlZ4dVhHNDZZbVZtYjNKbElIdGNiaUFnSUNBdWQyVjFhVjlwWTI5dVgyMXpaeVlnZTF4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERXdOSEI0TzF4dUlDQWdJQ0FnSUNBdWQyVjFhVjlwWTI5dVgzZGhjbTRtSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQWpSamMyTWpZd08xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1WEc0NlltVm1iM0psSUh0Y2JpQWdJQ0F1ZDJWMWFWOXBZMjl1WDNOaFptVW1JSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE1EUndlRHRjYmlBZ0lDQjlYRzU5SWl3aVFHbHRjRzl5ZENCY0lpNHVMeTR1TDJKaGMyVXZabTVjSWp0Y2JpOHZJT1d0bU9XY3FPYWd0K1c4aitTOG1PV0ZpT2U2cCtlYWhPbVhydW1pbU8rOGpPYVZoZWkvbWVtSGpPV3Z1ZVdGdHVTN2xuZGxkV2xmWW5SdTU1cUU1YnlWNTVTbzVwUys1WnlvNWJxVjZZT29YRzR2THlEa3VMdm9wb0htbUs5aWRYUjBiMjR1ZDJWMWFWOWlkRzdsbktoM1pYVnBYMkowYmw5d2JHRnBidVM0aSttSGplV0dtV0p2Y21SbGNpMTNhV1IwYUZ4dVhHNHVkMlYxYVY5aWRHNGdlMXh1SUNBZ0lDWXVkMlYxYVY5aWRHNWZiV2x1YVNCN1hHNGdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUJBZDJWMWFVSjBiazFwYm1sSVpXbG5hSFE3WEc0Z0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ1FIZGxkV2xDZEc1TmFXNXBSbTl1ZEZOcGVtVTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREFnTGpjMVpXMDdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdJQ0I5WEc1OVhHNWNibUoxZEhSdmJpd2dhVzV3ZFhRZ2UxeHVJQ0FnSUNZdWQyVjFhVjlpZEc0Z2UxeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMWGRwWkhSb09pQXdPMXh1SUNBZ0lDQWdJQ0J2ZFhSc2FXNWxPaUF3TzF4dUlDQWdJQ0FnSUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUNZNlptOWpkWE1nZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwYkdsdVpUb2dNRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQW1MbmRsZFdsZlluUnVYMmx1YkdsdVpTd21MbmRsZFdsZlluUnVYMjFwYm1rZ2UxeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ1lYVjBienRjYmlBZ0lDQjlYRzU5WEc1Y2JpOHFaMkZ3SUdKbGRIZGxaVzRnWW5SdUtpOWNiaTUzWlhWcFgySjBiaUFySUM1M1pYVnBYMkowYmlCN1hHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ1FIZGxkV2xDZEc1RVpXWmhkV3gwUjJGd08xeHVmVnh1WEc0dWQyVjFhVjlpZEc0dWQyVjFhVjlpZEc1ZmFXNXNhVzVsSUNzZ0xuZGxkV2xmWW5SdUxuZGxkV2xmWW5SdVgybHViR2x1WlNCN1hHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ1lYVjBienRjYmlBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nUUhkbGRXbENkRzVFWldaaGRXeDBSMkZ3TzF4dWZWeHVYRzR1ZDJWMWFWOWlkRzVmWVhKbFlTQjdYRzRnSUNBZ2JXRnlaMmx1T2lCQWQyVjFhVU5sYkd4elRXRnlaMmx1Vkc5d0lFQjNaWFZwUW5SdVJHVm1ZWFZzZEVkaGNDQXVNMlZ0TzF4dUlDQWdJQ1l1ZDJWMWFWOWlkRzVmWVhKbFlWOXBibXhwYm1VZ2UxeHVJQ0FnSUNBZ0lDQXRkMlZpYTJsMExXUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQWdJQzUzWlhWcFgySjBiaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUJoZFhSdk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQkFkMlYxYVVKMGJrUmxabUYxYkhSSFlYQTdYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNBZ0lDQWdJQ0FnSUMxM1pXSnJhWFF0Wm14bGVEb2dNVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnNaWGc2SURFN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FtT214aGMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYm4xY2JseHVRR2x0Y0c5eWRDQmNJbmRsZFdsZlluUnVYMmRzYjJKaGJGd2lPMXh1UUdsdGNHOXlkQ0JjSW5kbGRXbGZZblJ1WDJSbFptRjFiSFJjSWp0Y2JrQnBiWEJ2Y25RZ1hDSjNaWFZwWDJKMGJsOXdjbWx0WVhKNVhDSTdYRzVBYVcxd2IzSjBJRndpZDJWMWFWOWlkRzVmZDJGeWJsd2lPMXh1UUdsdGNHOXlkQ0JjSW5kbGRXbGZZblJ1WDJScGMyRmliR1ZrWENJN1hHNUFhVzF3YjNKMElGd2lkMlYxYVY5aWRHNWZjR3hoYVc1Y0lqc2lMQ0pBYVcxd2IzSjBJRndpTGk0dkxpNHZZbUZ6WlM5bWJsd2lPMXh1WEc0dWQyVjFhVjlpZEc0Z2UxeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dZWFYwYnp0Y2JpQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklHRjFkRzg3WEc0Z0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBeE5IQjRPMXh1SUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SURFMGNIZzdYRzRnSUNBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJRUIzWlhWcFFuUnVSbTl1ZEZOcGVtVTdYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNiaUFnSUNCamIyeHZjam9nUUhkbGRXbENkRzVHYjI1MFEyOXNiM0k3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SUhWdWFYUW9RSGRsZFdsQ2RHNUlaV2xuYUhRdlFIZGxkV2xDZEc1R2IyNTBVMmw2WlNrN1hHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dRSGRsZFdsQ2RHNUNiM0prWlhKU1lXUnBkWE03WEc0Z0lDQWdMbk5sZEZSaGNFTnZiRzl5S0NrN1hHNGdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYmlBZ0lDQW1PbUZtZEdWeUlIdGNiaUFnSUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0lnWENJN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeU1EQWxPMXh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJREl3TUNVN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdkRzl3T2lBd08xeHVJQ0FnSUNBZ0lDQnNaV1owT2lBd08xeHVJQ0FnSUNBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQnlaMkpoS0RBc0lEQXNJREFzSUM0eUtUdGNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUJ6WTJGc1pTZ3VOU2s3WEc0Z0lDQWdJQ0FnSUhSeVlXNXpabTl5YlMxdmNtbG5hVzQ2SURBZ01EdGNiaUFnSUNBZ0lDQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nUUhkbGRXbENkRzVDYjNKa1pYSlNZV1JwZFhNcU1qdGNiaUFnSUNCOVhHNWNiaUFnSUNBbUxuZGxkV2xmWW5SdVgybHViR2x1WlNCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ0lDQjlYRzU5SWl3aUx5OGdkR0Z3WTI5c2IzSmNiaTV6WlhSVVlYQkRiMnh2Y2loQVl6cHlaMkpoS0RBc01Dd3dMREFwS1NCN1hHNGdJQ0FnTFhkbFltdHBkQzEwWVhBdGFHbG5hR3hwWjJoMExXTnZiRzl5T2lCQVl6dGNibjFjYmx4dUx5OTFjMlZ5SUdGamRHbHZibHh1TG01dlgzTmxiR1ZqZENncElIdGNiaUFnSUNBdGQyVmlhMmwwTFhSdmRXTm9MV05oYkd4dmRYUTZJRzV2Ym1VN1hHNGdJQ0FnTFhkbFltdHBkQzExYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmlBZ0lDQXRhMmgwYld3dGRYTmxjaTF6Wld4bFkzUTZJRzV2Ym1VN1hHNGdJQ0FnTFcxdmVpMTFjMlZ5TFhObGJHVmpkRG9nYm05dVpUdGNiaUFnSUNBdGJYTXRkWE5sY2kxelpXeGxZM1E2SUc1dmJtVTdYRzRnSUNBZ2RYTmxjaTF6Wld4bFkzUTZJRzV2Ym1VN1hHNTlYRzVjYmx4dVhHNWNibHh1WEc1Y2JpSXNJa0JwYlhCdmNuUWdYQ0l1TGk4dUxpOWlZWE5sTDJadVhDSTdYRzVjYmk1M1pYVnBYMkowYmw5a1pXWmhkV3gwSUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJBZDJWMWFVSjBia1JsWm1GMWJIUkNaenRjYmlBZ0lDQmpiMnh2Y2pvZ1FIZGxkV2xDZEc1RVpXWmhkV3gwUm05dWRFTnZiRzl5TzF4dUlDQWdJQ1k2Ym05MEtDNTNaWFZwWDJKMGJsOWthWE5oWW14bFpDazZkbWx6YVhSbFpDQjdYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQkFkMlYxYVVKMGJrUmxabUYxYkhSR2IyNTBRMjlzYjNJN1hHNGdJQ0FnZlZ4dUlDQWdJQ1k2Ym05MEtDNTNaWFZwWDJKMGJsOWthWE5oWW14bFpDazZZV04wYVhabElIdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklFQjNaWFZwUW5SdVJHVm1ZWFZzZEVGamRHbDJaVVp2Ym5SRGIyeHZjanRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nUUhkbGRXbENkRzVFWldaaGRXeDBRV04wYVhabFFtYzdYRzRnSUNBZ2ZWeHVmU0lzSWtCcGJYQnZjblFnWENJdUxpOHVMaTlpWVhObEwyWnVYQ0k3WEc1Y2JpNTNaWFZwWDJKMGJsOXdjbWx0WVhKNUlIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCQWQyVjFhVUowYmxCeWFXMWhjbmxDWnp0Y2JpQWdJQ0FtT201dmRDZ3VkMlYxYVY5aWRHNWZaR2x6WVdKc1pXUXBPblpwYzJsMFpXUWdlMXh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dRSGRsZFdsQ2RHNUdiMjUwUTI5c2IzSTdYRzRnSUNBZ2ZWeHVJQ0FnSUNZNmJtOTBLQzUzWlhWcFgySjBibDlrYVhOaFlteGxaQ2s2WVdOMGFYWmxJSHRjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJRUIzWlhWcFFuUnVRV04wYVhabFJtOXVkRU52Ykc5eU8xeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQkFkMlYxYVVKMGJsQnlhVzFoY25sQlkzUnBkbVZDWnp0Y2JpQWdJQ0I5WEc1OVhHNGlMQ0pBYVcxd2IzSjBJRndpTGk0dkxpNHZZbUZ6WlM5bWJsd2lPMXh1WEc0dWQyVjFhVjlpZEc1ZmQyRnliaUI3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dRSGRsZFdsQ2RHNVhZWEp1UW1jN1hHNGdJQ0FnSmpwdWIzUW9MbmRsZFdsZlluUnVYMlJwYzJGaWJHVmtLVHAyYVhOcGRHVmtJSHRjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJRUIzWlhWcFFuUnVSbTl1ZEVOdmJHOXlPMXh1SUNBZ0lIMWNiaUFnSUNBbU9tNXZkQ2d1ZDJWMWFWOWlkRzVmWkdsellXSnNaV1FwT21GamRHbDJaU0I3WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUJBZDJWMWFVSjBia0ZqZEdsMlpVWnZiblJEYjJ4dmNqdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dRSGRsZFdsQ2RHNVhZWEp1UVdOMGFYWmxRbWM3WEc0Z0lDQWdmVnh1ZlZ4dUlpd2lRR2x0Y0c5eWRDQmNJaTR1THk0dUwySmhjMlV2Wm01Y0lqdGNibHh1TG5kbGRXbGZZblJ1WDJScGMyRmliR1ZrSUh0Y2JpQWdJQ0JqYjJ4dmNqb2dRSGRsZFdsQ2RHNUVhWE5oWW14bFpFWnZiblJEYjJ4dmNqdGNiaUFnSUNBbUxuZGxkV2xmWW5SdVgyUmxabUYxYkhRZ2UxeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ1FIZGxkV2xDZEc1RVpXWmhkV3gwUkdsellXSnNaV1JHYjI1MFEyOXNiM0k3WEc0Z0lDQWdmVnh1ZlZ4dUlpd2lRR2x0Y0c5eWRDQmNJaTR1THk0dUwySmhjMlV2Wm01Y0lqdGNibHh1TG5kbGRXbGZZblJ1WDNCc1lXbHVYM0J5YVcxaGNua2dlMXh1SUNBZ0lHTnZiRzl5T2lCQWQyVjFhVUowYmxCeWFXMWhjbmxDWnp0Y2JpQWdJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0JBZDJWMWFVSjBibEJ5YVcxaGNubENaenRjYmlBZ0lDQmlkWFIwYjI0bUxDQnBibkIxZENZZ2UxeHVJQ0FnSUNBZ0lDQmliM0prWlhJdGQybGtkR2c2SURGd2VEdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblE3WEc0Z0lDQWdmVnh1SUNBZ0lDWTZZV04wYVhabElIdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxXTnZiRzl5T2lCQWQyVjFhVUowYmxCeWFXMWhjbmxCWTNScGRtVkNaenRjYmlBZ0lDQjlYRzRnSUNBZ0pqcGhablJsY2lCN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxM2FXUjBhRG9nTUR0Y2JpQWdJQ0I5WEc1OVhHNWNiaTUzWlhWcFgySjBibDl3YkdGcGJsOWtaV1poZFd4MElIdGNiaUFnSUNCamIyeHZjam9nSXpWQk5VRTFRVHRjYmlBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWpOVUUxUVRWQk8xeHVJQ0FnSUdKMWRIUnZiaVlzSUdsdWNIVjBKaUI3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTEzYVdSMGFEb2dNWEI0TzF4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNiaUFnSUNCOVhHNGdJQ0FnSmpwaFpuUmxjaUI3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTEzYVdSMGFEb2dNRHRjYmlBZ0lDQjlYRzU5SWl3aVFHbHRjRzl5ZENCY0lpNHVMeTR1TDJKaGMyVXZabTVjSWp0Y2JseHVMbmRsZFdsZlkyVnNiQ0I3WEc0Z0lDQWdMeThnYjI1bGNIaGNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJQ0FnSmpwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBdWMyVjBWRzl3VEdsdVpTaEFkMlYxYVVObGJHeENiM0prWlhKRGIyeHZjaWs3WEc0Z0lDQWdJQ0FnSUd4bFpuUTZJRUIzWlhWcFEyVnNiRWRoY0VnN1hHNGdJQ0FnZlZ4dUlDQWdJQ1k2Wm1seWMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dVhHNHVkMlYxYVY5alpXeHNjeUI3WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nUUhkbGRXbERaV3hzYzAxaGNtZHBibFJ2Y0R0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJBZDJWMWFVTmxiR3hDWnp0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ1FIZGxkV2xEWld4c1RHbHVaVWhsYVdkb2REdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklFQjNaWFZwUTJWc2JFWnZiblJUYVhwbE95QXZMMk5sYkd6a3VLM3BsN1RtbklubWxZanBxNWpsdXFZeU0zQjQ3N3lNNkxlZjVhNmk1b2kzNTZ1djZidVk2SzZrNVp1KzVxQ0g1YkM2NWErNDVMaUE2SWUwWEc1Y2JpQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPeUF2TCtXYm9PUzR1dWF2aitTNHFtTmxiR3pubW9SaWIzSmtaWExrdmIvbmxLaGlaV1p2Y21YbGhZUG50S0JzWldaMDVwQ2U1NXFFNzd5TWFXWGt1SXZrdktybGhZUG50S0RubW9SamIyNTBZV2x1YVc1bklHSnNiMk5yNUx5dzZLNmg2TGVmNXFDSDVZZUc1TGlONVpDTTc3eU01WnlvWTJWc2JPUzRpdWVVcUc5bzVMaU41NVNmNXBXSVhHNWNiaUFnSUNBdkx5QnZibVZ3ZUZ4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQzV6WlhSVWIzQk1hVzVsS0VCM1pYVnBRMlZzYkVKdmNtUmxja052Ykc5eUtUdGNiaUFnSUNCOVhHNGdJQ0FnSmpwaFpuUmxjaUI3WEc0Z0lDQWdJQ0FnSUM1elpYUkNiM1IwYjIxTWFXNWxLRUIzWlhWcFEyVnNiRUp2Y21SbGNrTnZiRzl5S1R0Y2JpQWdJQ0I5WEc1OVhHNWNiaTUzWlhWcFgyTmxiR3h6WDNScGRHeGxJSHRjYmlBZ0lDQnRZWEpuYVc0dGRHOXdPaUF1TnpkbGJUc2dMeThnTVRWd2VDQXRJT2loak9tcm1GeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJQzR6WlcwN0lDOHZJRGh3ZUNBdElPaWhqT21ybUZ4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ1FIZGxkV2xEWld4c1IyRndTRHRjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lCQWQyVjFhVU5sYkd4SFlYQklPMXh1SUNBZ0lHTnZiRzl5T2lCQVoyeHZZbUZzVkdWNGRFTnZiRzl5TzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nUUhkbGRXbERaV3hzVkdsd2MwWnZiblJUYVhwbE8xeHVYRzRnSUNBZ0ppQXJJQzUzWlhWcFgyTmxiR3h6SUh0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNRHRjYmlBZ0lDQjlYRzU5WEc1Y2JpNTNaWFZwWDJObGJHeHpYM1JwY0hNZ2UxeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklDNHpaVzA3SUM4dklEaHdlQ0F0SU9paGpPbXJtRnh1SUNBZ0lHTnZiRzl5T2lCQVoyeHZZbUZzVkdWNGRFTnZiRzl5TzF4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ1FIZGxkV2xEWld4c1IyRndTRHRjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lCQWQyVjFhVU5sYkd4SFlYQklPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dRSGRsZFdsRFpXeHNWR2x3YzBadmJuUlRhWHBsTzF4dWZWeHVYRzR1ZDJWMWFWOWpaV3hzSUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUJBZDJWMWFVTmxiR3hIWVhCV0lFQjNaWFZwUTJWc2JFZGhjRWc3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPeUF2TCtpL21lUzRxdWFZcitTNHV1UzZodVdGdk9XdXVXTmxiR3h6NWE2NTVabW9iMjVsY0hqbWxybm1vWWpvb3F0aVpXWnZjbVhtaktIa3ZZL29nSXpsZ1pybm1vUmNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzU5WEc1Y2JpNTNaWFZwWDJObGJHeGZablFnZTF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUhKcFoyaDBPMXh1SUNBZ0lHTnZiRzl5T2lCQVoyeHZZbUZzVkdWNGRFTnZiRzl5TzF4dWZWeHVYRzR1ZDJWMWFWOWpaV3hzWDNCeWFXMWhjbmtnZTF4dUlDQWdJR1pzWlhnNklERTdYRzU5SWl3aVhHNHVjMlYwVkc5d1RHbHVaU2hBWXpvZ0kwTTNRemRETnlrZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aUlGd2lPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNCc1pXWjBPaUF3TzF4dUlDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCb1pXbG5hSFE2SURGd2VEdGNiaUFnSUNCaWIzSmtaWEl0ZEc5d09pQXhjSGdnYzI5c2FXUWdRR003WEc0Z0lDQWdZMjlzYjNJNklFQmpPMXh1SUNBZ0lIUnlZVzV6Wm05eWJTMXZjbWxuYVc0NklEQWdNRHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSE5qWVd4bFdTZ3dMalVwTzF4dWZWeHVYRzR1YzJWMFFtOTBkRzl0VEdsdVpTaEFZem9nSTBNM1F6ZEROeWtnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpSUZ3aU8xeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lHSnZkSFJ2YlRvZ01EdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCb1pXbG5hSFE2SURGd2VEdGNiaUFnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ2MyOXNhV1FnUUdNN1hHNGdJQ0FnWTI5c2IzSTZJRUJqTzF4dUlDQWdJSFJ5WVc1elptOXliUzF2Y21sbmFXNDZJREFnTVRBd0pUdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklITmpZV3hsV1Nnd0xqVXBPMXh1ZlZ4dVhHNHVjMlYwVEdWbWRFeHBibVVvUUdNNklDTkROME0zUXpjcElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lpQmNJanRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ2JHVm1kRG9nTUR0Y2JpQWdJQ0IwYjNBNklEQTdYRzRnSUNBZ2QybGtkR2c2SURGd2VEdGNiaUFnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ1ltOXlaR1Z5TFd4bFpuUTZJREZ3ZUNCemIyeHBaQ0JBWXp0Y2JpQWdJQ0JqYjJ4dmNqb2dRR003WEc0Z0lDQWdkSEpoYm5ObWIzSnRMVzl5YVdkcGJqb2dNQ0F3TzF4dUlDQWdJSFJ5WVc1elptOXliVG9nYzJOaGJHVllLREF1TlNrN1hHNTlYRzVjYmk1elpYUlNhV2RvZEV4cGJtVW9RR002SUNORE4wTTNRemNwSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWlCY0lqdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnY21sbmFIUTZJREE3WEc0Z0lDQWdkRzl3T2lBd08xeHVJQ0FnSUhkcFpIUm9PaUF4Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUF4TURBbE8xeHVJQ0FnSUdKdmNtUmxjaTF5YVdkb2REb2dNWEI0SUhOdmJHbGtJRUJqTzF4dUlDQWdJR052Ykc5eU9pQkFZenRjYmlBZ0lDQjBjbUZ1YzJadmNtMHRiM0pwWjJsdU9pQXdJREV3TUNVN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCelkyRnNaVmdvTUM0MUtUdGNibjBpTENKQWFXMXdiM0owSUZ3aUxpNHZMaTR2WW1GelpTOW1ibHdpTzF4dVhHNHVkMlYxYVY5alpXeHNjMTloWTJObGMzTWdlMXh1SUNBZ0lDNTNaWFZwWDJObGJHdzZibTkwS0M1dWIxOWhZMk5sYzNNcElIdGNiaUFnSUNBZ0lDQWdMeThnNVp5b1kyVnNiRjloWTJObGMzUGxrb3psaGJibHJvUG5zYnZsbm92bm1vUmpaV3hzNXJlMzU1MkE1NVNvNTVxRTVaeTY1cG12NUxpTDc3eU01WVcyNWE2RFkyVnNiT2ltZ2VXS29HNXZYMkZqWTJWemMrKzhqT21CditXRmplYWNpZWVDdWVXSHUrYUFnVnh1SUNBZ0lDQWdJQ0F1YzJWMFZHRndRMjlzYjNJN1hHNGdJQ0FnSUNBZ0lDWTZZV04wYVhabElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNORlEwVkRSVU03WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lDQWdZUzUzWlhWcFgyTmxiR3dnZTF4dUlDQWdJQ0FnSUNCamIyeHZjam9nYVc1b1pYSnBkRHRjYmlBZ0lDQjlYRzRnSUNBZ0xuZGxkV2xmWTJWc2JGOW1kQ0I3WEc0Z0lDQWdJQ0FnSUNZNllXWjBaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0lnWENJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0F1YzJWMFFYSnliM2RmVjJGd0tISnBaMmgwTENBMmNIZ3NJQ05ET0VNNFEwUXNJREp3ZUNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYjNBNklDMHhjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGJHVm1kRG91TTJWdE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1SWl3aUx5OGdZM056TWlCaGNuSnZkMXh1TG1GeWNtOTNLRUJpYjNKa1pYSlhhV1IwYUN3Z1FHSnZjbVJsY2tOdmJHOXlLU0I3WEc0Z0lDQWdMbk5sZEVGeWNtOTNWMmxrZEdnb1FHSnZjbVJsY2xkcFpIUm9LVHRjYmlBZ0lDQXVjMlYwUVhKeWIzZERiMnh2Y2loQVltOXlaR1Z5UTI5c2IzSXBPMXh1ZlZ4dVhHNHVjMlYwUVhKeWIzZERiMnh2Y2loQVltOXlaR1Z5UTI5c2IzSXBJSHRjYmlBZ0lDQW1MbUZ5Y205M1gzUWdlMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dExXTnZiRzl5T2lCQVltOXlaR1Z5UTI5c2IzSTdYRzRnSUNBZ2ZWeHVJQ0FnSUNZdVlYSnliM2RmY2lCN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxc1pXWjBMV052Ykc5eU9pQkFZbTl5WkdWeVEyOXNiM0k3WEc0Z0lDQWdmVnh1SUNBZ0lDWXVZWEp5YjNkZllpQjdYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMTBiM0F0WTI5c2IzSTZJRUJpYjNKa1pYSkRiMnh2Y2p0Y2JpQWdJQ0I5WEc0Z0lDQWdKaTVoY25KdmQxOXNJSHRjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMWEpwWjJoMExXTnZiRzl5T2lCQVltOXlaR1Z5UTI5c2IzSTdYRzRnSUNBZ2ZWeHVmVnh1WEc0dWMyVjBRWEp5YjNkWGFXUjBhQ2hBWW05eVpHVnlWMmxrZEdncElIdGNiaUFnSUNCaWIzSmtaWEl0ZDJsa2RHZzZJRUJpYjNKa1pYSlhhV1IwYUR0Y2JuMWNibHh1TG5ObGRFRnljbTkzS0VCa2FYSmxZM1JwYjI0c0lFQmliM0prWlhKWGFXUjBhQ3dnUUdKdmNtUmxja052Ykc5eUtTQjNhR1Z1SUNoQVpHbHlaV04wYVc5dUlEMGdkRzl3S1NCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0FnSUhkcFpIUm9PaUF3TzF4dUlDQWdJR2hsYVdkb2REb2dNRHRjYmlBZ0lDQmliM0prWlhJdGQybGtkR2c2SUVCaWIzSmtaWEpYYVdSMGFEdGNiaUFnSUNCaWIzSmtaWEl0YzNSNWJHVTZJR1JoYzJobFpEdGNiaUFnSUNCaWIzSmtaWEl0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dVhHNGdJQ0FnTG1GeWNtOTNYM1FvUUdKdmNtUmxja052Ykc5eUtUdGNibjFjYmx4dUxuTmxkRUZ5Y205M0tFQmthWEpsWTNScGIyNHNJRUJpYjNKa1pYSlhhV1IwYUN3Z1FHSnZjbVJsY2tOdmJHOXlLU0IzYUdWdUlDaEFaR2x5WldOMGFXOXVJRDBnY21sbmFIUXBJSHRjYmlBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEc0Z0lDQWdkMmxrZEdnNklEQTdYRzRnSUNBZ2FHVnBaMmgwT2lBd08xeHVJQ0FnSUdKdmNtUmxjaTEzYVdSMGFEb2dRR0p2Y21SbGNsZHBaSFJvTzF4dUlDQWdJR0p2Y21SbGNpMXpkSGxzWlRvZ1pHRnphR1ZrTzF4dUlDQWdJR0p2Y21SbGNpMWpiMnh2Y2pvZ2RISmhibk53WVhKbGJuUTdYRzRnSUNBZ0xtRnljbTkzWDNJb1FHSnZjbVJsY2tOdmJHOXlLVHRjYm4xY2JseHVMbk5sZEVGeWNtOTNLRUJrYVhKbFkzUnBiMjRzSUVCaWIzSmtaWEpYYVdSMGFDd2dRR0p2Y21SbGNrTnZiRzl5S1NCM2FHVnVJQ2hBWkdseVpXTjBhVzl1SUQwZ1ltOTBkRzl0S1NCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0FnSUhkcFpIUm9PaUF3TzF4dUlDQWdJR2hsYVdkb2REb2dNRHRjYmlBZ0lDQmliM0prWlhJdGQybGtkR2c2SUVCaWIzSmtaWEpYYVdSMGFEdGNiaUFnSUNCaWIzSmtaWEl0YzNSNWJHVTZJR1JoYzJobFpEdGNiaUFnSUNCaWIzSmtaWEl0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQWdJQzVoY25KdmQxOWlLRUJpYjNKa1pYSkRiMnh2Y2lrN1hHNTlYRzVjYmk1elpYUkJjbkp2ZHloQVpHbHlaV04wYVc5dUxDQkFZbTl5WkdWeVYybGtkR2dzSUVCaWIzSmtaWEpEYjJ4dmNpa2dkMmhsYmlBb1FHUnBjbVZqZEdsdmJpQTlJR3hsWm5RcElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUNBZ2QybGtkR2c2SURBN1hHNGdJQ0FnYUdWcFoyaDBPaUF3TzF4dUlDQWdJR0p2Y21SbGNpMTNhV1IwYURvZ1FHSnZjbVJsY2xkcFpIUm9PMXh1SUNBZ0lHSnZjbVJsY2kxemRIbHNaVG9nWkdGemFHVmtPMXh1SUNBZ0lHSnZjbVJsY2kxamIyeHZjam9nZEhKaGJuTndZWEpsYm5RN1hHNGdJQ0FnTG1GeWNtOTNYMndvUUdKdmNtUmxja052Ykc5eUtUdGNibjFjYmx4dUxtRnljbTkzWDNRb1FHTXBJSHRjYmlBZ0lDQmliM0prWlhJdGRHOXdMWGRwWkhSb09pQXdPMXh1SUNBZ0lHSnZjbVJsY2kxaWIzUjBiMjB0WTI5c2IzSTZJRUJqTzF4dUlDQWdJR0p2Y21SbGNpMWliM1IwYjIwdGMzUjViR1U2SUhOdmJHbGtPMXh1ZlZ4dVhHNHVZWEp5YjNkZmNpaEFZeWtnZTF4dUlDQWdJR0p2Y21SbGNpMXlhV2RvZEMxM2FXUjBhRG9nTUR0Y2JpQWdJQ0JpYjNKa1pYSXRiR1ZtZEMxamIyeHZjam9nUUdNN1hHNGdJQ0FnWW05eVpHVnlMV3hsWm5RdGMzUjViR1U2SUhOdmJHbGtPMXh1ZlZ4dVhHNHVZWEp5YjNkZllpaEFZeWtnZTF4dUlDQWdJR0p2Y21SbGNpMWliM1IwYjIwdGQybGtkR2c2SURBN1hHNGdJQ0FnWW05eVpHVnlMWFJ2Y0MxamIyeHZjam9nUUdNN1hHNGdJQ0FnWW05eVpHVnlMWFJ2Y0MxemRIbHNaVG9nYzI5c2FXUTdYRzU5WEc1Y2JpNWhjbkp2ZDE5c0tFQmpLU0I3WEc0Z0lDQWdZbTl5WkdWeUxXeGxablF0ZDJsa2RHZzZJREE3WEc0Z0lDQWdZbTl5WkdWeUxYSnBaMmgwTFdOdmJHOXlPaUJBWXp0Y2JpQWdJQ0JpYjNKa1pYSXRjbWxuYUhRdGMzUjViR1U2SUhOdmJHbGtPMXh1ZlZ4dVhHNHZMeUJqYzNNeklHRnljbTkzWEc0dWMyVjBRWEp5YjNkWGFXUjBhRjlYWVhBb1FHSnZjbVJsY2xkcFpIUm9LU0I3WEc0Z0lDQWdZbTl5WkdWeUxYZHBaSFJvT2lCQVltOXlaR1Z5VjJsa2RHZ2dRR0p2Y21SbGNsZHBaSFJvSURBZ01EdGNibjFjYmx4dUxuTmxkRUZ5Y205M1UybDZaVjlYWVhBb1FHRnljbTkzYzJsNlpTa2dlMXh1SUNBZ0lHaGxhV2RvZERvZ1FHRnljbTkzYzJsNlpUdGNiaUFnSUNCM2FXUjBhRG9nUUdGeWNtOTNjMmw2WlR0Y2JuMWNibHh1TG5ObGRFRnljbTkzWDFkaGNDaEFaR2x5WldOMGFXOXVMQ0JBWVhKeWIzZHphWHBsTENCQVltOXlaR1Z5UTI5c2IzSXNRR0p2Y21SbGNsZHBaSFJvS1NCM2FHVnVJQ2hBWkdseVpXTjBhVzl1SUQwZ2RHOXdLU0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4dUlDQWdJQzUwY21GdWMyWnZjbTBvZEhKaGJuTnNZWFJsS0RBc0lEQXBJSEp2ZEdGMFpTZ3RORFZrWldjcEtUdGNiaUFnSUNBdWMyVjBRWEp5YjNkVGFYcGxYMWRoY0NoQVlYSnliM2R6YVhwbEtUdGNiaUFnSUNBdWMyVjBRWEp5YjNkWGFXUjBhRjlYWVhBb1FHSnZjbVJsY2xkcFpIUm9LVHRjYmlBZ0lDQmliM0prWlhJdFkyOXNiM0k2SUVCaWIzSmtaWEpEYjJ4dmNqdGNiaUFnSUNCaWIzSmtaWEl0YzNSNWJHVTZJSE52Ykdsa08xeHVmVnh1WEc0dWMyVjBRWEp5YjNkZlYyRndLRUJrYVhKbFkzUnBiMjRzSUVCaGNuSnZkM05wZW1Vc0lFQmliM0prWlhKRGIyeHZjaXhBWW05eVpHVnlWMmxrZEdncElIZG9aVzRnS0VCa2FYSmxZM1JwYjI0Z1BTQnlhV2RvZENrZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNnME5XUmxaeWs3WEc0Z0lDQWdMbk5sZEVGeWNtOTNVMmw2WlY5WFlYQW9RR0Z5Y205M2MybDZaU2s3WEc0Z0lDQWdMbk5sZEVGeWNtOTNWMmxrZEdoZlYyRndLRUJpYjNKa1pYSlhhV1IwYUNrN1hHNGdJQ0FnWW05eVpHVnlMV052Ykc5eU9pQkFZbTl5WkdWeVEyOXNiM0k3WEc0Z0lDQWdZbTl5WkdWeUxYTjBlV3hsT2lCemIyeHBaRHRjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ2RHOXdPaUF0TW5CNE8xeHVmVnh1WEc0dWMyVjBRWEp5YjNkZlYyRndLRUJrYVhKbFkzUnBiMjRzSUVCaGNuSnZkM05wZW1Vc0lFQmliM0prWlhKRGIyeHZjaXhBWW05eVpHVnlWMmxrZEdncElIZG9aVzRnS0VCa2FYSmxZM1JwYjI0Z1BTQmtiM2R1S1NCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RFek5XUmxaeWs3WEc0Z0lDQWdMbk5sZEVGeWNtOTNVMmw2WlY5WFlYQW9RR0Z5Y205M2MybDZaU2s3WEc0Z0lDQWdMbk5sZEVGeWNtOTNWMmxrZEdoZlYyRndLRUJpYjNKa1pYSlhhV1IwYUNrN1hHNGdJQ0FnWW05eVpHVnlMV052Ykc5eU9pQkFZbTl5WkdWeVEyOXNiM0k3WEc0Z0lDQWdZbTl5WkdWeUxYTjBlV3hsT2lCemIyeHBaRHRjYmx4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQjBiM0E2SUMwemNIZzdYRzU5WEc1Y2JpNXpaWFJCY25KdmQxOVhZWEFvUUdScGNtVmpkR2x2Yml3Z1FHRnljbTkzYzJsNlpTd2dRR0p2Y21SbGNrTnZiRzl5TEVCaWIzSmtaWEpYYVdSMGFDa2dkMmhsYmlBb1FHUnBjbVZqZEdsdmJpQTlJR3hsWm5RcElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQnliM1JoZEdVb0xURXpOV1JsWnlrN1hHNGdJQ0FnTG5ObGRFRnljbTkzVTJsNlpWOVhZWEFvUUdGeWNtOTNjMmw2WlNrN1hHNGdJQ0FnTG5ObGRFRnljbTkzVjJsa2RHaGZWMkZ3S0VCaWIzSmtaWEpYYVdSMGFDazdYRzRnSUNBZ1ltOXlaR1Z5TFdOdmJHOXlPaUJBWW05eVpHVnlRMjlzYjNJN1hHNGdJQ0FnWW05eVpHVnlMWE4wZVd4bE9pQnpiMnhwWkR0Y2JseHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0IwYjNBNklDMHljSGc3WEc1OUlpd2lRR2x0Y0c5eWRDQmNJaTR1THk0dUx5NHVMMkpoYzJVdlptNWNJanRjYmx4dUxuZGxkV2xmWTJobFkydGZiR0ZpWld3Z2UxeHVJQ0FnSUM1elpYUlVZWEJEYjJ4dmNpZ3BPMXh1ZlZ4dVhHNHVkMlYxYVY5amFHVmphM3RjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ2JHVm1kRG9nTFRrNU9UbGxiVHRjYm4xY2JpSXNJa0JwYlhCdmNuUWdYQ0l1TGk4dUxpOHVMaTlpWVhObEwyWnVYQ0k3WEc1Y2JpOHZJRzFsZEdodlpESWdZV05qWlhOelltbHNhWFI1WEc0dWQyVjFhVjlqWld4c2MxOXlZV1JwYjN0Y2JpQWdJQ0F1ZDJWMWFWOWpaV3hzWDJaMElIdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lCQWQyVjFhVU5sYkd4SmJtNWxja2RoY0VnN1hHNGdJQ0FnZlZ4dUlDQWdJQzUzWlhWcFgyTmxiR3dnZTF4dUlDQWdJQ0FnSUNBbU9tRmpkR2wyWlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqUlVORlEwVkRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dUxuZGxkV2xmWTJobFkyc2dlMXh1SUNBZ0lDOHZJSEpoWkdsdlhHNGdJQ0FnTG5kbGRXbGZZMlZzYkhOZmNtRmthVzhnSmlCN1hHNGdJQ0FnSUNBZ0lDWTZZMmhsWTJ0bFpDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBbUlDc2dMbmRsZFdsZmFXTnZibDlqYUdWamEyVmtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FtT21KbFptOXlaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJsYm5RNklDZGNYRVZCTURnbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dJekE1UWtJd056dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE5uQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibjBpTENKQWFXMXdiM0owSUZ3aUxpNHZMaTR2TGk0dlltRnpaUzltYmx3aU8xeHVYRzR1ZDJWMWFWOWpaV3hzYzE5amFHVmphMkp2ZUNCN1hHNGdJQ0FnTG5kbGRXbGZZMlZzYkY5b1pDQjdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RjbWxuYUhRNklFQjNaWFZwUTJWc2JFbHVibVZ5UjJGd1NEdGNiaUFnSUNCOVhHNGdJQ0FnTG5kbGRXbGZZMlZzYkNCN1hHNGdJQ0FnSUNBZ0lDWTZZV04wYVhabElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNORlEwVkRSVU03WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lDQWdMbmRsZFdsZmFXTnZibDlqYUdWamEyVmtJSHRjYmlBZ0lDQWdJQ0FnSmpwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWREb2dKMXhjUlVFd01TYzdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSTBNNVF6bERPVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNak53ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1WEc0dkx5QnRaWFJvYjJReUlHRmpZMlZ6YzJKcGJHbDBlVnh1TG5kbGRXbGZZMmhsWTJzZ2UxeHVJQ0FnSUM4dklHTm9aV05yWW05NFhHNGdJQ0FnTG5kbGRXbGZZMlZzYkhOZlkyaGxZMnRpYjNnZ0ppQjdYRzRnSUNBZ0lDQWdJQ1k2WTJobFkydGxaQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1JQ3NnTG5kbGRXbGZhV052Ymw5amFHVmphMlZrSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbU9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5SbGJuUTZJQ2RjWEVWQk1EWW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSXpBNVFrSXdOenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5SWl3aVFHbHRjRzl5ZENCY0lpNHVMeTR1THk0dUwySmhjMlV2Wm01Y0lqdGNibHh1TG5kbGRXbGZiR0ZpWld4N1hHNGdJR1JwYzNCc1lYazZZbXh2WTJzN1hHNGdJSGRwWkhSb09qTmxiVHRjYm4xY2JpNTNaWFZwWDJsdWNIVjBJSHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQmliM0prWlhJNklEQTdYRzRnSUNBZ2IzVjBiR2x1WlRvZ01EdGNiaUFnSUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklHNXZibVU3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblE3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUJwYm1obGNtbDBPMXh1SUNBZ0lHTnZiRzl5T2lCcGJtaGxjbWwwTzF4dUlDQWdJR2hsYVdkb2REb2dkVzVwZENoQWQyVjFhVU5sYkd4TWFXNWxTR1ZwWjJoMExDQmxiU2s3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SUVCM1pYVnBRMlZzYkV4cGJtVklaV2xuYUhRN1hHNWNiaUFnSUNBdkx5Qm9hV1JsY3lCMGFHVWdjM0JwYmkxaWRYUjBiMjVjYmlBZ0lDQW1Pam90ZDJWaWEybDBMVzkxZEdWeUxYTndhVzR0WW5WMGRHOXVMQ0FtT2pvdGQyVmlhMmwwTFdsdWJtVnlMWE53YVc0dFluVjBkRzl1ZTF4dUlDQWdJQ0FnSUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nTUR0Y2JpQWdJQ0I5WEc1OVhHNHVkMlYxYVY5MFpYaDBZWEpsWVNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ1ltOXlaR1Z5T2lBd08xeHVJQ0FnSUhKbGMybDZaVG9nYm05dVpUdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCamIyeHZjam9nYVc1b1pYSnBkRHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREZsYlR0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ2FXNW9aWEpwZER0Y2JpQWdJQ0J2ZFhSc2FXNWxPaUF3TzF4dWZWeHVYRzR1ZDJWMWFWOTBaWGgwWVhKbFlWOWpiM1Z1ZEdWeWUxeHVJQ0FnSUdOdmJHOXlPaUJBWjJ4dlltRnNSR1Z6WTBOdmJHOXlPMXh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJSEpwWjJoME8xeHVJQ0FnSUM1M1pYVnBYMk5sYkd4ZmQyRnliaUFtZTF4dUlDQWdJQ0FnSUNCamIyeHZjam9nUUdkc2IySmhiRmRoY201RGIyeHZjanRjYmlBZ0lDQjlYRzU5WEc1Y2JpNTNaWFZwWDNSdmNIUnBjSE1nZTF4dUlDQWdJR1JwYzNCc1lYazZibTl1WlR0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWm1sNFpXUTdYRzRnSUNBZ0xYZGxZbXRwZEMxMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWb29NQ2s3WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdkRzl3T2lBd08xeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXlMak03WEc0Z0lDQWdabTl1ZEMxemFYcGxPakUwY0hnN1hHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dUlDQWdJR052Ykc5eU9pQWpSa1pHTzF4dUlDQWdJSG90YVc1a1pYZzZJREk3WEc0Z0lDQWdKaTUzWlhWcFgzZGhjbTRnZTF4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCQVoyeHZZbUZzVjJGeWJrTnZiRzl5TzF4dUlDQWdJSDFjYm4xY2JpNTNaWFZwWDJObGJHeHpYMlp2Y20wZ2UxeHVJQ0FnSUM1M1pYVnBYMk5sYkd4ZmQyRnlibnRjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZRR2RzYjJKaGJGZGhjbTVEYjJ4dmNqdGNiaUFnSUNBZ0lDQWdMbmRsZFdsZmFXTnZibDkzWVhKdWUyUnBjM0JzWVhrNmFXNXNhVzVsTFdKc2IyTnJPMzFjYmlBZ0lDQjlYRzRnSUNBZ0xuZGxkV2xmWTJWc2JGOW9aQ0I3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJQzR6WlcwN1hHNGdJQ0FnZlZ4dUlDQWdJQzUzWlhWcFgyTmxiR3hmWm5SN1ptOXVkQzF6YVhwbE9qQTdmVnh1SUNBZ0lDNTNaWFZwWDJsamIyNWZkMkZ5Ym50Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRwdWIyNWxPMXh1SUNBZ0lIMWNibjFjYmlJc0lrQnBiWEJ2Y25RZ1hDSXVMaTh1TGk4dUxpOWlZWE5sTDJadVhDSTdYRzVjYmk1M1pYVnBYMk5sYkd4ZmMyVnNaV04wSUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQWdJQzUzWlhWcFgzTmxiR1ZqZENCN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SURNd2NIZzdYRzRnSUNBZ2ZWeHVJQ0FnSUM1M1pYVnBYMkZqWTJWemMxOXBZMjl1SUh0Y2JseHVJQ0FnSUgxY2JpQWdJQ0F1ZDJWMWFWOWpaV3hzWDJKa2UxeHVJQ0FnSUNBZ0lDQW1PbUZtZEdWeWUxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nWENJZ1hDSTdYRzRnSUNBZ0lDQWdJQ0FnSUNBdWMyVjBRWEp5YjNkZlYyRndLSEpwWjJoMExDQTJjSGdzSUNORE9FTTRRMFFzSURKd2VDazdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSdmNEb2dOVEFsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjbWxuYUhRNklFQjNaWFZwUTJWc2JFZGhjRWc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF0TTNCNE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1WEc0dWQyVjFhVjl6Wld4bFkzUWdlMXh1SUNBZ0lDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUb2dibTl1WlR0Y2JpQWdJQ0JpYjNKa1pYSTZJREE3WEc0Z0lDQWdiM1YwYkdsdVpUb2dNRHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJR2x1YUdWeWFYUTdYRzRnSUNBZ2FHVnBaMmgwT2lCQWQyVjFhVU5sYkd4SVpXbG5hSFE3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lIb3RhVzVrWlhnNklERTdYRzRnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUJBZDJWMWFVTmxiR3hIWVhCSU8xeHVmVnh1SWl3aVFHbHRjRzl5ZENCY0lpNHVMeTR1THk0dUwySmhjMlV2Wm01Y0lqdGNia0JwYlhCdmNuUWdYQ0l1TDNkbGRXbGZjMlZzWldOMFhDSTdYRzVjYmk1M1pYVnBYM05sYkdWamRGOWlaV1p2Y21VZ2UxeHVJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZRSGRsZFdsRFpXeHNSMkZ3U0R0Y2JpQWdJQ0F1ZDJWMWFWOXpaV3hsWTNSN2QybGtkR2c2WVhWMGJ6dDlYRzRnSUNBZ0xuZGxkV2xmWTJWc2JGOW9aQ0I3WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T25KbGJHRjBhWFpsTzF4dUlDQWdJQ0FnSUNBbU9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQzV6WlhSU2FXZG9kRXhwYm1Vb1FIZGxkV2xEWld4c1FtOXlaR1Z5UTI5c2IzSXBPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNZNlltVm1iM0psZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0lnWENJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0F1YzJWMFFYSnliM2RmVjJGd0tISnBaMmgwTENBMmNIZ3NJQ05ET0VNNFEwUXNJREp3ZUNrN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ2Y0RvZ05UQWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtbG5hSFE2SUVCM1pYVnBRMlZzYkVkaGNFZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09pQXRNM0I0TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJQzUzWlhWcFgyTmxiR3hmWW1RZ2UxeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2UUhkbGRXbERaV3hzUjJGd1NEdGNiaUFnSUNBZ0lDQWdKanBoWm5SbGNudGNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2Ym05dVpUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibjBpTENKQWFXMXdiM0owSUZ3aUxpNHZMaTR2TGk0dlltRnpaUzltYmx3aU8xeHVRR2x0Y0c5eWRDQmNJaTR2ZDJWMWFWOXpaV3hsWTNSY0lqdGNibHh1TG5kbGRXbGZjMlZzWldOMFgyRm1kR1Z5SUh0Y2JpQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNlFIZGxkV2xEWld4c1IyRndTRHRjYm4waUxDSkFhVzF3YjNKMElGd2lMaTR2TGk0dkxpNHZZbUZ6WlM5bWJsd2lPMXh1WEc0dWQyVjFhVjkyWTI5a1pTQjdYRzRnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJREE3WEc0Z0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ01EdGNiaUFnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTUR0Y2JpQWdJQ0F1ZDJWMWFWOWpaV3hzWDJaMElIdGNiaUFnSUNBZ0lDQWdhVzFuSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lBMWNIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUVCM1pYVnBRMlZzYkVobGFXZG9kRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCdGFXUmtiR1U3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1OUlpd2lRR2x0Y0c5eWRDQmNJaTR1THk0dUwySmhjMlV2Wm01Y0lqdGNia0IzWlhWcFUzZHBkR05vU0dWcFoyaDBPaUF6TW5CNE8xeHVMbmRsZFdsZlkyVnNiRjl6ZDJsMFkyaDdYRzRnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJQ2hBZDJWMWFVTmxiR3hJWldsbmFIUWdMU0JBZDJWMWFWTjNhWFJqYUVobGFXZG9kQ2tnTHlBeU8xeHVJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUFvUUhkbGRXbERaV3hzU0dWcFoyaDBJQzBnUUhkbGRXbFRkMmwwWTJoSVpXbG5hSFFwSUM4Z01qdGNibjFjYmk1M1pYVnBYM04zYVhSamFIdGNiaUFnSUNCaGNIQmxZWEpoYm1ObE9pQnViMjVsTzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQjNhV1IwYURvZ05USndlRHRjYmlBZ0lDQm9aV2xuYUhRNklFQjNaWFZwVTNkcGRHTm9TR1ZwWjJoME8xeHVJQ0FnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNORVJrUkdSRVk3WEc0Z0lDQWdiM1YwYkdsdVpUb2dNRHRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBeE5uQjRPMXh1SUNBZ0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSTBSR1JFWkVSanRjYmlBZ0lDQW1PbUpsWm05eVpYdGNiaUFnSUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0lnWENJN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdkRzl3T2lBd08xeHVJQ0FnSUNBZ0lDQnNaV1owT2lBd08xeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ05UQndlRHRjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUJBZDJWMWFWTjNhWFJqYUVobGFXZG9kQ0F0SURJN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURFMWNIZzdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05HUkVaRVJrUTdYRzRnSUNBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2ZEhKaGJuTm1iM0p0SUM0emN6dGNiaUFnSUNCOVhHNGdJQ0FnSmpwaFpuUmxjbnRjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nWENJZ1hDSTdYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJQ0FnZEc5d09pQXdPMXh1SUNBZ0lDQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dRSGRsZFdsVGQybDBZMmhJWldsbmFIUWdMU0F5TzF4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SUVCM1pYVnBVM2RwZEdOb1NHVnBaMmgwSUMwZ01qdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01UVndlRHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTBaR1JrWkdSanRjYmlBZ0lDQWdJQ0FnWW05NExYTm9ZV1J2ZHpvZ01DQXhjSGdnTTNCNElISm5ZbUVvTUN3Z01Dd2dNQ3dnTUM0MEtUdGNiaUFnSUNBZ0lDQWdkSEpoYm5OcGRHbHZianAwY21GdWMyWnZjbTBnTGpOek8xeHVJQ0FnSUgxY2JseHVJQ0FnSUNZNlkyaGxZMnRsWkh0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFdOdmJHOXlPaUFqTURSQ1JUQXlPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqTURSQ1JUQXlPMXh1SUNBZ0lDQWdJQ0FtT21KbFptOXlaWHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2djMk5oYkdVb01DazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSmpwaFpuUmxjbnRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d5TUhCNEtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibjBpTENKQWFXMXdiM0owSUZ3aUxpNHZMaTR2WW1GelpTOW1ibHdpTzF4dVhHNUFkMlYxYVZWd2JHOWhaR1Z5UW05eVpHVnlRMjlzYjNJNkkwUTVSRGxFT1R0Y2JrQjNaWFZwVlhCc2IyRmtaWEpCWTNScGRtVkNiM0prWlhKRGIyeHZjam9qT1RrNU9UazVPMXh1UUhkbGRXbFZjR3h2WVdSbGNrWnBiR1ZUY0dGamFXNW5PaUE1Y0hnN1hHNUFkMlYxYVZWd2JHOWhaR1Z5VTJsNlpUb2dOemx3ZUR0Y2JrQjNaWFZwVlhCc2IyRmtaWEpDYjNKa1pYSlhhV1IwYURvZ01YQjRPMXh1WEc0dWQyVjFhVjkxY0d4dllXUmxjbnQ5WEc0dWQyVjFhVjkxY0d4dllXUmxjbDlvWkh0Y2JpQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01EdGNiaUFnSUNCd1lXUmthVzVuTFhKcFoyaDBPaUF3TzF4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ01EdGNiaUFnSUNBdWQyVjFhVjlqWld4c1gyWjBlMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURGbGJUdGNiaUFnSUNCOVhHNTlYRzR1ZDJWMWFWOTFjR3h2WVdSbGNsOWlaSHRjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lCQWQyVjFhVU5sYkd4SFlYQklJQzBnS0VCM1pYVnBRMlZzYkVkaGNGWWdLeUJBZDJWMWFWVndiRzloWkdWeVJtbHNaVk53WVdOcGJtY3BPMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTFVCM1pYVnBWWEJzYjJGa1pYSkdhV3hsVTNCaFkybHVaenRjYmlBZ0lDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVmVnh1WEc0dWQyVjFhVjkxY0d4dllXUmxjbDltYVd4bGMzdGNiaUFnSUNCc2FYTjBMWE4wZVd4bE9pQnViMjVsTzF4dWZWeHVMbmRsZFdsZmRYQnNiMkZrWlhKZlptbHNaWHRjYmlBZ0lDQm1iRzloZERvZ2JHVm1kRHRjYmlBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SUVCM1pYVnBWWEJzYjJGa1pYSkdhV3hsVTNCaFkybHVaenRjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lCQWQyVjFhVlZ3Ykc5aFpHVnlSbWxzWlZOd1lXTnBibWM3WEc0Z0lDQWdkMmxrZEdnNklFQjNaWFZwVlhCc2IyRmtaWEpUYVhwbE8xeHVJQ0FnSUdobGFXZG9kRG9nUUhkbGRXbFZjR3h2WVdSbGNsTnBlbVU3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nYm04dGNtVndaV0YwSUdObGJuUmxjaUJqWlc1MFpYSTdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lCamIzWmxjanRjYm4xY2JpNTNaWFZwWDNWd2JHOWhaR1Z5WDNOMFlYUjFjM3RjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0pqcGlaV1p2Y21WN1hHNGdJQ0FnSUNBZ0lHTnZiblJsYm5RNklGd2lJRndpTzF4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnSUNBZ0lIUnZjRG9nTUR0Y2JpQWdJQ0FnSUNBZ2NtbG5hSFE2SURBN1hHNGdJQ0FnSUNBZ0lHSnZkSFJ2YlRvZ01EdGNiaUFnSUNBZ0lDQWdiR1ZtZERvZ01EdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNnd0xDQXdMQ0F3TENBdU5TazdYRzRnSUNBZ2ZWeHVJQ0FnSUM1M1pYVnBYM1Z3Ykc5aFpHVnlYM04wWVhSMWMxOWpiMjUwWlc1MGUxeHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ05UQWxPMXh1SUNBZ0lDQWdJQ0JzWldaME9pQTFNQ1U3WEc0Z0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbEtDMDFNQ1VzSUMwMU1DVXBPMXh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dJMFpHUmtaR1JqdGNiaUFnSUNCOVhHNGdJQ0FnTG5kbGRXbGZhV052Ymw5M1lYSnVlMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNCOVhHNTlYRzVjYmk1M1pYVnBYM1Z3Ykc5aFpHVnlYMmx1Y0hWMFgzZHljSHRjYmlBZ0lDQm1iRzloZERwc1pXWjBPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCdFlYSm5hVzR0Y21sbmFIUTZJRUIzWlhWcFZYQnNiMkZrWlhKR2FXeGxVM0JoWTJsdVp6dGNiaUFnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUJBZDJWMWFWVndiRzloWkdWeVJtbHNaVk53WVdOcGJtYzdYRzRnSUNBZ2QybGtkR2c2SUVCM1pYVnBWWEJzYjJGa1pYSlRhWHBsSUMwZ1FIZGxkV2xWY0d4dllXUmxja0p2Y21SbGNsZHBaSFJvSUNvZ01qdGNiaUFnSUNCb1pXbG5hSFE2SUVCM1pYVnBWWEJzYjJGa1pYSlRhWHBsSUMwZ1FIZGxkV2xWY0d4dllXUmxja0p2Y21SbGNsZHBaSFJvSUNvZ01qdGNiaUFnSUNCaWIzSmtaWEk2SUVCM1pYVnBWWEJzYjJGa1pYSkNiM0prWlhKWGFXUjBhQ0J6YjJ4cFpDQkFkMlYxYVZWd2JHOWhaR1Z5UW05eVpHVnlRMjlzYjNJN1hHNGdJQ0FnSmpwaVpXWnZjbVVzSUNZNllXWjBaWEo3WEc0Z0lDQWdJQ0FnSUdOdmJuUmxiblE2SUZ3aUlGd2lPMXh1SUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUhSdmNEb2dOVEFsTzF4dUlDQWdJQ0FnSUNCc1pXWjBPaUExTUNVN1hHNGdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLQzAxTUNVc0lDMDFNQ1VwTzF4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCQWQyVjFhVlZ3Ykc5aFpHVnlRbTl5WkdWeVEyOXNiM0k3WEc0Z0lDQWdmVnh1SUNBZ0lDWTZZbVZtYjNKbGUxeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ1FIZGxkV2xWY0d4dllXUmxja0p2Y21SbGNsZHBaSFJvSUNzZ01UdGNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQkFkMlYxYVZWd2JHOWhaR1Z5VTJsNlpTQXZJREk3WEc0Z0lDQWdmVnh1SUNBZ0lDWTZZV1owWlhKN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lCQWQyVjFhVlZ3Ykc5aFpHVnlVMmw2WlNBdklESTdYRzRnSUNBZ0lDQWdJR2hsYVdkb2REb2dRSGRsZFdsVmNHeHZZV1JsY2tKdmNtUmxjbGRwWkhSb0lDc2dNVHRjYmlBZ0lDQjlYRzRnSUNBZ0pqcGhZM1JwZG1WN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxamIyeHZjam9nUUhkbGRXbFZjR3h2WVdSbGNrRmpkR2wyWlVKdmNtUmxja052Ykc5eU8xeHVJQ0FnSUNBZ0lDQW1PbUpsWm05eVpTd2dKanBoWm5SbGNudGNiaUFnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUVCM1pYVnBWWEJzYjJGa1pYSkJZM1JwZG1WQ2IzSmtaWEpEYjJ4dmNqdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibjFjYmk1M1pYVnBYM1Z3Ykc5aFpHVnlYMmx1Y0hWMGUxeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0I2TFdsdVpHVjRPaUF4TzF4dUlDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNCc1pXWjBPaUF3TzF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF3TzF4dUlDQWdJQzEzWldKcmFYUXRkR0Z3TFdocFoyaHNhV2RvZEMxamIyeHZjam9nY21kaVlTZ3dMQ0F3TENBd0xDQXdLVHRjYm4waUxDSkFhVzF3YjNKMElGd2lMaTR2TGk0dlltRnpaUzltYmx3aU8xeHVRR2x0Y0c5eWRDQmNJaTR1TDNkbGRXbGZZblYwZEc5dUwzZGxkV2xmWW5WMGRHOXVYQ0k3WEc1Y2JpNTNaWFZwWDIxelp5QjdYRzRnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJRUIzWlhWcFRYTm5VR0ZrWkdsdVoxUnZjRHRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzVjYmlBZ0lDQXVkMlYxYVY5cFkyOXVYMkZ5WldFZ2UxeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lCQWQyVjFhVTF6WjBsamIyNUhZWEE3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMbmRsZFdsZmRHVjRkRjloY21WaElIdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ1FIZGxkV2xOYzJkVVpYaDBSMkZ3TzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2pBZ01qQndlRHRjYmlBZ0lDQjlYRzRnSUNBZ0xuZGxkV2xmYlhOblgzUnBkR3hsSUh0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nUUhkbGRXbE5jMmRVYVhSc1pVZGhjRHRjYmlBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeU1IQjRPMXh1SUNBZ0lIMWNiaUFnSUNBdWQyVjFhVjl0YzJkZlpHVnpZeUI3WEc0Z0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UUndlRHRjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJRUJuYkc5aVlXeFVaWGgwUTI5c2IzSTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0xuZGxkV2xmYjNCeVgyRnlaV0VnZTF4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUJBZDJWMWFVMXpaMDl3Y2tkaGNEdGNiaUFnSUNCOVhHNWNiaUFnSUNBdWQyVjFhVjlsZUhSeVlWOWhjbVZoSUh0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nUUhkbGRXbE5jMmRGZUhSeVlVRnlaV0ZIWVhBN1hHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVFJ3ZUR0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUVCbmJHOWlZV3hVWlhoMFEyOXNiM0k3WEc0Z0lDQWdJQ0FnSUdGN1kyOXNiM0k2SUVCbmJHOWlZV3hNYVc1clEyOXNiM0k3ZlZ4dUlDQWdJSDFjYm4xY2JseHVRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxb1pXbG5hSFE2SUVCM1pYVnBUWE5uUlhoMGNtRkJjbVZoVDJaTmFXNUlaV2xuYUhRcElIdGNiaUFnSUNBdWQyVjFhVjlsZUhSeVlWOWhjbVZoSUh0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHWnBlR1ZrTzF4dUlDQWdJQ0FnSUNCc1pXWjBPaUF3TzF4dUlDQWdJQ0FnSUNCaWIzUjBiMjA2SURBN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lDQWdmVnh1ZlNJc0lrQnBiWEJ2Y25RZ1hDSXVMaTh1TGk5aVlYTmxMMlp1WENJN1hHNWNiaTUzWlhWcFgyRnlkR2xqYkdVZ2UxeHVJQ0FnSUhCaFpHUnBibWM2SURJd2NIZ2dNVFZ3ZUR0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFMWNIZzdYRzRnSUNBZ2MyVmpkR2x2YmlCN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFdU5XVnRPMXh1SUNBZ0lIMWNiaUFnSUNCb01TQjdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRkd2VEdGNiaUFnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2TkRBd08xeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBdU56VmxiVHRjYmlBZ0lDQjlYRzRnSUNBZ2FESWdlMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFMmNIZzdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2pRd01EdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ0xqTmxiVHRjYmlBZ0lDQjlYRzRnSUNBZ2FETWdlMXh1SUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvME1EQTdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRWd2VEdGNiaUFnSUNCOVhHNTlJaXdpUUdsdGNHOXlkQ0JjSWk0dUx5NHVMMkpoYzJVdlptNWNJanRjYmx4dUxuZGxkV2xmY0hKdlozSmxjM01nZTF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JuMWNibHh1TG5kbGRXbGZjSEp2WjNKbGMzTmZZbUZ5SUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJBZDJWMWFWQnliMmR5WlhOelFtYzdYRzRnSUNBZ2FHVnBaMmgwT2lCQWQyVjFhVkJ5YjJkeVpYTnpTR1ZwWjJoME8xeHVJQ0FnSUdac1pYZzZJREU3WEc1OVhHNWNiaTUzWlhWcFgzQnliMmR5WlhOelgybHVibVZ5WDJKaGNpQjdYRzRnSUNBZ2QybGtkR2c2SURBN1hHNGdJQ0FnYUdWcFoyaDBPaUF4TURBbE8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUVCM1pYVnBVSEp2WjNKbGMzTkRiMnh2Y2p0Y2JuMWNibHh1TG5kbGRXbGZjSEp2WjNKbGMzTmZiM0J5SUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dNVFZ3ZUR0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURBN1hHNTlJaXdpUUdsdGNHOXlkQ0JjSWk0dUx5NHVMMkpoYzJVdlptNWNJanRjYmx4dUxuZGxkV2xmWjNKcFpITWdlMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4dVhHNGdJQ0FnSmpwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBdWMyVjBWRzl3VEdsdVpTaEFkMlYxYVVkeWFXUkNiM0prWlhKRGIyeHZjaWs3WEc0Z0lDQWdmVnh1SUNBZ0lDWTZZV1owWlhJZ2UxeHVJQ0FnSUNBZ0lDQXVjMlYwVEdWbWRFeHBibVVvUUhkbGRXbEhjbWxrUW05eVpHVnlRMjlzYjNJcE8xeHVJQ0FnSUgxY2JuMWNibHh1TG5kbGRXbGZaM0pwWkNCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJR1pzYjJGME9pQnNaV1owTzF4dUlDQWdJSEJoWkdScGJtYzZJREl3Y0hnZ01UQndlRHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKU0F2SUVCM1pYVnBSM0pwWkVOdmJIVnRia052ZFc1ME8xeHVJQ0FnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzVjYmlBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQzV6WlhSU2FXZG9kRXhwYm1Vb1FIZGxkV2xIY21sa1FtOXlaR1Z5UTI5c2IzSXBPMXh1SUNBZ0lDQWdJQ0J5YVdkb2REb2dMVEZ3ZUR0Y2JpQWdJQ0I5WEc0Z0lDQWdKanBoWm5SbGNpQjdYRzRnSUNBZ0lDQWdJQzV6WlhSQ2IzUjBiMjFNYVc1bEtFQjNaWFZwUjNKcFpFSnZjbVJsY2tOdmJHOXlLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1PbUZqZEdsMlpTQjdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJRUJwZEdWdFFXTjBhWFpsUTI5c2IzSTdYRzRnSUNBZ2ZWeHVmVnh1WEc0dWQyVjFhVjluY21sa1gybGpiMjRnZTF4dUlDQWdJSGRwWkhSb09pQkFkMlYxYVVkeWFXUkpZMjl1VTJsNlpUdGNiaUFnSUNCb1pXbG5hSFE2SUVCM1pYVnBSM0pwWkVsamIyNVRhWHBsTzF4dUlDQWdJRzFoY21kcGJqb2dNQ0JoZFhSdk8xeHVYRzRnSUNBZ2FXMW5JSHRjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0ppQXJJQzUzWlhWcFgyZHlhV1JmYkdGaVpXeDdYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURWd2VEdGNiaUFnSUNCOVhHNTlYRzVjYmk1M1pYVnBYMmR5YVdSZmJHRmlaV3dnZTF4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdJQ0JqYjJ4dmNqb2dRR2RzYjJKaGJGUnBkR3hsUTI5c2IzSTdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQkFkMlYxYVVkeWFXUkdiMjUwVTJsNlpUdGNibjBpTENKQWFXMXdiM0owSUZ3aUxpNHZMaTR2WW1GelpTOW1ibHdpTzF4dVhHNUFkMlYxYVVScFlXeHZaMEpoWTJ0bmNtOTFibVJEYjJ4dmNqb2dJMFpCUmtGR1F6dGNia0IzWlhWcFJHbGhiRzluVEdsdVpVTnZiRzl5T2lBalJEVkVOVVEyTzF4dVFIZGxkV2xFYVdGc2IyZE1hVzVyUTI5c2IzSTZJQ016UTBNMU1VWTdYRzVBZDJWMWFVUnBZV3h2WjB4cGJtdEJZM1JwZG1WQ1l6b2dJMFZGUlVWRlJUdGNibHh1TG5kbGRXbGZaR2xoYkc5bklIdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEc0Z0lDQWdlaTFwYm1SbGVEb2dNVE03WEc0Z0lDQWdkMmxrZEdnNklEZzFKVHRjYmlBZ0lDQjBiM0E2SURVd0pUdGNiaUFnSUNCc1pXWjBPaUExTUNVN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVb0xUVXdKU3dnTFRVd0pTazdYRzVjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQkFkMlYxYVVScFlXeHZaMEpoWTJ0bmNtOTFibVJEYjJ4dmNqdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNM0I0TzF4dUlDQWdJQzUzWlhWcFgyUnBZV3h2WjE5amIyNW1hWEp0SUNZZ2UxeHVJQ0FnSUNBZ0lDQXVkMlYxYVY5a2FXRnNiMmRmYUdRZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTVM0eVpXMGdNakJ3ZUNBdU5XVnRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUM1M1pYVnBYMlJwWVd4dloxOWlaQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPaUJzWldaME8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1WEc0dWQyVjFhVjlrYVdGc2IyZGZhR1FnZTF4dUlDQWdJSEJoWkdScGJtYzZJREV1TW1WdElEQWdMalZsYlR0Y2JuMWNibHh1TG5kbGRXbGZaR2xoYkc5blgzUnBkR3hsSUh0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVGR3ZUR0Y2JuMWNibHh1TG5kbGRXbGZaR2xoYkc5blgySmtJSHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdJREl3Y0hnN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBeE5YQjRPMXh1SUNBZ0lHTnZiRzl5T2lCQVoyeHZZbUZzVkdWNGRFTnZiRzl5TzF4dWZWeHVYRzR1ZDJWMWFWOWthV0ZzYjJkZlpuUWdlMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dOREp3ZUR0Y2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2lBeU1IQjRPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVGR3ZUR0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUdFZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0FnSUNBZ1pteGxlRG9nTVR0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUVCM1pYVnBSR2xoYkc5blRHbHVhME52Ykc5eU8xeHVJQ0FnSUNBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc0Z0lDQWdJQ0FnSUM1elpYUlVZWEJEYjJ4dmNqdGNiaUFnSUNBZ0lDQWdKanBoWTNScGRtVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ1FIZGxkV2xFYVdGc2IyZE1hVzVyUVdOMGFYWmxRbU03WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lDQWdKanBoWm5SbGNpQjdYRzRnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpSUZ3aU8xeHVJQ0FnSUNBZ0lDQXVjMlYwVkc5d1RHbHVaU2hBZDJWMWFVUnBZV3h2WjB4cGJtVkRiMnh2Y2lrN1hHNGdJQ0FnZlZ4dUlDQWdJQzUzWlhWcFgyUnBZV3h2WjE5amIyNW1hWEp0SUNZZ2UxeHVJQ0FnSUNBZ0lDQmhJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNZNllXWjBaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2SUZ3aUlGd2lPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzV6WlhSTVpXWjBUR2x1WlNoQWQyVjFhVVJwWVd4dloweHBibVZEYjJ4dmNpazdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FtT21acGNuTjBMV05vYVd4a0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW1PbUZtZEdWeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNTlYRzVjYmk1M1pYVnBYMkowYmw5a2FXRnNiMmNnZTF4dUlDQWdJQ1l1WkdWbVlYVnNkQ0I3WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUFqTXpVek5UTTFPMXh1SUNBZ0lIMWNiaUFnSUNBbUxuQnlhVzFoY25rZ2UxeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0l6QkNRakl3UXp0Y2JpQWdJQ0I5WEc1OVhHNWNia0J0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURFd01qUndlQ2tnZTF4dUlDQWdJQzUzWlhWcFgyUnBZV3h2WnlCN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBek5TVTdYRzRnSUNBZ2ZWeHVmVnh1SWl3aVFHbHRjRzl5ZENCY0lpNHVMeTR1TDJKaGMyVXZabTVjSWp0Y2JseHVMbmRsZFdsZmRHOWhjM1FnZTF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJtYVhobFpEdGNiaUFnSUNCNkxXbHVaR1Y0T2lBek8xeHVJQ0FnSUhkcFpIUm9PaUEzTGpabGJUdGNiaUFnSUNCdGFXNHRhR1ZwWjJoME9pQTNMalpsYlR0Y2JpQWdJQ0IwYjNBNklERTRNSEI0TzF4dUlDQWdJR3hsWm5RNklEVXdKVHRjYmlBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nTFRNdU9HVnRPMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJSEpuWW1Fb05EQXNJRFF3TENBME1Dd2dNQzQzTlNrN1hHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEVndlRHRjYmlBZ0lDQmpiMnh2Y2pvZ0kwWkdSa1pHUmp0Y2JuMWNiaTUzWlhWcFgybGpiMjVmZEc5aGMzUWdlMXh1SUNBZ0lHMWhjbWRwYmpvZ01qSndlQ0F3SURBN1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0pqcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQW5YRnhGUVRBNEp6dGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDTkdSa1pHUmtZN1hHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dOVFZ3ZUR0Y2JpQWdJQ0I5WEc1OVhHNHVkMlYxYVY5MGIyRnpkRjlqYjI1MFpXNTBJSHRjYmlBZ0lDQnRZWEpuYVc0NklEQWdNQ0F4TlhCNE8xeHVmVnh1WEc0dkx5QnNiMkZrYVc1bklIUnZZWE4wWEc0dWQyVjFhVjlzYjJGa2FXNW5YM1J2WVhOMGUxeHVJQ0FnSUM1M1pYVnBYM1J2WVhOMFgyTnZiblJsYm5SN1hHNGdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09qWTBKVHRjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG94TkhCNE8xeHVJQ0FnSUgxY2JuMWNiaTUzWlhWcFgyeHZZV1JwYm1kN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJSGRwWkhSb09pQXdjSGc3WEc0Z0lDQWdlaTFwYm1SbGVEb2dNakF3TURBd01EQXdNRHRjYmlBZ0lDQnNaV1owT2lBMU1DVTdYRzRnSUNBZ2RHOXdPaUF6T0NVN1hHNTlYRzR1ZDJWMWFWOXNiMkZrYVc1blgyeGxZV1o3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lIUnZjRG9nTFRGd2VEdGNiaUFnSUNCdmNHRmphWFI1T2lBd0xqSTFPMXh1SUNBZ0lDWTZZbVZtYjNKbGUxeHVJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9sd2lJRndpTzF4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBNExqRTBjSGc3WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nTXk0d09IQjRPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCeVoySW9NakE1TENBeU1Ea3NJREl4TXlrN1hHNGdJQ0FnSUNBZ0lHSnZlQzF6YUdGa2IzYzZJSEpuWW1Fb01Dd2dNQ3dnTUN3Z01DNHdPVGd3TXpreUtTQXdjSGdnTUhCNElERndlRHRjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNWEI0TzF4dUlDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wdGIzSnBaMmx1T2lCc1pXWjBJRFV3SlNBd2NIZzdYRzRnSUNBZ2ZWeHVJQ0FnSUNaZk1IdGNiaUFnSUNBZ0lDQWdZVzVwYldGMGFXOXVPaUJ2Y0dGamFYUjVMVFl3TFRJMUxUQXRNVElnTVM0eU5YTWdiR2x1WldGeUlHbHVabWx1YVhSbE8xeHVJQ0FnSUNBZ0lDQW1PbUpsWm05eVpYdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RCa1pXY3BJSFJ5WVc1emJHRjBaU2czTGpreWNIZ3NJREJ3ZUNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmw4eGUxeHVJQ0FnSUNBZ0lDQmhibWx0WVhScGIyNDZJRzl3WVdOcGRIa3ROakF0TWpVdE1TMHhNaUF4TGpJMWN5QnNhVzVsWVhJZ2FXNW1hVzVwZEdVN1hHNGdJQ0FnSUNBZ0lDWTZZbVZtYjNKbGUxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTXpCa1pXY3BJSFJ5WVc1emJHRjBaU2czTGpreWNIZ3NJREJ3ZUNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmw4eWUxeHVJQ0FnSUNBZ0lDQmhibWx0WVhScGIyNDZJRzl3WVdOcGRIa3ROakF0TWpVdE1pMHhNaUF4TGpJMWN5QnNhVzVsWVhJZ2FXNW1hVzVwZEdVN1hHNGdJQ0FnSUNBZ0lDWTZZbVZtYjNKbGUxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTmpCa1pXY3BJSFJ5WVc1emJHRjBaU2czTGpreWNIZ3NJREJ3ZUNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmw4emUxeHVJQ0FnSUNBZ0lDQmhibWx0WVhScGIyNDZJRzl3WVdOcGRIa3ROakF0TWpVdE15MHhNaUF4TGpJMWN5QnNhVzVsWVhJZ2FXNW1hVzVwZEdVN1hHNGdJQ0FnSUNBZ0lDWTZZbVZtYjNKbGUxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvT1RCa1pXY3BJSFJ5WVc1emJHRjBaU2czTGpreWNIZ3NJREJ3ZUNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmw4MGUxeHVJQ0FnSUNBZ0lDQmhibWx0WVhScGIyNDZJRzl3WVdOcGRIa3ROakF0TWpVdE5DMHhNaUF4TGpJMWN5QnNhVzVsWVhJZ2FXNW1hVzVwZEdVN1hHNGdJQ0FnSUNBZ0lDWTZZbVZtYjNKbGUxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTVRJd1pHVm5LU0IwY21GdWMyeGhkR1VvTnk0NU1uQjRMQ0F3Y0hncE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUNaZk5YdGNiaUFnSUNBZ0lDQWdZVzVwYldGMGFXOXVPaUJ2Y0dGamFYUjVMVFl3TFRJMUxUVXRNVElnTVM0eU5YTWdiR2x1WldGeUlHbHVabWx1YVhSbE8xeHVJQ0FnSUNBZ0lDQW1PbUpsWm05eVpYdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RFMU1HUmxaeWtnZEhKaGJuTnNZWFJsS0RjdU9USndlQ3dnTUhCNEtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNBbVh6WjdYRzRnSUNBZ0lDQWdJR0Z1YVcxaGRHbHZiam9nYjNCaFkybDBlUzAyTUMweU5TMDJMVEV5SURFdU1qVnpJR3hwYm1WaGNpQnBibVpwYm1sMFpUdGNiaUFnSUNBZ0lDQWdKanBpWldadmNtVjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNneE9EQmtaV2NwSUhSeVlXNXpiR0YwWlNnM0xqa3ljSGdzSURCd2VDazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ0psODNlMXh1SUNBZ0lDQWdJQ0JoYm1sdFlYUnBiMjQ2SUc5d1lXTnBkSGt0TmpBdE1qVXROeTB4TWlBeExqSTFjeUJzYVc1bFlYSWdhVzVtYVc1cGRHVTdYRzRnSUNBZ0lDQWdJQ1k2WW1WbWIzSmxlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQnliM1JoZEdVb01qRXdaR1ZuS1NCMGNtRnVjMnhoZEdVb055NDVNbkI0TENBd2NIZ3BPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNBZ0lDWmZPSHRjYmlBZ0lDQWdJQ0FnWVc1cGJXRjBhVzl1T2lCdmNHRmphWFI1TFRZd0xUSTFMVGd0TVRJZ01TNHlOWE1nYkdsdVpXRnlJR2x1Wm1sdWFYUmxPMXh1SUNBZ0lDQWdJQ0FtT21KbFptOXlaWHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtESTBNR1JsWnlrZ2RISmhibk5zWVhSbEtEY3VPVEp3ZUN3Z01IQjRLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQW1Yemw3WEc0Z0lDQWdJQ0FnSUdGdWFXMWhkR2x2YmpvZ2IzQmhZMmwwZVMwMk1DMHlOUzA1TFRFeUlERXVNalZ6SUd4cGJtVmhjaUJwYm1acGJtbDBaVHRjYmlBZ0lDQWdJQ0FnSmpwaVpXWnZjbVY3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3lOekJrWldjcElIUnlZVzV6YkdGMFpTZzNMamt5Y0hnc0lEQndlQ2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lDQWdKbDh4TUh0Y2JpQWdJQ0FnSUNBZ1lXNXBiV0YwYVc5dU9pQnZjR0ZqYVhSNUxUWXdMVEkxTFRFd0xURXlJREV1TWpWeklHeHBibVZoY2lCcGJtWnBibWwwWlR0Y2JpQWdJQ0FnSUNBZ0pqcGlaV1p2Y21WN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d6TURCa1pXY3BJSFJ5WVc1emJHRjBaU2czTGpreWNIZ3NJREJ3ZUNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmw4eE1YdGNiaUFnSUNBZ0lDQWdZVzVwYldGMGFXOXVPaUJ2Y0dGamFYUjVMVFl3TFRJMUxURXhMVEV5SURFdU1qVnpJR3hwYm1WaGNpQnBibVpwYm1sMFpUdGNiaUFnSUNBZ0lDQWdKanBpWldadmNtVjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNnek16QmtaV2NwSUhSeVlXNXpiR0YwWlNnM0xqa3ljSGdzSURCd2VDazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc1QUxYZGxZbXRwZEMxclpYbG1jbUZ0WlhNZ2IzQmhZMmwwZVMwMk1DMHlOUzB3TFRFeUlIdGNiaUFnTUNVZ2V5QnZjR0ZqYVhSNU9pQXdMakkxT3lCOVhHNGdJREF1TURFbElIc2diM0JoWTJsMGVUb2dNQzR5TlRzZ2ZWeHVJQ0F3TGpBeUpTQjdJRzl3WVdOcGRIazZJREU3SUgxY2JpQWdOakF1TURFbElIc2diM0JoWTJsMGVUb2dNQzR5TlRzZ2ZWeHVJQ0F4TURBbElIc2diM0JoWTJsMGVUb2dNQzR5TlRzZ2ZWeHVmVUF0ZDJWaWEybDBMV3RsZVdaeVlXMWxjeUJ2Y0dGamFYUjVMVFl3TFRJMUxURXRNVElnZTF4dUlDQXdKU0I3SUc5d1lXTnBkSGs2SURBdU1qVTdJSDFjYmlBZ09DNHpORE16TXlVZ2V5QnZjR0ZqYVhSNU9pQXdMakkxT3lCOVhHNGdJRGd1TXpVek16TWxJSHNnYjNCaFkybDBlVG9nTVRzZ2ZWeHVJQ0EyT0M0ek5ETXpKU0I3SUc5d1lXTnBkSGs2SURBdU1qVTdJSDFjYmlBZ01UQXdKU0I3SUc5d1lXTnBkSGs2SURBdU1qVTdJSDFjYm4xQUxYZGxZbXRwZEMxclpYbG1jbUZ0WlhNZ2IzQmhZMmwwZVMwMk1DMHlOUzB5TFRFeUlIdGNiaUFnTUNVZ2V5QnZjR0ZqYVhSNU9pQXdMakkxT3lCOVhHNGdJREUyTGpZM05qY2xJSHNnYjNCaFkybDBlVG9nTUM0eU5Uc2dmVnh1SUNBeE5pNDJPRFkzSlNCN0lHOXdZV05wZEhrNklERTdJSDFjYmlBZ056WXVOamMyTnlVZ2V5QnZjR0ZqYVhSNU9pQXdMakkxT3lCOVhHNGdJREV3TUNVZ2V5QnZjR0ZqYVhSNU9pQXdMakkxT3lCOVhHNTlRQzEzWldKcmFYUXRhMlY1Wm5KaGJXVnpJRzl3WVdOcGRIa3ROakF0TWpVdE15MHhNaUI3WEc0Z0lEQWxJSHNnYjNCaFkybDBlVG9nTUM0eU5Uc2dmVnh1SUNBeU5TNHdNU1VnZXlCdmNHRmphWFI1T2lBd0xqSTFPeUI5WEc0Z0lESTFMakF5SlNCN0lHOXdZV05wZEhrNklERTdJSDFjYmlBZ09EVXVNREVsSUhzZ2IzQmhZMmwwZVRvZ01DNHlOVHNnZlZ4dUlDQXhNREFsSUhzZ2IzQmhZMmwwZVRvZ01DNHlOVHNnZlZ4dWZVQXRkMlZpYTJsMExXdGxlV1p5WVcxbGN5QnZjR0ZqYVhSNUxUWXdMVEkxTFRRdE1USWdlMXh1SUNBd0pTQjdJRzl3WVdOcGRIazZJREF1TWpVN0lIMWNiaUFnTXpNdU16UXpNeVVnZXlCdmNHRmphWFI1T2lBd0xqSTFPeUI5WEc0Z0lETXpMak0xTXpNbElIc2diM0JoWTJsMGVUb2dNVHNnZlZ4dUlDQTVNeTR6TkRNekpTQjdJRzl3WVdOcGRIazZJREF1TWpVN0lIMWNiaUFnTVRBd0pTQjdJRzl3WVdOcGRIazZJREF1TWpVN0lIMWNibjFBTFhkbFltdHBkQzFyWlhsbWNtRnRaWE1nYjNCaFkybDBlUzAyTUMweU5TMDFMVEV5SUh0Y2JpQWdNQ1VnZXlCdmNHRmphWFI1T2lBd0xqSTNNRGsxT0RNek16TXpNek16TXpzZ2ZWeHVJQ0EwTVM0Mk56WTNKU0I3SUc5d1lXTnBkSGs2SURBdU1qVTdJSDFjYmlBZ05ERXVOamcyTnlVZ2V5QnZjR0ZqYVhSNU9pQXhPeUI5WEc0Z0lERXVOamMyTmpjbElIc2diM0JoWTJsMGVUb2dNQzR5TlRzZ2ZWeHVJQ0F4TURBbElIc2diM0JoWTJsMGVUb2dNQzR5TnpBNU5UZ3pNek16TXpNek16TTdJSDFjYm4xQUxYZGxZbXRwZEMxclpYbG1jbUZ0WlhNZ2IzQmhZMmwwZVMwMk1DMHlOUzAyTFRFeUlIdGNiaUFnTUNVZ2V5QnZjR0ZqYVhSNU9pQXdMak0zTlRFeU5Uc2dmVnh1SUNBMU1DNHdNU1VnZXlCdmNHRmphWFI1T2lBd0xqSTFPeUI5WEc0Z0lEVXdMakF5SlNCN0lHOXdZV05wZEhrNklERTdJSDFjYmlBZ01UQXVNREVsSUhzZ2IzQmhZMmwwZVRvZ01DNHlOVHNnZlZ4dUlDQXhNREFsSUhzZ2IzQmhZMmwwZVRvZ01DNHpOelV4TWpVN0lIMWNibjFBTFhkbFltdHBkQzFyWlhsbWNtRnRaWE1nYjNCaFkybDBlUzAyTUMweU5TMDNMVEV5SUh0Y2JpQWdNQ1VnZXlCdmNHRmphWFI1T2lBd0xqUTNPVEk1TVRZMk5qWTJOalkyTnpzZ2ZWeHVJQ0ExT0M0ek5ETXpKU0I3SUc5d1lXTnBkSGs2SURBdU1qVTdJSDFjYmlBZ05UZ3VNelV6TXlVZ2V5QnZjR0ZqYVhSNU9pQXhPeUI5WEc0Z0lERTRMak0wTXpNbElIc2diM0JoWTJsMGVUb2dNQzR5TlRzZ2ZWeHVJQ0F4TURBbElIc2diM0JoWTJsMGVUb2dNQzQwTnpreU9URTJOalkyTmpZMk5qYzdJSDFjYm4xQUxYZGxZbXRwZEMxclpYbG1jbUZ0WlhNZ2IzQmhZMmwwZVMwMk1DMHlOUzA0TFRFeUlIdGNiaUFnTUNVZ2V5QnZjR0ZqYVhSNU9pQXdMalU0TXpRMU9ETXpNek16TXpNek16c2dmVnh1SUNBMk5pNDJOelkzSlNCN0lHOXdZV05wZEhrNklEQXVNalU3SUgxY2JpQWdOall1TmpnMk55VWdleUJ2Y0dGamFYUjVPaUF4T3lCOVhHNGdJREkyTGpZM05qY2xJSHNnYjNCaFkybDBlVG9nTUM0eU5Uc2dmVnh1SUNBeE1EQWxJSHNnYjNCaFkybDBlVG9nTUM0MU9ETTBOVGd6TXpNek16TXpNek03SUgxY2JuMUFMWGRsWW10cGRDMXJaWGxtY21GdFpYTWdiM0JoWTJsMGVTMDJNQzB5TlMwNUxURXlJSHRjYmlBZ01DVWdleUJ2Y0dGamFYUjVPaUF3TGpZNE56WXlOVHNnZlZ4dUlDQTNOUzR3TVNVZ2V5QnZjR0ZqYVhSNU9pQXdMakkxT3lCOVhHNGdJRGMxTGpBeUpTQjdJRzl3WVdOcGRIazZJREU3SUgxY2JpQWdNelV1TURFbElIc2diM0JoWTJsMGVUb2dNQzR5TlRzZ2ZWeHVJQ0F4TURBbElIc2diM0JoWTJsMGVUb2dNQzQyT0RjMk1qVTdJSDFjYm4xQUxYZGxZbXRwZEMxclpYbG1jbUZ0WlhNZ2IzQmhZMmwwZVMwMk1DMHlOUzB4TUMweE1pQjdYRzRnSURBbElIc2diM0JoWTJsMGVUb2dNQzQzT1RFM09URTJOalkyTmpZMk5qYzdJSDFjYmlBZ09ETXVNelF6TXlVZ2V5QnZjR0ZqYVhSNU9pQXdMakkxT3lCOVhHNGdJRGd6TGpNMU16TWxJSHNnYjNCaFkybDBlVG9nTVRzZ2ZWeHVJQ0EwTXk0ek5ETXpKU0I3SUc5d1lXTnBkSGs2SURBdU1qVTdJSDFjYmlBZ01UQXdKU0I3SUc5d1lXTnBkSGs2SURBdU56a3hOemt4TmpZMk5qWTJOalkzT3lCOVhHNTlRQzEzWldKcmFYUXRhMlY1Wm5KaGJXVnpJRzl3WVdOcGRIa3ROakF0TWpVdE1URXRNVElnZTF4dUlDQXdKU0I3SUc5d1lXTnBkSGs2SURBdU9EazFPVFU0TXpNek16TXpNek16T3lCOVhHNGdJRGt4TGpZM05qY2xJSHNnYjNCaFkybDBlVG9nTUM0eU5Uc2dmVnh1SUNBNU1TNDJPRFkzSlNCN0lHOXdZV05wZEhrNklERTdJSDFjYmlBZ05URXVOamMyTnlVZ2V5QnZjR0ZqYVhSNU9pQXdMakkxT3lCOVhHNGdJREV3TUNVZ2V5QnZjR0ZqYVhSNU9pQXdMamc1TlRrMU9ETXpNek16TXpNek16c2dmVnh1ZlZ4dUlpd2lRR2x0Y0c5eWRDQmNJaTR1THk0dUwySmhjMlV2Wm01Y0lqdGNibHh1TG5kbGRXbGZiV0Z6YXlCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdacGVHVmtPMXh1SUNBZ0lIb3RhVzVrWlhnNklERTdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNBZ0lIUnZjRG9nTUR0Y2JpQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJSEpuWW1Fb01Dd2dNQ3dnTUN3Z0xqWXBPMXh1ZlZ4dVhHNHVkMlYxYVY5dFlYTnJYM1J5WVc1emNHRnlaVzUwSUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWm1sNFpXUTdYRzRnSUNBZ2VpMXBibVJsZURvZ01UdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ2RHOXdPaUF3TzF4dUlDQWdJR3hsWm5RNklEQTdYRzU5WEc1Y2JpNTNaWFZwWDIxaGMydGZkSEpoYm5OcGRHbHZibnRjYmlBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJtYVhobFpEdGNiaUFnSUNCNkxXbHVaR1Y0T2lBeE8xeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnSUNCMGIzQTZJREE3WEc0Z0lDQWdiR1ZtZERvZ01EdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQnlaMkpoS0RBc01Dd3dMREFwTzF4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2WW1GamEyZHliM1Z1WkNBdU0zTTdYRzU5WEc0dWQyVjFhVjltWVdSbFgzUnZaMmRzWlh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCeVoySmhLREFzTUN3d0xDNDJLVHRjYm4waUxDSkFhVzF3YjNKMElGd2lMaTR2TGk0dlltRnpaUzltYmx3aU8xeHVRR0puUTI5c2IzSTZJMFZEUlVORlF6dGNiaTUzWlhWcFgyRmpkR2x2Ym5Ob1pXVjBJSHRjYmlBZ0lDQndiM05wZEdsdmJqb2dabWw0WldRN1hHNGdJQ0FnYkdWbWREb2dNRHRjYmlBZ0lDQmliM1IwYjIwNklEQTdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVW9NQ3dnTVRBd0pTazdYRzRnSUNBZ1ltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dhR2xrWkdWdU8xeHVJQ0FnSUhvdGFXNWtaWGc2SURJN1hHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nUUhCaFoyVkVaV1poZFd4MFFtRmphMmR5YjNWdVpFTnZiRzl5TzF4dUlDQWdJQzh2YzJ4cFpHVWdkWEFnWVc1cGJXRjBhVzl1WEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nZEhKaGJuTm1iM0p0SUM0emN6dGNibjFjYmk1M1pYVnBYMkZqZEdsdmJuTm9aV1YwWDIxbGJuVjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kwWkdSa1pHUmp0Y2JuMWNiaTUzWlhWcFgyRmpkR2x2Ym5Ob1pXVjBYMkZqZEdsdmJpQjdYRzRnSUNBZ2JXRnlaMmx1TFhSdmNEb2dObkI0TzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05HUmtaR1JrWTdYRzU5WEc0dWQyVjFhVjloWTNScGIyNXphR1ZsZEY5alpXeHNJSHRjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01UQndlQ0F3TzF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREU0Y0hnN1hHNGdJQ0FnSmpwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBdWMyVjBWRzl3VEdsdVpTaEFkMlYxYVVObGJHeENiM0prWlhKRGIyeHZjaWs3WEc0Z0lDQWdmVnh1SUNBZ0lDWTZZV04wYVhabGUxeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQkFZbWREYjJ4dmNqdGNiaUFnSUNCOVhHNGdJQ0FnSmpwbWFYSnpkQzFqYUdsc1pIdGNiaUFnSUNBZ0lDQWdKanBpWldadmNtVjdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMMkZqZEdsdmJsTm9aV1YwSUdGdWFXRnRkR2x2Ymx4dUxuZGxkV2xmWVdOMGFXOXVjMmhsWlhSZmRHOW5aMnhsZTF4dUlDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsS0RBc0lEQXBPMXh1ZlNKZExDSm1hV3hsSWpvaWMzUjViR1V2ZDJWMWFTNWpjM01pTENKemIzVnlZMlZTYjI5MElqb2lMM052ZFhKalpTOGlmUT09ICovXG4iLCJAaW1wb3J0IFwiZm5cIjtcblxuaHRtbCB7XG4gICAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xufVxuXG5ib2R5IHtcbiAgICBsaW5lLWhlaWdodDogMS42O1xuICAgIGZvbnQtZmFtaWx5OiBAc2Fuc0ZvbnQ7XG59XG5cbioge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG5hIGltZyB7XG4gICAgYm9yZGVyOiAwO1xufVxuXG5hIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59IiwiQGZvbnQtZmFjZSB7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC1mYW1pbHk6IFwid2V1aVwiO1xuICAgIHNyYzogdXJsKCdkYXRhOmFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtiYXNlNjQsZDA5R1JnQUJBQUFBQUE4b0FBNEFBQUFBR2V3QUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJQVXk4eUFBQUJSQUFBQUVRQUFBQldRQ2xMaFdOdFlYQUFBQUdJQUFBQU9nQUFBVXJVSUJlMlkzWjBJQUFBQWNRQUFBQUtBQUFBQ2dBQUFBQm1jR2R0QUFBQjBBQUFCWlFBQUF0d2lKQ1FXV2RoYzNBQUFBZGtBQUFBQ0FBQUFBZ0FBQUFRWjJ4NVpnQUFCMndBQUFTdUFBQUhFa29WT0hWb1pXRmtBQUFNSEFBQUFEVUFBQUEyQ0RUSVoyaG9aV0VBQUF4VUFBQUFIUUFBQUNRSGxnTmlhRzEwZUFBQURIUUFBQUFQQUFBQVBEcVlBQUJzYjJOaEFBQU1oQUFBQUNBQUFBQWdEQllOMlcxaGVIQUFBQXlrQUFBQUlBQUFBQ0FBcFF1MGJtRnRaUUFBRE1RQUFBRjZBQUFDbmIyREwwaHdiM04wQUFBT1FBQUFBSDBBQUFETk5TNGpjM0J5WlhBQUFBN0FBQUFBWlFBQUFIdmRhd09GZUp4allHUit3VGlCZ1pXQmc2bUthUThEQTBNUGhHWjh3R0RJeU1UQXdNVEF5c3lBRlFTa3VhWXdPTHhpZk1YSEhQUS9peUdLT1loaEdsQ1lFU1FIQUE1SUREQjRuR05nWUdCbWdHQVpCa1lHRUhBQjhoakJmQllHRFNETkJxUVpHWmdZR0Y3eC9mOFBVdkNLRVVTTE1VRFZBd0VqRzhPSUJ3QjFxd2ErQUFBQUFBQUFBQUFBQUFBQUFBQjRuSzFXYVhNVFJ4Q2QxV0hMTmo2Q0R4STJnVm5HY294MlZwakxDQkRHN0VvVzRCenlsZXhDamwxTGR1NkxUL3dHL1pwZWtWU1JiL3kwdkI0ZDJHQW5WVlFvU3YybTkrMU05K3VlWHBQUWtzUmVXSStrM0h3cHByWTJhV1RuU1VnM2JGcU80a1BaMlFzcFUweitMb2lDYUxYVXZ1MDRKQ0lTZ2FwMWhTV0MyUGZJMGlUalE0OHlXcllsdldwU2J1bEpkOWthRCtxdCt2YlQwRkdPM1FrbE5adWhRK3VSTGFuQ3FCSkZNdTJSa2pZdHc5VmZTVnJoNXl2TWZOVU1KWUxvSkpMR20yRU1qK1JuNDR4V0dhM0dkaHhGa1UyV0cwV0tSRE04aUNLUHNscGluMXd4UVVENW9CbFNYdmswb255RUg1RVZlNVRUQ25ISmRwcmY5eVUvNlIzT3Z5VGllb3V5SlFmK1FIWmtCM3VuSy9raTB0b0s0NmFkYkVlaGl2QjBmU2ZFSTV1VDZwL3NVVjdUYU9CMlJhWW56UWlXeWxlUVdQa0paZllQeVdyaGZNcVhQQnJWa29PY0NGb3ZjMkpmOGc2MEhrZE1pV3NteUlMdWprNklvTzZYbktIWVkvcTQrT085WFN3WElRVElPSmIxamtxNEVFWXBZYk9hSkcwRU9ZaVNza1dWMUhwSFRKenlPaTNpTFdHL1R1M29TMmUwU2FnN01aNnRoNDZ0bktqa2VEU3AwMHltVHUyazV0R1VCbEZLT2hNODV0Y0JsQi9SSksrMnNackV5cU5wYkROakpKRlFvSVZ6YVNxSVpTZVdOQVhSUEpyUm03dGhtbXZYb2tXYVBGRFBQWHBQYjI2Rm16czlwKzNBUDJ2OFozVXFwb085TUoyZURzaEtmSnAydVVuUnVuNTZobjhtOFVQV0FpcVJMVGJEbE1WRHRuNEg1ZVZqUzQ3Q2F3TnM5NTd6SytoOTlrVElwSUg0Ry9BZUw5VXBCVXlGbUZWUUM5MjAxclVzeTlScVZvdFVaT3E3SVUwclg5WnBBazA1RG4xalg4WTQvcStaR1V0TUNkL3Z4T25aRVplZXVmWWx5RFNIM0daZGorWjFhckZkZ001c3orazB5L1o5bmViWWZxRFRQTnZ6T2gxaGErdDBsTzJIT2kydy9VaW5ZMnd2YUVHVDdqc0VjaEdCWE1BR0VvR3dkUkFJMjBzSWhLMUNJR3dYRVFqYklnSmh1NFJBMkg2TVFOZ3VJeEMybDdXc21uNHFhUnc3RThzQVJZZ0Rvem51eUdWdUtsZFR5YVVTcm90R3B6YmtLWEtycEtKNFZ2MHJBLzNpa1Rlc2diVkF1a1RXL0lwSnJueFVsZU9Qcm1oNTA4UzVBbzVWZjN0elhKOFREMlcvV1BoVDhML2FtcXFrVjZ4NVpISVZlU1BRaytORTF5WVZqNjdwOHJtcVI5Zi9pNG9PYTRGK0E2VVFDMFZabGcyK21aRHdVYWZUVUExYzVSQXpHek1QMS9XNlpjM1A0ZnliR0NFTDZINzhOeFFhQzl5RFRsbEpXZTFncjlYWGoyVzV0d2Zsc0NkWWttSyt6T3RiNFl1TXpFcjdSV1lwZXo3eWVjQVZNQ3FWWWFzTlhLM2d6WHNTODVEcFRmSk1FTGNWWllPa2pjZVpJTEdCWXg0d2I3NlRJQ1JNWGJXQjJpbWNzSUc4WU13cDJPK0VRMVJ2bE9Wd2U2RjlIbzJVZjJ0WDdNZ1pGVTBRK0czMlJ0anJzMUR5VzZ5QmhDZS8xTmRBVlNGTnhiaXBnRXNqNVlacThHRmNyZHRHTWs2Z3I2allEY3V5aWc4ZlI5eDNTbzVsSVBsSUVhdEhSeit0dlVLZDFMbjl5aWh1M3p2OUNJSkJhV0wrOXI2WjRxQ1VkN1dTWlZadEExTzNHcFZUMTVyRHhhc08zYzJqN252SDJTZHkxalRkZEUvYzlMNm1WYmVEZzdsWkVPM2JISlNsVEM2bzY4TU9HNmpMemFYUTZtVmNrdDUyRHpBc01LRGZvUlViLzFmM2NmZzhWNm9LbytOSXZaMm9INlBQWWd6eUR6aC9SL1VGNk9jeFRMbUdsT2Q3bHhPZmJ0ekQyVEpkeFYyc24rTGZ3S3kxNW1icEduQkQwdzJZaDZ4YUhicktEWHluQmpvOTB0eU85QkR3c2U0SzhRQmdFOEJpOEludVdzYnpLWUR4Zk1ZY0grQno1akJvTW9mQkZuTVliRE5uRFdDSE9ReDJtY05nanprTXZtRE9Pc0NYekdFUU1vZEJ4QndHVDVnVEFEeGxEb092bU1QZ2ErWXcrSVk1OXdHK1pRNkRtRGtNRXVZdzJOZDBheWh6aXhkMEY2aHRVQlhvd1BRVEZ2ZXdPTlJVR2JLLzQ0VmhmMjhRczM4d2lLay9hcm85cFA3RUMwUDkyU0NtL21JUVUzL1ZkR2RJL1kwWGh2cTdRVXo5d3lDbVB0TXZ4bktad1Y5R3ZrdUZBOG91TnAvejk4VDdCOElhUUxZQUFRQUIvLzhBRDNpY2RaVmZiRk4xRk1kLzU1N2Y3M2R2NzEzYjNkNzIzclZyVjlhdXQ3cXRsWFdqNVU4R1BtSk1UQ0M4a2hnZmZaZkVFQlB4aVFRVkVYMXdQcGdZRElSTkU0STRCM1ZrL0prUVFqUVJFekFCRnY0RWZSQ0pZYkRLZXVlNXQ1UU1UWlBiYjI1N1RuTE85M1BPNzFlbU1MWnlDTDlCaHhuTVlkcUpXSmRrU21rSUlxRDJnYk1aYW1YQU1oVHBoYjVHQUJickRTRWE5Zm9TNmFtcE81emZtWnIwRlIzNjlSVEZsdXIxeHZLMy9QYlUxRzBlS0dOK2pTL3dPR2FvUmovVjZJbjh2NFlxY3krQlc5MEU1aGhKeFU2WW94VWIvanI1Uklnbko4ODBoV2dXZGtYZDZLNUkyTm1wYTY2bTcrenB3b3hvbm1sbk5CY25ZckVKS3dtT1poaWE5MGVTTWFTNlgrSFhtS0M2U1paaituUmZ5cWJhK0ovYWNUa0VPWGVkV2EyTjJrNnhER1BWaWgyWDhHRDZzUkNQcDAvN2hqL1gxYlNxZ3phc1FUYVdUQmFTU1V5SXh1bDJSdk10VmRkVlNHa0EyZ2J3dzI2eTVmc2pQSURETE15eTVEdmRyYlo5bXpaM3FnTTFzd3dXU0RLK0JhcFpzR3NGWCtIaG5nczdRb0FIRGdDR2Rselk3YzBpL3dTVmhDTGU1Z2hGam5FRmgvdkcwOTdaS3c4R0JoNWNnZkgwdUhmZE80ZjRHWXBlampzQkhpRmFHUGovRXQvREZOVnYrN2NpYXR1LzJRSkFQYWlqZGhUaUJHRmRzV3JsM0tmK0YzZlBiUXMxOXUzN1I5czI5M0ZaQjEza2hBN1ppR1dsTFF0VG1VMHA3NmRMOS9MNWU1ZGdKTFhwTVdoWGhiaXFlY2Y4Y05waUxmK2Y0ZzlZcE0zS2svLysza1RZOTErR0xiQVp5R21GREZlY29oMVhRYnJGZ3N1S2txazJjNm9NMWdqZ0tLUHFHMnBNUWx5YVVwSFMrMWwyU3lVdHZPWDUyUlVtQkxEWmVlQXdJbU9TcTRwNFZZaTdndks2cGZlckJEbEZNYkVxbHpIKzNLNlgyQWdMdjZ5UGxJZGRmK2w1NTZXM1JBUm9SaklLMGc2NnB1N2RuRk5KT0IyUHc1RDNpTHA2WFVZRmNoRHZ5S2lFZ2dBakdnZm9mRktVM0hVQjRoV2hrQjFUdmlzRjlJdW93Y0h2M2Y4d1BLVWNvczdsY2JzYlNrUFdLbzVRdFZzY0kxQWNONFFxMVdUWHBYQzJTOGwwOVJsaHcyak9HR2tETWtaL3hJakkwRUZOaDlrUVVDQmpOSS9SWkZ1em1zRHZNVWRzVEpwVjVPazlJQlVmQ2EycXk2eCtjOVFjaGZ0MS96VFd6d05SWFdFYnZkOUtEY3pSMi9sbnZ6ZHZ3R3ZlemRXOGtVVlpMNTE5NHQyWHRydDFqZ0Z2SW9nZG1HTStNYm91cjl3RitMc0Q0bXNEeld2d0p3QU1kK1JaYWc0RTJLaVAvWGdXUytRdFJadW9UMmQ3cmE3V1BkQmVPUEtuMG8yVENDNER0NGp1cW9Od2Y4NGphNEJ6RjBHbGpXcmNxR3A2UlBKQlRRbURucmRTS1RlVndoSUZMcTVLdktkcjNpOWNRZ2lHTmNON3djOXhVeTBtQi9FMHZzZzBGbU45Yk5CblVzZ21yV2lJQjB3Mnc1aWJrM0hiSVFCbUFBSDlIcm1QeUZXZXU0c2ZKclBaU2phN2ZmK0dEUmMzRGwzMmxqZ0g3ZkxNQ3MzbHgwbWZ3V1NnaWc1clJ0YlFzekhqblV1bmxXUGNXMnBselZ3R2JmbHdPNCsweFdvU0Q2TVpuQkdmVlY5UDdDa3J0YWc2cWxOemFzVmFwN0VwSDA1TXBOdlBkek9MUWl6T3RQVElUYzV2SGpteXdQbUNFbCtWQk1sbktUT0x5L044b1pWREd1emttL2c3YnFlTnpQai9HekV6UkR0WmlFRCtXY200VkVHRm9JOWkwSlB5d2RpZXJVZHZjWDdyS09uYVFjaXRieTdzUFlGNFltK2c3dyt1YllWSXQrNFo4NjZ2aDU1MmpKVDlDNFlwd2RBQUFIaWNZMkJrWUdBQTR1ZHRGai9qK1cyK01uQXp2d0NLTUZ5YWRyMGFRcS8xWm1ENG44WDhnamtJeU9WZ1lBS0pBZ0I5SXcwREFBQUFlSnhqWUdSZ1lBNzZuOFVReGZ5Q0FRaUFKQ01ES3VBSEFHYUJCQUFBQUFCNG5HTit3Y0RBVENZR0FLdFREY1lBQUFBQUFBQXlBRzRBcmdEdUFTNEJkZ0hVQWdRQ0xnSnlBcmdEQ0FOT0E0a0FBUUFBQUE4QU1nQUVBQUFBQUFBQ0FBQUFFQUJ6QUFBQUhndHdBQUFBQUhpY2RaRE5TZ014RklWUGJLdTFCUmVLN29TN1VTekM5QWRjcUp0Q1JWMHIxUFhZcGpOVHBwT1N5Vmk2OVIxYytISytpcDZaUmhIQkNabjczWk9iazVzQTJNY0hGRGJmQmVlR0Zlck1OcnlGSFZ4NnJsRWZlcTV6M0hodW9JMTd6OXZVSHoyM2NJNG56MjBjNEpVT3FyN0xiSTQzendwTmZIcmV3cDdhOFZ4RFV4MTZycE9QUFRkd3BFNDhiMU8vOXR6Q1dJMDh0M0dxM2tkbXViWkpGRHM1RzNWazBPdGZ5UE5hREtVa0MxTUpDeGNibTh0UVppWnpPazFOTURHTGxTNlNCeDBWYVdoTExPZFkyend4bWZTRFhwbmU2VXpiME9scDZaYS9SQVBuWmpLelppRzMza2VXMXN6MXhBV3hjOHVyYnZlM1AwWXdXR0lOaXdRUllqZ0l6cWgyR0Fmb29jK0hGenl6UWxpNXFVcVFJVVJLSlVUQkhYRzFrak1mY3M2WVpWUTFLMUp5Z0FuL0M2eW9GTno3d0JpUlV1NjJQK3AzSERPV1hrbmxJancvWUJmZnEzZU1XVlVSVmlkTWYzckw4VUxYQVZYSERzb3ViSFdxNFBaUFA4TDdsbXR6S2hQcVFYVnJSL1VLWFk1Lyt2OENFN3gyYkFBQWVKeHRqZDBLd3lBVWcwODZwLzJiWlU5WTVOUnVnaWpvaHE4L3VwN2RMVGNoSHlTaGprNk45RjhMRVRwY29IQ0Zoa0dQQVNNbXpMakJZdEVjQ2tmZmI3bWxtTjJtUXRyelhOM3UxL3BtOXJVTzM5QmNTVWFJRlYvUDd2MFhVeFppbWd1dmtCNVdYTEE2UnFialFJQm1sOWhIWGIwci9DVDZBQUZTTk5JQUFBQjRuR1B3M3NGd0lpaGlJeU5qWCtRR3hwMGNEQndNeVFVYkdWaWROakl3YUVGb0RoUjZKd01EQXljeWk1bkJaYU1LWTBkZ3hBYUhqb2lOekNrdUc5VkF2RjBjRFF5TUxBNGR5U0VSSUNXUlFMQ1JnVWRyQitQLzFnMHN2UnVaR0Z3QUI5TWl1QUFBQUE9PScpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICB1cmwoJ2RhdGE6YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtO2Jhc2U2NCxBQUVBQUFBT0FJQUFBd0JnVDFNdk1rQXBTNFVBQUFEc0FBQUFWbU50WVhEVUlCZTJBQUFCUkFBQUFVcGpkblFnQUFBQUFBQUFEZlFBQUFBS1puQm5iWWlRa0ZrQUFBNEFBQUFMY0dkaGMzQUFBQUFRQUFBTjdBQUFBQWhuYkhsbVNoVTRkUUFBQXBBQUFBY1NhR1ZoWkFnMHlHY0FBQW1rQUFBQU5taG9aV0VIbGdOaUFBQUozQUFBQUNSb2JYUjRPcGdBQUFBQUNnQUFBQUE4Ykc5allRd1dEZGtBQUFvOEFBQUFJRzFoZUhBQXBRdTBBQUFLWEFBQUFDQnVZVzFsdllNdlNBQUFDbndBQUFLZGNHOXpkRFV1STNNQUFBMGNBQUFBelhCeVpYRGRhd09GQUFBWmNBQUFBSHNBQVFQb0FaQUFCUUFJQW5vQ3ZBQUFBSXdDZWdLOEFBQUI0QUF4QVFJQUFBSUFCUU1BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVVHWkZaQUJBNmdIcURnTlMvMm9BV2dOU0FKWUFBQUFCQUFBQUFBQUFBQUFBQXdBQUFBTUFBQUFjQUFFQUFBQUFBRVFBQXdBQkFBQUFIQUFFQUNnQUFBQUdBQVFBQVFBQ0FBRHFEdi8vQUFBQUFPb0IvLzhBQUJZQUFBRUFBQUFBQUFBQUFBRUdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ0FBLzZRRHJnTVhBQXNBRndBSXRSSU1CZ0FDTFNzQkRnRUhIZ0VYUGdFM0xnRURMZ0VuUGdFM0hnRVhEZ0VCOWJ6NUJRWDV2THo0QlFYNXU2emtCQVRrckt2a0JBVGtBeGNGK2J5NytRVUYrTHk4K2Z5MEJPT3NyT01FQk9Pc3JPTUFBQUlBQVArZkE3TURIUUFMQUNFQUNMVVlEZ1lBQWkwckFRNEJCeDRCRno0Qk55NEJBd2NHSWk4QkpqWTdBUkUwTmpzQk1oWVZFVE15RmdIdnV2c0ZCZnU2d3YwRkJmMGxkZzhtRDNZT0RSZGRDZ2dtQ0FwZEdBd0RIUVg5d3JyN0JRWDd1c0w5L2ZXYUVoS2FFeGtCRndnTEN3ais2UmtBQUFNQUFQK2xBNjBERlFBTEFCa0FJZ0FLdHg0YUZnNEdBQU10S3dFT0FRY2VBUmMrQVRjdUFRTVVCaXNCSWlZMUVUWTNNeFlYSnk0Qk5EWXlGaFFHQWZDMzl3VUY5N2UvK1FVRitac0tCeHdIQ2dFSUxBZ0JIeElaR1NVWkdRTVZCZm0vdC9jRkJmZTN2L245ZFFjS0NnY0JHZ2dCQVFnNUFSa2xHUmttR1FBQUFnQUEvNUFEa1FNc0FBMEFId0FJdFJ3UUJ3QUNMU3NCRGdFSEVSWUVGellrTnhFdUFSTUJCaThCSmo4Qk5oOEJGamNsTmg4QkZnSDBnY2hVQ1FFRGtaRUJBd2xVeUh2K3ZnTUVsQU1DRlFJRmVRUURBU2NFQXhRQ0F5d2VQUnordzlUd0pDVHcxQUU5SEQzKzNmN0VBd09aQXdVYkJBTmRBUUgyQXdNVEF3QURBQUQvb2dPQ0F4b0FEUUFaQUNJQUNyY2VHaE1PQndBRExTc0JEZ0VIRVI0QkZ6NEJOeEV1QVFjekZnOEJGQ3NCSWpVbk5oTWlKalEyTWhZVUJnSDFlOEZSQ2ZtTGkvb0lVY0dTTGdvQkNnVWlCUW9CSHc0VEV4d1RFd01hSFRzYS9zL0w1eU1qNThzQk1Sbzc5d0VJMkFVRjJBaitzUk1jRXhNY0V3QUFBQUlBQVArVkE3MERKd0FYQUNNQUNMVWhHeFVOQWkwckFTNEJQd0UrQVI4QkZqSTNKVFl5RnljV0ZBY0JCaVluSlNZQUp3WUFCeFlBRnpZQUFTQUZBUVFEQmc4SFlnY1NCZ0VVQmhFR0FnWUcvdEFHRUFZQ0hBWCsvTWErL3dBRkJRRUF2c1lCQkFFeEJoSUdCQWNDQlVzRkJlVUZCZ0lHRUFiKzFRWUJCcXpHQVFRRkJmNzh4cjcvQUFVRkFRQUFBQVFBQVAra0E2NERGd0FMQUJjQUxRQXhBQTFBQ2pFdUxDWVNEQVlBQkMwckFRNEJCeDRCRno0Qk55NEJBeTRCSno0Qk54NEJGdzRCRXdVT0FTOEJKZ1lQQVFZV0h3RVdNamNCUGdFbUloY3lGUmNCOWJ6NUJRWDV2THo0QlFYNXU2emtCQVRrckt2a0JBVGtLLzcyQmhJR1lBWVBCUU1FQVFWOUJnOEdBU1VGQVFzUEZBRUJBeGNGK2J5NytRVUYrTHk4K2Z5MEJPT3NyT01FQk9Pc3JPTUNJdDBGQVFWSkJRSUdCQWNSQm9BR0JRRWhCUThMQkFFQkFBQUFBUUFBQUFBRHV3S2tBQmNBQnJNV0VBRXRLeE11QVQ4QlBnRWZBUll5TndFMkZoY25GaFFIQVE0Qkp6MExCUWNHQnhrTXl3MGZEQUlkREI0TERRc0wvYmtMSEFzQkhRc2hEZ3NPQmdtVENBb0J2Z2tCQ3cwTEhRdjlzUW9CQ2dBQUFnQUEvNW9EdUFNaUFBc0FFUUFJdFE0TUJnQUNMU3NCQmdJSEhnRVhOaVEzSmdBVElSRXpFVE1CN3J6OUJRWDl2TVVCQUFVRi93QTYvdG90K1FNaUJmOEF4Yno5QlFYOXZNVUJBUDNlQVU3KzN3QUFCQUFBLzZRRHJnTVhBQU1BRHdBYkFDRUFEVUFLSGh3V0VBb0VBd0FFTFNzQk1oVVhBdzRCQng0QkZ6NEJOeTRCQXk0Qkp6NEJOeDRCRnc0QkF5TVZNelVqQXVVQkFmSzgrUVVGK2J5OCtBVUYrYnVzNUFRRTVLeXI1QVFFNU5ray9ka0I3UUVCQVN3RitieTcrUVVGK0x5OCtmeTBCT09zck9NRUJPT3NyT01DTGYwa0FBQUFBQU1BQVArUEE4TURMUUFMQUJvQUl3QUt0eDhiRXd3R0FBTXRLd0VHQUFjV0FCYzJBRGNtQUFjek1oWVZBeFFHS3dFbUp3TW1OaE1pSmpRMk1oWVVCZ0h1d2Y3OUJRVUJBOEhKQVFjRkJmNzUzallJQ2c0R0JDb0lBZzBCQ2lNVEdob21HaG9ETFFYKytjbkIvdjBGQlFFRHdja0JCK2NLQ1A3VEJBWUJDUUVzQ0F2K0tCb21HaG9tR2dBQUJBQUEvNU1EdndNcEFBZ0FFZ0FlQUNvQURVQUtKUjhaRXc4SkJBQUVMU3NCUGdFMEppSUdGQllYSXhVekVTTVZNelVqQXdZQUJ4WUVGejRCTnlZQ0F5NEJKejRCTng0QkZ3NEJBZlFaSHg4eUh4OVNqems1eVRvcnpmNzRCQVFCQ00yNS93VUYvOGVyNHdRRTQ2dXI0d1FFNHdJS0FTQXhJQ0F4SURvZC9zUWNIQUt4QlA3NHpibi9CUVgvdWMwQkNQeW5CT09ycStNRUJPT3JxK01BQUFNQUFQK3JBNmNERVFBTEFCY0FJd0FLdHg0WUVnd0dBQU10S3dFSEp3Y1hCeGMzRnpjbk53TU9BUWNlQVJjK0FUY3VBUU11QVNjK0FUY2VBUmNPQVFLT21wb2NtcG9jbXBvY21wcTJ1ZlVGQmZXNXVmVUZCZlc1cU44RUJOK29xT0FFQk9BQ0ZKcWFISnFhSEpxYUhKcWFBUmtGOWJtNTlRVUY5Ym01OWZ6R0JPQ29xT0FFQk9Db3FPQUFBZ0FBLzJvRDZBTlNBQkVBSFFBSXRSZ1NFUWtDTFNzbERnRWpMZ0VuUGdFM0hnRVhGQVlIQVFjQlBnRTNMZ0VuRGdFSEhnRUNqVFNCU0tyaUJBVGlxcXJpQkRBcUFTSTQvZUNJdFFNRHRZaUl0UU1EdFl3cU1BVGlxcXJpQkFUaXFraUJOUDdkT0FFWUE3V0lpTFVEQTdXSWlMVUFBQUFBQVFBQUFBRUFBT2VHZm5GZkR6ejFBQXNENkFBQUFBRFNsdGQ3QUFBQUFOS1dyVXNBQVA5cUErZ0RVZ0FBQUFnQUFnQUFBQUFBQUFBQkFBQURVdjlxQUZvRDZBQUFBQUFENkFBQkFBQUFBQUFBQUFBQUFBQUFBQUFBRHdQb0FBQUQ2QUFBQStnQUFBUG9BQUFENkFBQUErZ0FBQVBvQUFBRDZBQUFBK2dBQUFQb0FBQUQ2QUFBQStnQUFBUG9BQUFENkFBQUErZ0FBQUFBQUFBQU1nQnVBSzRBN2dFdUFYWUIxQUlFQWk0Q2NnSzRBd2dEVGdPSkFBRUFBQUFQQURJQUJBQUFBQUFBQWdBQUFCQUFjd0FBQUI0TGNBQUFBQUFBQUFBU0FONEFBUUFBQUFBQUFBQTFBQUFBQVFBQUFBQUFBUUFFQURVQUFRQUFBQUFBQWdBSEFEa0FBUUFBQUFBQUF3QUVBRUFBQVFBQUFBQUFCQUFFQUVRQUFRQUFBQUFBQlFBTEFFZ0FBUUFBQUFBQUJnQUVBRk1BQVFBQUFBQUFDZ0FyQUZjQUFRQUFBQUFBQ3dBVEFJSUFBd0FCQkFrQUFBQnFBSlVBQXdBQkJBa0FBUUFJQVA4QUF3QUJCQWtBQWdBT0FRY0FBd0FCQkFrQUF3QUlBUlVBQXdBQkJBa0FCQUFJQVIwQUF3QUJCQWtBQlFBV0FTVUFBd0FCQkFrQUJnQUlBVHNBQXdBQkJBa0FDZ0JXQVVNQUF3QUJCQWtBQ3dBbUFabERiM0I1Y21sbmFIUWdLRU1wSURJd01UVWdZbmtnYjNKcFoybHVZV3dnWVhWMGFHOXljeUJBSUdadmJuUmxiR3h2TG1OdmJYZGxkV2xTWldkMWJHRnlkMlYxYVhkbGRXbFdaWEp6YVc5dUlERXVNSGRsZFdsSFpXNWxjbUYwWldRZ1lua2djM1puTW5SMFppQm1jbTl0SUVadmJuUmxiR3h2SUhCeWIycGxZM1F1YUhSMGNEb3ZMMlp2Ym5SbGJHeHZMbU52YlFCREFHOEFjQUI1QUhJQWFRQm5BR2dBZEFBZ0FDZ0FRd0FwQUNBQU1nQXdBREVBTlFBZ0FHSUFlUUFnQUc4QWNnQnBBR2NBYVFCdUFHRUFiQUFnQUdFQWRRQjBBR2dBYndCeUFITUFJQUJBQUNBQVpnQnZBRzRBZEFCbEFHd0FiQUJ2QUM0QVl3QnZBRzBBZHdCbEFIVUFhUUJTQUdVQVp3QjFBR3dBWVFCeUFIY0FaUUIxQUdrQWR3QmxBSFVBYVFCV0FHVUFjZ0J6QUdrQWJ3QnVBQ0FBTVFBdUFEQUFkd0JsQUhVQWFRQkhBR1VBYmdCbEFISUFZUUIwQUdVQVpBQWdBR0lBZVFBZ0FITUFkZ0JuQURJQWRBQjBBR1lBSUFCbUFISUFid0J0QUNBQVJnQnZBRzRBZEFCbEFHd0FiQUJ2QUNBQWNBQnlBRzhBYWdCbEFHTUFkQUF1QUdnQWRBQjBBSEFBT2dBdkFDOEFaZ0J2QUc0QWRBQmxBR3dBYkFCdkFDNEFZd0J2QUcwQUFBQUFBZ0FBQUFBQUFBQUtBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUEFBQUJBZ0VEQVFRQkJRRUdBUWNCQ0FFSkFRb0JDd0VNQVEwQkRnRVBCbU5wY21Oc1pRaGtiM2R1Ykc5aFpBUnBibVp2REhOaFptVmZjM1ZqWTJWemN3bHpZV1psWDNkaGNtNEhjM1ZqWTJWemN3NXpkV05qWlhOelgyTnBjbU5zWlJGemRXTmpaWE56WDI1dlgyTnBjbU5zWlFkM1lXbDBhVzVuRG5kaGFYUnBibWRmWTJseVkyeGxCSGRoY200TGFXNW1iMTlqYVhKamJHVUdZMkZ1WTJWc0JuTmxZWEpqYUFBQUFBQUFBQUVBQWYvL0FBOEFBQUFBQUFBQUFBQUFBQUN3QUN3Z3NBQlZXRVZaSUNCTHVBQU9VVXV3QmxOYVdMQTBHN0FvV1dCbUlJcFZXTEFDSldHNUNBQUlBR05qSTJJYklTR3dBRm13QUVNalJMSUFBUUJEWUVJdHNBRXNzQ0JnWmkyd0Fpd2daQ0N3d0ZDd0JDWmFzaWdCQ2tORlkwVlNXMWdoSXlFYmlsZ2dzRkJRV0NHd1FGa2JJTEE0VUZnaHNEaFpXU0N4QVFwRFJXTkZZV1N3S0ZCWUliRUJDa05GWTBVZ3NEQlFXQ0d3TUZrYklMREFVRmdnWmlDS2ltRWdzQXBRV0dBYklMQWdVRmdoc0FwZ0d5Q3dObEJZSWJBMllCdGdXVmxaRzdBQksxbFpJN0FBVUZobFdWa3RzQU1zSUVVZ3NBUWxZV1Fnc0FWRFVGaXdCU05Dc0FZalFoc2hJVm13QVdBdHNBUXNJeUVqSVNCa3NRVmlRaUN3QmlOQ3NRRUtRMFZqc1FFS1E3QUFZRVZqc0FNcUlTQ3dCa01naWlDS3NBRXJzVEFGSmJBRUpsRllZRkFiWVZKWldDTlpJU0N3UUZOWXNBRXJHeUd3UUZranNBQlFXR1ZaTGJBRkxMQUhReXV5QUFJQVEyQkNMYkFHTExBSEkwSWpJTEFBSTBKaHNBSmlackFCWTdBQllMQUZLaTJ3Qnl3Z0lFVWdzQXREWTdnRUFHSWdzQUJRV0xCQVlGbG1zQUZqWUVTd0FXQXRzQWdzc2djTEFFTkZRaW9oc2dBQkFFTmdRaTJ3Q1N5d0FFTWpSTElBQVFCRFlFSXRzQW9zSUNCRklMQUJLeU93QUVPd0JDVmdJRVdLSTJFZ1pDQ3dJRkJZSWJBQUc3QXdVRml3SUJ1d1FGbFpJN0FBVUZobFdiQURKU05oUkVTd0FXQXRzQXNzSUNCRklMQUJLeU93QUVPd0JDVmdJRVdLSTJFZ1pMQWtVRml3QUJ1d1FGa2pzQUJRV0dWWnNBTWxJMkZFUkxBQllDMndEQ3dnc0FBalFySUxDZ05GV0NFYkl5RlpLaUV0c0Ewc3NRSUNSYkJrWVVRdHNBNHNzQUZnSUNDd0RFTktzQUJRV0NDd0RDTkNXYkFOUTBxd0FGSllJTEFOSTBKWkxiQVBMQ0N3RUdKbXNBRmpJTGdFQUdPS0kyR3dEa05nSUlwZ0lMQU9JMElqTGJBUUxFdFVXTEVFWkVSWkpMQU5aU040TGJBUkxFdFJXRXRUV0xFRVpFUlpHeUZaSkxBVFpTTjRMYkFTTExFQUQwTlZXTEVQRDBPd0FXRkNzQThyV2JBQVE3QUNKVUt4REFJbFFyRU5BaVZDc0FFV0l5Q3dBeVZRV0xFQkFFTmdzQVFsUW9xS0lJb2pZYkFPS2lFanNBRmhJSW9qWWJBT0tpRWJzUUVBUTJDd0FpVkNzQUlsWWJBT0tpRlpzQXhEUjdBTlEwZGdzQUppSUxBQVVGaXdRR0JaWnJBQll5Q3dDME5qdUFRQVlpQ3dBRkJZc0VCZ1dXYXdBV05nc1FBQUV5TkVzQUZEc0FBK3NnRUJBVU5nUWkyd0V5d0FzUUFDUlZSWXNBOGpRaUJGc0FzalFyQUtJN0FBWUVJZ1lMQUJZYlVRRUFFQURnQkNRb3Bnc1JJR0s3QnlLeHNpV1Myd0ZDeXhBQk1yTGJBVkxMRUJFeXN0c0JZc3NRSVRLeTJ3Rnl5eEF4TXJMYkFZTExFRUV5c3RzQmtzc1FVVEt5MndHaXl4QmhNckxiQWJMTEVIRXlzdHNCd3NzUWdUS3kyd0hTeXhDUk1yTGJBZUxBQ3dEU3V4QUFKRlZGaXdEeU5DSUVXd0N5TkNzQW9qc0FCZ1FpQmdzQUZodFJBUUFRQU9BRUpDaW1DeEVnWXJzSElyR3lKWkxiQWZMTEVBSGlzdHNDQXNzUUVlS3kyd0lTeXhBaDRyTGJBaUxMRURIaXN0c0NNc3NRUWVLeTJ3SkN5eEJSNHJMYkFsTExFR0hpc3RzQ1lzc1FjZUt5MndKeXl4Q0I0ckxiQW9MTEVKSGlzdHNDa3NJRHl3QVdBdHNDb3NJR0N3RUdBZ1F5T3dBV0JEc0FJbFliQUJZTEFwS2lFdHNDc3NzQ29yc0NvcUxiQXNMQ0FnUnlBZ3NBdERZN2dFQUdJZ3NBQlFXTEJBWUZsbXNBRmpZQ05oT0NNZ2lsVllJRWNnSUxBTFEyTzRCQUJpSUxBQVVGaXdRR0JaWnJBQlkyQWpZVGdiSVZrdHNDMHNBTEVBQWtWVVdMQUJGckFzS3JBQkZUQWJJbGt0c0M0c0FMQU5LN0VBQWtWVVdMQUJGckFzS3JBQkZUQWJJbGt0c0M4c0lEV3dBV0F0c0RBc0FMQUJSV080QkFCaUlMQUFVRml3UUdCWlpyQUJZN0FCSzdBTFEyTzRCQUJpSUxBQVVGaXdRR0JaWnJBQlk3QUJLN0FBRnJRQUFBQUFBRVErSXppeEx3RVZLaTJ3TVN3Z1BDQkhJTEFMUTJPNEJBQmlJTEFBVUZpd1FHQlpackFCWTJDd0FFTmhPQzJ3TWl3dUZ6d3RzRE1zSUR3Z1J5Q3dDME5qdUFRQVlpQ3dBRkJZc0VCZ1dXYXdBV05nc0FCRFliQUJRMk00TGJBMExMRUNBQllsSUM0Z1I3QUFJMEt3QWlWSmlvcEhJMGNqWVNCWVloc2hXYkFCSTBLeU13RUJGUlFxTGJBMUxMQUFGckFFSmJBRUpVY2pSeU5oc0FsREsyV0tMaU1nSUR5S09DMndOaXl3QUJhd0JDV3dCQ1VnTGtjalJ5TmhJTEFFSTBLd0NVTXJJTEJnVUZnZ3NFQlJXTE1DSUFNZ0c3TUNKZ01hV1VKQ0l5Q3dDRU1naWlOSEkwY2pZU05HWUxBRVE3QUNZaUN3QUZCWXNFQmdXV2F3QVdOZ0lMQUJLeUNLaW1FZ3NBSkRZR1Fqc0FORFlXUlFXTEFDUTJFYnNBTkRZRm13QXlXd0FtSWdzQUJRV0xCQVlGbG1zQUZqWVNNZ0lMQUVKaU5HWVRnYkk3QUlRMGF3QWlXd0NFTkhJMGNqWVdBZ3NBUkRzQUppSUxBQVVGaXdRR0JaWnJBQlkyQWpJTEFCS3lPd0JFTmdzQUVyc0FVbFliQUZKYkFDWWlDd0FGQllzRUJnV1dhd0FXT3dCQ1poSUxBRUpXQmtJN0FESldCa1VGZ2hHeU1oV1NNZ0lMQUVKaU5HWVRoWkxiQTNMTEFBRmlBZ0lMQUZKaUF1UnlOSEkyRWpQRGd0c0Rnc3NBQVdJTEFJSTBJZ0lDQkdJMGV3QVNzallUZ3RzRGtzc0FBV3NBTWxzQUlsUnlOSEkyR3dBRlJZTGlBOEl5RWJzQUlsc0FJbFJ5TkhJMkVnc0FVbHNBUWxSeU5ISTJHd0JpV3dCU1ZKc0FJbFlia0lBQWdBWTJNaklGaGlHeUZaWTdnRUFHSWdzQUJRV0xCQVlGbG1zQUZqWUNNdUl5QWdQSW80SXlGWkxiQTZMTEFBRmlDd0NFTWdMa2NqUnlOaElHQ3dJR0Jtc0FKaUlMQUFVRml3UUdCWlpyQUJZeU1nSUR5S09DMndPeXdqSUM1R3NBSWxSbEpZSUR4WkxyRXJBUlFyTGJBOExDTWdMa2F3QWlWR1VGZ2dQRmt1c1NzQkZDc3RzRDBzSXlBdVJyQUNKVVpTV0NBOFdTTWdMa2F3QWlWR1VGZ2dQRmt1c1NzQkZDc3RzRDRzc0RVckl5QXVSckFDSlVaU1dDQThXUzZ4S3dFVUt5MndQeXl3Tml1S0lDQThzQVFqUW9vNEl5QXVSckFDSlVaU1dDQThXUzZ4S3dFVUs3QUVReTZ3S3lzdHNFQXNzQUFXc0FRbHNBUW1JQzVISTBjalliQUpReXNqSUR3Z0xpTTRzU3NCRkNzdHNFRXNzUWdFSlVLd0FCYXdCQ1d3QkNVZ0xrY2pSeU5oSUxBRUkwS3dDVU1ySUxCZ1VGZ2dzRUJSV0xNQ0lBTWdHN01DSmdNYVdVSkNJeUJIc0FSRHNBSmlJTEFBVUZpd1FHQlpackFCWTJBZ3NBRXJJSXFLWVNDd0FrTmdaQ093QTBOaFpGQllzQUpEWVJ1d0EwTmdXYkFESmJBQ1lpQ3dBRkJZc0VCZ1dXYXdBV05oc0FJbFJtRTRJeUE4SXpnYklTQWdSaU5Ic0FFckkyRTRJVm14S3dFVUt5MndRaXl3TlNzdXNTc0JGQ3N0c0VNc3NEWXJJU01nSUR5d0JDTkNJeml4S3dFVUs3QUVReTZ3S3lzdHNFUXNzQUFWSUVld0FDTkNzZ0FCQVJVVUV5NndNU290c0VVc3NBQVZJRWV3QUNOQ3NnQUJBUlVVRXk2d01Tb3RzRVlzc1FBQkZCT3dNaW90c0Vjc3NEUXFMYkJJTExBQUZrVWpJQzRnUm9vallUaXhLd0VVS3kyd1NTeXdDQ05Dc0VnckxiQktMTElBQUVFckxiQkxMTElBQVVFckxiQk1MTElCQUVFckxiQk5MTElCQVVFckxiQk9MTElBQUVJckxiQlBMTElBQVVJckxiQlFMTElCQUVJckxiQlJMTElCQVVJckxiQlNMTElBQUQ0ckxiQlRMTElBQVQ0ckxiQlVMTElCQUQ0ckxiQlZMTElCQVQ0ckxiQldMTElBQUVBckxiQlhMTElBQVVBckxiQllMTElCQUVBckxiQlpMTElCQVVBckxiQmFMTElBQUVNckxiQmJMTElBQVVNckxiQmNMTElCQUVNckxiQmRMTElCQVVNckxiQmVMTElBQUQ4ckxiQmZMTElBQVQ4ckxiQmdMTElCQUQ4ckxiQmhMTElCQVQ4ckxiQmlMTEEzS3k2eEt3RVVLeTJ3WXl5d055dXdPeXN0c0dRc3NEY3JzRHdyTGJCbExMQUFGckEzSzdBOUt5MndaaXl3T0NzdXNTc0JGQ3N0c0djc3NEZ3JzRHNyTGJCb0xMQTRLN0E4S3kyd2FTeXdPQ3V3UFNzdHNHb3NzRGtyTHJFckFSUXJMYkJyTExBNUs3QTdLeTJ3YkN5d09TdXdQQ3N0c0cwc3NEa3JzRDByTGJCdUxMQTZLeTZ4S3dFVUt5MndieXl3T2l1d095c3RzSEFzc0RvcnNEd3JMYkJ4TExBNks3QTlLeTJ3Y2l5ekNRUUNBMFZZSVJzaklWbENLN0FJWmJBREpGQjRzQUVWTUMwQVM3Z0F5RkpZc1FFQmpsbXdBYmtJQUFnQVkzQ3hBQVZDc1FBQUtyRUFCVUt4QUFncXNRQUZRckVBQ0NxeEFBVkN1UUFBQUFrcXNRQUZRcmtBQUFBSktyRURBRVN4SkFHSVVWaXdRSWhZc1FOa1JMRW1BWWhSV0xvSWdBQUJCRUNJWTFSWXNRTUFSRmxaV1ZteEFBd3F1QUgvaGJBRWpiRUNBRVFBJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgdXJsKCdkYXRhOmFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtiYXNlNjQsUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCemRHRnVaR0ZzYjI1bFBTSnVieUkvUGdvOElVUlBRMVJaVUVVZ2MzWm5JRkJWUWt4SlF5QWlMUzh2VnpOREx5OUVWRVFnVTFaSElERXVNUzh2UlU0aUlDSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OUhjbUZ3YUdsamN5OVRWa2N2TVM0eEwwUlVSQzl6ZG1jeE1TNWtkR1FpUGdvOGMzWm5JSGh0Ykc1elBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5SStDanh0WlhSaFpHRjBZVDVEYjNCNWNtbG5hSFFnS0VNcElESXdNVFVnWW5rZ2IzSnBaMmx1WVd3Z1lYVjBhRzl5Y3lCQUlHWnZiblJsYkd4dkxtTnZiVHd2YldWMFlXUmhkR0UrQ2p4a1pXWnpQZ284Wm05dWRDQnBaRDBpZDJWMWFTSWdhRzl5YVhvdFlXUjJMWGc5SWpFd01EQWlJRDRLUEdadmJuUXRabUZqWlNCbWIyNTBMV1poYldsc2VUMGlkMlYxYVNJZ1ptOXVkQzEzWldsbmFIUTlJalF3TUNJZ1ptOXVkQzF6ZEhKbGRHTm9QU0p1YjNKdFlXd2lJSFZ1YVhSekxYQmxjaTFsYlQwaU1UQXdNQ0lnWVhOalpXNTBQU0k0TlRBaUlHUmxjMk5sYm5ROUlpMHhOVEFpSUM4K0NqeHRhWE56YVc1bkxXZHNlWEJvSUdodmNtbDZMV0ZrZGkxNFBTSXhNREF3SWlBdlBnbzhaMng1Y0dnZ1oyeDVjR2d0Ym1GdFpUMGlZMmx5WTJ4bElpQjFibWxqYjJSbFBTSW1JM2hsWVRBeE95SWdaRDBpYlRVd01TQTNPVEZqTFRJME5DQXdMVFEwTWkweE9UZ3RORFF5TFRRME1pQXdMVEkwTXlBeE9UZ3RORFF4SURRME1pMDBOREZ6TkRReElERTVOeUEwTkRFZ05EUXhZekFnTWpRMExURTVPQ0EwTkRJdE5EUXhJRFEwTW5vZ2JUQXRPRFE1WXkweU1qTWdNQzAwTURRZ01UZ3dMVFF3TkNBME1ETWdNQ0F5TWpNZ01UZ3hJRFF3TXlBME1EUWdOREF6SURJeU1pQXdJRFF3TXkweE9EQWdOREF6TFRRd015QXdMVEl5TXkweE9ERXROREF6TFRRd015MDBNRE42SWlCb2IzSnBlaTFoWkhZdGVEMGlNVEF3TUNJZ0x6NEtQR2RzZVhCb0lHZHNlWEJvTFc1aGJXVTlJbVJ2ZDI1c2IyRmtJaUIxYm1samIyUmxQU0ltSTNobFlUQXlPeUlnWkQwaWJUUTVOU0EzT1RkakxUSTBNaUF3TFRRME1pMHlNREF0TkRReUxUUTFNaUF3TFRJME1pQXlNREF0TkRReUlEUTBNaTAwTkRJZ01qVXlJREFnTkRVeUlESXdNQ0EwTlRJZ05EUXlJREFnTWpVeUxUSXdNQ0EwTlRJdE5EVXlJRFExTW5vZ2JURTFOeTAxTWpoc0xURXhPQzB4TlRSakxURTVMVEkwTFRRNUxUSTBMVFk0SURCc0xURXhPQ0F4TlRSakxURTVJREkwTFRrZ05EUWdNaklnTkRSb09UTjJNamM1WXpBZ01UQWdPQ0F4T1NBeE9DQXhPV2d6T0dNeE1DQXdJREU0TFRrZ01UZ3RNVGwyTFRJM09XZzVNMk16TVNBd0lEUXhMVEl3SURJeUxUUTBlaUlnYUc5eWFYb3RZV1IyTFhnOUlqRXdNREFpSUM4K0NqeG5iSGx3YUNCbmJIbHdhQzF1WVcxbFBTSnBibVp2SWlCMWJtbGpiMlJsUFNJbUkzaGxZVEF6T3lJZ1pEMGliVFE1TmlBM09EbGpMVEl6T0NBd0xUUXpOUzB4T1RjdE5ETTFMVFEwTlNBd0xUSXpPQ0F4T1RjdE5ETTFJRFF6TlMwME16VWdNalE0SURBZ05EUTFJREU1TnlBME5EVWdORE0xSURBZ01qUTRMVEU1TnlBME5EVXRORFExSURRME5Yb2diVE0yTFRZMU5tTXdMVGt0T0MweE55MHhOeTB4TjJndE1qaGpMVGtnTUMweE55QTRMVEUzSURFM2RqSTRNbU13SURVZ05DQTVJRGtnT1dnME5HTTFJREFnT1MwMElEa3RPWFl0TWpneWVpQnRMVE14SURNek9XTXRNalFnTUMwME5DQXlNQzAwTkNBME5ITXlNQ0EwTkNBME5DQTBOR015TkNBd0lEUTBMVEU1SURRMExUUTBjeTB5TUMwME5DMDBOQzAwTkhvaUlHaHZjbWw2TFdGa2RpMTRQU0l4TURBd0lpQXZQZ284WjJ4NWNHZ2daMng1Y0dndGJtRnRaVDBpYzJGbVpWOXpkV05qWlhOeklpQjFibWxqYjJSbFBTSW1JM2hsWVRBME95SWdaRDBpYlRVd01DQTRNVEpqTFRFM015MHpPUzB5T1RrdE9ESXROREV6TFRFeE9TQXdMVEV5TUNBd0xUSXhOaUF3TFRNeE55QXdMVEk0TXlBeU16RXRORE01SURReE15MDBPRGdnTVRneUlEUTVJRFF4TXlBeU1EVWdOREV6SURRNE9DQXdJREV3TVNBd0lERTVOeUF3SURNeE55MHhNVFFnTXpjdE1qUXdJRGd3TFRReE15QXhNVGw2SUcweU5USXRNekl4YkMwek1qSXRNekUyWXkweUxUSXROUzB5TFRjZ01Hd3RNVFE0SURFMU0yTXRNaUF5TFRJZ05TMHhJRGhzTWpFZ01qZGpNU0F5SURRZ015QTNJREZzTVRJeExUa3pZekl0TVNBMUxURWdOeUF3YkRJNU5TQXlORFpqTWlBeUlEVWdNaUEzSURCc01qQXRNVGxqTVMweUlERXROU0F3TFRkNklpQm9iM0pwZWkxaFpIWXRlRDBpTVRBd01DSWdMejRLUEdkc2VYQm9JR2RzZVhCb0xXNWhiV1U5SW5OaFptVmZkMkZ5YmlJZ2RXNXBZMjlrWlQwaUppTjRaV0V3TlRzaUlHUTlJbTAxTURFZ056azBZeTB4TmpZdE16Z3RNamczTFRnd0xUTTVOeTB4TVRRZ01DMHhNVFlnTUMweU1EZ2dNQzB6TURVZ01DMHlOeklnTWpJekxUUXlNaUF6T1RjdE5EWTVJREUzTkNBME55QXpPVGNnTVRrM0lETTVOeUEwTmprZ01DQTVOeUF3SURFNE9TQXdJRE13TlMweE1UQWdNelF0TWpNeElEYzJMVE01TnlBeE1UUjZJRzB0TWpNdE1qYzJhRFEyWXpZZ01DQXhNQzAwSURrdE9Xd3RNVEF0TWpFMll6QXRNeTB5TFRVdE5TMDFhQzB6TkdNdE15QXdMVFVnTWkwMUlEVnNMVEV3SURJeE5tTXdJRFVnTkNBNUlEa2dPWG9nYlRJekxUTXpObU10TVRnZ01DMHpNeUF4TlMwek15QXpNM014TlNBek15QXpNeUF6TXlBek15MHhOU0F6TXkwek15MHhOUzB6TXkwek15MHpNM29pSUdodmNtbDZMV0ZrZGkxNFBTSXhNREF3SWlBdlBnbzhaMng1Y0dnZ1oyeDVjR2d0Ym1GdFpUMGljM1ZqWTJWemN5SWdkVzVwWTI5a1pUMGlKaU40WldFd05qc2lJR1E5SW0weU9EZ2dNekExWXkwM0lEZ3RPQ0F5TWkweUlETXdiRE1nTkdNM0lEa2dNVGtnTVRFZ01qZ2dOR3c1T0MwM05XTTVMVGNnTWpNdE55QXpNU0F3YkRJM05pQXlNamxqT0NBM0lESXhJRGNnTWprdE1Xd3RNaUF5WXpndE9DQTRMVEl3SURBdE1qaHNMVE13TkMweU9UbGpMVGN0T0MweU1DMDNMVEk0SURGc0xURXlPU0F4TXpONklHMDJOamtnTXpsak1DQXlOVGd0TWpBMUlEUTJNeTAwTmpNZ05EWXpMVEkwTmlBd0xUUTFNUzB5TURVdE5EVXhMVFEyTXlBd0xUSTBOaUF5TURVdE5EVXhJRFExTVMwME5URWdNalU0SURBZ05EWXpJREl3TlNBME5qTWdORFV4ZWlJZ2FHOXlhWG90WVdSMkxYZzlJakV3TURBaUlDOCtDanhuYkhsd2FDQm5iSGx3YUMxdVlXMWxQU0p6ZFdOalpYTnpYMk5wY21Oc1pTSWdkVzVwWTI5a1pUMGlKaU40WldFd056c2lJR1E5SW0wMU1ERWdOemt4WXkweU5EUWdNQzAwTkRJdE1UazRMVFEwTWkwME5ESWdNQzB5TkRNZ01UazRMVFEwTVNBME5ESXRORFF4Y3pRME1TQXhPVGNnTkRReElEUTBNV013SURJME5DMHhPVGdnTkRReUxUUTBNU0EwTkRKNklHMHdMVGcwT1dNdE1qSXpJREF0TkRBMElERTRNQzAwTURRZ05EQXpJREFnTWpJeklERTRNU0EwTURNZ05EQTBJRFF3TXlBeU1qSWdNQ0EwTURNdE1UZ3dJRFF3TXkwME1ETWdNQzB5TWpNdE1UZ3hMVFF3TXkwME1ETXROREF6ZWlCdE1qRTBJRFUxTUd3dE1qWTJMVEl5TVdNdE9DMDNMVEl5TFRjdE16QXRNV3d0T1RZZ056TmpMVGdnTnkweU1DQTFMVEkyTFROc0xUTXROR010TmkwNUxUVXRNaklnTWkwek1Hd3hNalV0TVRJNFl6Y3RPQ0F4T1MwNElESTNMVEZzTWpreklESTRPV00zSURjZ09DQXhPQ0F4SURJMkxUZ2dOeTB5TUNBM0xUSTNJREI2SUcweU5pQXhZekFnTUNBeExURWdNUzB4SURBZ01DQXhMVEVnTVMweGJDMHlJREo2SWlCb2IzSnBlaTFoWkhZdGVEMGlNVEF3TUNJZ0x6NEtQR2RzZVhCb0lHZHNlWEJvTFc1aGJXVTlJbk4xWTJObGMzTmZibTlmWTJseVkyeGxJaUIxYm1samIyUmxQU0ltSTNobFlUQTRPeUlnWkQwaWJUWXhJREk0TldNdE1UUWdNVFF0TVRnZ05EQXRPU0ExT0d3MklERXhZemdnTVRnZ01qZ2dNak1nTkRRZ01URnNNakF6TFRFME4yTXhOaTB4TVNBME1TMHhNU0ExTmlBeWJEVTBNU0EwTkRaak1UVWdNVElnTXprZ01URWdOVE10TTJ3dE1UTWdNVE5qTVRRdE1UUWdNVFF0TXpjZ01DMDFNV3d0TlRnekxUVTVNV010TVRRdE1UUXRNell0TVRRdE5UQXRNV3d0TWpRNElESTFNbm9pSUdodmNtbDZMV0ZrZGkxNFBTSXhNREF3SWlBdlBnbzhaMng1Y0dnZ1oyeDVjR2d0Ym1GdFpUMGlkMkZwZEdsdVp5SWdkVzVwWTI5a1pUMGlKaU40WldFd09Uc2lJR1E5SW0wME9UUWdPREF5WXkweU5EUWdNQzAwTkRZdE1qQXlMVFEwTmkwME5UZ2dNQzB5TkRRZ01qQXlMVFEwTmlBME5EWXRORFEySURJMU5pQXdJRFExT0NBeU1ESWdORFU0SURRME5pQXdJREkxTmkweU1ESWdORFU0TFRRMU9DQTBOVGg2SUcweU5UVXROVFV4YUMweU9UUjJNek0wYURRMWRpMHlPRGxvTWpRNWRpMDBOWG9pSUdodmNtbDZMV0ZrZGkxNFBTSXhNREF3SWlBdlBnbzhaMng1Y0dnZ1oyeDVjR2d0Ym1GdFpUMGlkMkZwZEdsdVoxOWphWEpqYkdVaUlIVnVhV052WkdVOUlpWWplR1ZoTUdFN0lpQmtQU0p0TnpReElEUTVNMk13SURBZ01TMHhJREV0TVNBd0lEQWdNUzB4SURFdE1Xd3RNaUF5ZWlCdExUSTBNQ0F5T1RoakxUSTBOQ0F3TFRRME1pMHhPVGd0TkRReUxUUTBNaUF3TFRJME15QXhPVGd0TkRReElEUTBNaTAwTkRGek5EUXhJREU1TnlBME5ERWdORFF4WXpBZ01qUTBMVEU1T0NBME5ESXRORFF4SURRME1ub2diVEF0T0RRNVl5MHlNak1nTUMwME1EUWdNVGd3TFRRd05DQTBNRE1nTUNBeU1qTWdNVGd4SURRd015QTBNRFFnTkRBeklESXlNaUF3SURRd015MHhPREFnTkRBekxUUXdNeUF3TFRJeU15MHhPREV0TkRBekxUUXdNeTAwTURONklHMHRORFlnTlRZeGFDMHpObll0TWpVemFESTFNM1l6Tm1ndE1qRTNlaUlnYUc5eWFYb3RZV1IyTFhnOUlqRXdNREFpSUM4K0NqeG5iSGx3YUNCbmJIbHdhQzF1WVcxbFBTSjNZWEp1SWlCMWJtbGpiMlJsUFNJbUkzaGxZVEJpT3lJZ1pEMGliVFE1TkNBNE1UTmpMVEkxTUNBd0xUUTFOeTB5TURjdE5EVTNMVFEyT1NBd0xUSTFNQ0F5TURjdE5EVTNJRFExTnkwME5UY2dNall5SURBZ05EWTVJREl3TnlBME5qa2dORFUzSURBZ01qWXlMVEl3TnlBME5qa3RORFk1SURRMk9Yb2diUzB5TVMweU16Wm9OVFJqTVRBZ01DQXhPQzA0SURFNExURTRiQzB4TkMwek1ERmpNQzAxTFRVdE1UQXRNVEF0TVRCb0xUUXlZeTAxSURBdE9TQTFMVEV3SURFd2JDMHhNeUF6TURCakxURWdNVEFnTnlBeE9TQXhOeUF4T1hvZ2JUSTNMVFEzTW1NdE1qVWdNQzAwTlNBeU1DMDBOU0EwTlNBd0lESTFJREl3SURRMklEUTFJRFEySURJMUlEQWdORFV0TWpFZ05EVXRORFlnTUMweU5TMHlNQzAwTlMwME5TMDBOWG9pSUdodmNtbDZMV0ZrZGkxNFBTSXhNREF3SWlBdlBnbzhaMng1Y0dnZ1oyeDVjR2d0Ym1GdFpUMGlhVzVtYjE5amFYSmpiR1VpSUhWdWFXTnZaR1U5SWlZamVHVmhNR003SWlCa1BTSnROVEF3SURVeU1tTXpNaUF3SURVM0lESTJJRFUzSURVNElEQWdNekV0TWpVZ05UY3ROVGNnTlRjdE16SWdNQzAxTnkweU5pMDFOeTAxTnlBd0xUTXlJREkxTFRVNElEVTNMVFU0ZWlCdE5UY3ROVGRvTFRFME0zWXRNamxvTlRkMkxUTXhObWd0TlRkMkxUSTRhREl3TVhZeU9HZ3ROVGgyTXpRMWVpQnRMVFF6SURNME5HTXRNalk0SURBdE5EY3pMVEl3TlMwME56TXRORGN6SURBdE1qUXdJREl3TlMwME5EVWdORGN6TFRRME5TQXlOREFnTUNBME5EVWdNakExSURRME5TQTBORFVnTUNBeU5qZ3RNakExSURRM015MDBORFVnTkRjemVpQnRMVEUwTFRnMk1XTXRNakl5SURBdE5EQXlJREU0TUMwME1ESWdOREF5SURBZ01qSXlJREU0TUNBME1ESWdOREF5SURRd01pQXlNaklnTUNBME1ESXRNVGd3SURRd01pMDBNRElnTUMweU1qSXRNVGd3TFRRd01pMDBNREl0TkRBeWVpSWdhRzl5YVhvdFlXUjJMWGc5SWpFd01EQWlJQzgrQ2p4bmJIbHdhQ0JuYkhsd2FDMXVZVzFsUFNKallXNWpaV3dpSUhWdWFXTnZaR1U5SWlZamVHVmhNR1E3SWlCa1BTSnROalUwSURVek1td3RNVFUwTFRFMU5DMHhOVFFnTVRVMExUSTRMVEk0SURFMU5DMHhOVFF0TVRVMExURTFOQ0F5T0MweU9DQXhOVFFnTVRVMElERTFOQzB4TlRRZ01qZ2dNamd0TVRVMElERTFOQ0F4TlRRZ01UVTBlaUJ0TFRFMU5DQXlOVE5qTFRJME1DQXdMVFF6TlMweE9UVXRORE0xTFRRek5TQXdMVEkwTUNBeE9UVXRORE0xSURRek5TMDBNelVnTWpRd0lEQWdORE0xSURFNU5TQTBNelVnTkRNMUlEQWdNalF3TFRFNU5TQTBNelV0TkRNMUlEUXpOWG9nYlRBdE9ETXhZeTB5TVRnZ01DMHpPVFVnTVRjNExUTTVOU0F6T1RZZ01DQXlNVGdnTVRjM0lETTVOaUF6T1RVZ016azJJREl4T0NBd0lETTVOaTB4TnpnZ016azJMVE01TmlBd0xUSXhPQzB4TnpndE16azJMVE01Tmkwek9UWjZJaUJvYjNKcGVpMWhaSFl0ZUQwaU1UQXdNQ0lnTHo0S1BHZHNlWEJvSUdkc2VYQm9MVzVoYldVOUluTmxZWEpqYUNJZ2RXNXBZMjlrWlQwaUppTjRaV0V3WlRzaUlHUTlJbTAyTlRNZ01UUXdZeTAyT1MwMU5pMHhOVGN0T1RBdE1qVXpMVGt3TFRJeU1TQXdMVFF3TUNBeE56a3ROREF3SURRd01ITXhOemtnTkRBd0lEUXdNQ0EwTURBZ05EQXdMVEUzT1NBME1EQXROREF3WXpBdE9UWXRNelF0TVRnMExUa3dMVEkxTTJ3eU9UQXRNamt4TFRVMkxUVTJMVEk1TVNBeU9UQjZJRzB0TWpVekxURXdZekUzTnlBd0lETXlNQ0F4TkRNZ016SXdJRE15TUhNdE1UUXpJRE15TUMwek1qQWdNekl3TFRNeU1DMHhORE10TXpJd0xUTXlNQ0F4TkRNdE16SXdJRE15TUMwek1qQjZJaUJvYjNKcGVpMWhaSFl0ZUQwaU1UQXdNQ0lnTHo0S1BDOW1iMjUwUGdvOEwyUmxabk0rQ2p3dmMzWm5QZz09JykgZm9ybWF0KCdzdmcnKTtcbn1cblxuW2NsYXNzXj1cIndldWlfaWNvbl9cIl06YmVmb3JlLCBbY2xhc3MqPVwiIHdldWlfaWNvbl9cIl06YmVmb3JlIHtcbiAgICBmb250LWZhbWlseTogXCJ3ZXVpXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgc3BlYWs6IG5vbmU7XG5cbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7XG4gICAgd2lkdGg6IDFlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IC4yZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8qIG9wYWNpdHk6IC44OyAqL1xuXG4gICAgLyogRm9yIHNhZmV0eSAtIHJlc2V0IHBhcmVudCBzdHlsZXMsIHRoYXQgY2FuIGJyZWFrIGdseXBoIGNvZGVzKi9cbiAgICBmb250LXZhcmlhbnQ6IG5vcm1hbDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcblxuICAgIC8qIGZpeCBidXR0b25zIGhlaWdodCwgZm9yIHR3aXR0ZXIgYm9vdHN0cmFwICovXG4gICAgbGluZS1oZWlnaHQ6IDFlbTtcblxuICAgIC8qIEFuaW1hdGlvbiBjZW50ZXIgY29tcGVuc2F0aW9uIC0gbWFyZ2lucyBzaG91bGQgYmUgc3ltbWV0cmljICovXG4gICAgLyogcmVtb3ZlIGlmIG5vdCBuZWVkZWQgKi9cbiAgICBtYXJnaW4tbGVmdDogLjJlbTtcblxuICAgIC8qIHlvdSBjYW4gYmUgbW9yZSBjb21mb3J0YWJsZSB3aXRoIGluY3JlYXNlZCBpY29ucyBzaXplICovXG4gICAgLyogZm9udC1zaXplOiAxMjAlOyAqL1xuXG4gICAgLyogVW5jb21tZW50IGZvciAzRCBlZmZlY3QgKi9cbiAgICAvKiB0ZXh0LXNoYWRvdzogMXB4IDFweCAxcHggcmdiYSgxMjcsIDEyNywgMTI3LCAwLjMpOyAqL1xufVxuXG4ud2V1aV9pY29uX2NpcmNsZTpiZWZvcmUgeyBjb250ZW50OiBcIlxcRUEwMVwiIH0gLyogJ+6ggCcgKi9cbi53ZXVpX2ljb25fZG93bmxvYWQ6YmVmb3JlIHsgY29udGVudDogXCJcXEVBMDJcIiB9IC8qICfuoIAnICovXG4ud2V1aV9pY29uX2luZm86YmVmb3JlIHsgY29udGVudDogXCJcXEVBMDNcIiB9IC8qICfuoIAnICovXG4ud2V1aV9pY29uX3NhZmVfc3VjY2VzczpiZWZvcmUgeyBjb250ZW50OiBcIlxcRUEwNFwiIH0gLyogJ+6ggCcgKi9cbi53ZXVpX2ljb25fc2FmZV93YXJuOmJlZm9yZSB7IGNvbnRlbnQ6IFwiXFxFQTA1XCIgfSAvKiAn7qCAJyAqL1xuLndldWlfaWNvbl9zdWNjZXNzOmJlZm9yZSB7IGNvbnRlbnQ6IFwiXFxFQTA2XCIgfSAvKiAn7qCAJyAqL1xuLndldWlfaWNvbl9zdWNjZXNzX2NpcmNsZTpiZWZvcmUgeyBjb250ZW50OiBcIlxcRUEwN1wiIH0gLyogJ+6ggCcgKi9cbi53ZXVpX2ljb25fc3VjY2Vzc19ub19jaXJjbGU6YmVmb3JlIHsgY29udGVudDogXCJcXEVBMDhcIiB9IC8qICfuoIAnICovXG4ud2V1aV9pY29uX3dhaXRpbmc6YmVmb3JlIHsgY29udGVudDogXCJcXEVBMDlcIiB9IC8qICfuoIAnICovXG4ud2V1aV9pY29uX3dhaXRpbmdfY2lyY2xlOmJlZm9yZSB7IGNvbnRlbnQ6IFwiXFxFQTBBXCIgfSAvKiAn7qCAJyAqL1xuLndldWlfaWNvbl93YXJuOmJlZm9yZSB7IGNvbnRlbnQ6IFwiXFxFQTBCXCIgfSAvKiAn7qCAJyAqL1xuLndldWlfaWNvbl9pbmZvX2NpcmNsZTpiZWZvcmUgeyBjb250ZW50OiBcIlxcRUEwQ1wiIH0gLyogJ+6ggCcgKi9cbi53ZXVpX2ljb25fY2FuY2VsOmJlZm9yZSB7IGNvbnRlbnQ6IFwiXFxFQTBEXCIgfSAvKiAn7qCAJyAqL1xuLndldWlfaWNvbl9zZWFyY2g6YmVmb3JleyBjb250ZW50OiBcIlxcRUEwRVwiIH0gIC8qICfuoIAnICovIiwiQGltcG9ydCBcIndldWlfZm9udFwiO1xuXG5bY2xhc3NePVwid2V1aV9pY29uX1wiXTpiZWZvcmUsIFtjbGFzcyo9XCIgd2V1aV9pY29uX1wiXTpiZWZvcmUge1xuICAgIG1hcmdpbjogMDtcbn1cblxuOmJlZm9yZSB7XG4gICAgLndldWlfaWNvbl9zdWNjZXNzJiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjNweDtcbiAgICAgICAgY29sb3I6ICMwOUJCMDc7XG4gICAgfVxuICAgIC53ZXVpX2ljb25fd2FpdGluZyYge1xuICAgICAgICBmb250LXNpemU6IDIzcHg7XG4gICAgICAgIGNvbG9yOiAjMTBBRUZGO1xuICAgIH1cbiAgICAud2V1aV9pY29uX3dhcm4mIHtcbiAgICAgICAgZm9udC1zaXplOiAyM3B4O1xuICAgICAgICBjb2xvcjogI0Y0MzUzMDtcbiAgICB9XG4gICAgLndldWlfaWNvbl9pbmZvJiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjNweDtcbiAgICAgICAgY29sb3I6ICMxMEFFRkY7XG4gICAgfVxuXG4gICAgLndldWlfaWNvbl9zdWNjZXNzX2NpcmNsZSYge1xuICAgICAgICBmb250LXNpemU6IDIzcHg7XG4gICAgICAgIGNvbG9yOiAjMDlCQjA3O1xuICAgIH1cbiAgICAud2V1aV9pY29uX3N1Y2Nlc3Nfbm9fY2lyY2xlJiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjNweDtcbiAgICAgICAgY29sb3I6ICMwOUJCMDc7XG4gICAgfVxuICAgIC53ZXVpX2ljb25fd2FpdGluZ19jaXJjbGUmIHtcbiAgICAgICAgZm9udC1zaXplOiAyM3B4O1xuICAgICAgICBjb2xvcjogIzEwQUVGRjtcbiAgICB9XG4gICAgLndldWlfaWNvbl9jaXJjbGUmIHtcbiAgICAgICAgZm9udC1zaXplOiAyM3B4O1xuICAgICAgICBjb2xvcjogI0M5QzlDOTtcbiAgICB9XG4gICAgLndldWlfaWNvbl9kb3dubG9hZCYge1xuICAgICAgICBmb250LXNpemU6IDIzcHg7XG4gICAgICAgIGNvbG9yOiAjMDlCQjA3O1xuICAgIH1cblxuICAgIC53ZXVpX2ljb25faW5mb19jaXJjbGUmIHtcbiAgICAgICAgZm9udC1zaXplOiAyM3B4O1xuICAgICAgICBjb2xvcjogIzA5QkIwNztcbiAgICB9XG5cbiAgICAud2V1aV9pY29uX3NhZmVfc3VjY2VzcyYge1xuICAgICAgICBjb2xvcjogIzA5QkIwNztcbiAgICB9XG4gICAgLndldWlfaWNvbl9zYWZlX3dhcm4mIHtcbiAgICAgICAgY29sb3I6ICNGRkJFMDA7XG4gICAgfVxuXG4gICAgLndldWlfaWNvbl9jYW5jZWwmIHtcbiAgICAgICAgY29sb3I6ICNGNDM1MzA7XG4gICAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICB9XG5cbiAgICAud2V1aV9pY29uX3NlYXJjaCYge1xuICAgICAgICBjb2xvcjogI0IyQjJCMjtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbn1cblxuOmJlZm9yZSB7XG4gICAgLndldWlfaWNvbl9tc2cmIHtcbiAgICAgICAgZm9udC1zaXplOiAxMDRweDtcbiAgICAgICAgLndldWlfaWNvbl93YXJuJiB7XG4gICAgICAgICAgICBjb2xvcjogI0Y3NjI2MDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuOmJlZm9yZSB7XG4gICAgLndldWlfaWNvbl9zYWZlJiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTA0cHg7XG4gICAgfVxufSIsIkBpbXBvcnQgXCIuLi8uLi9iYXNlL2ZuXCI7XG4vLyDlrZjlnKjmoLflvI/kvJjlhYjnuqfnmoTpl67popjvvIzmlYXov5nph4zlr7nlhbbku5Z3ZXVpX2J0bueahOW8leeUqOaUvuWcqOW6lemDqFxuLy8g5Li76KaB5pivYnV0dG9uLndldWlfYnRu5Zyod2V1aV9idG5fcGxhaW7kuIvph43lhplib3JkZXItd2lkdGhcblxuLndldWlfYnRuIHtcbiAgICAmLndldWlfYnRuX21pbmkge1xuICAgICAgICBsaW5lLWhlaWdodDogQHdldWlCdG5NaW5pSGVpZ2h0O1xuICAgICAgICBmb250LXNpemU6IEB3ZXVpQnRuTWluaUZvbnRTaXplO1xuICAgICAgICBwYWRkaW5nOiAwIC43NWVtO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxufVxuXG5idXR0b24sIGlucHV0IHtcbiAgICAmLndldWlfYnRuIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJvcmRlci13aWR0aDogMDtcbiAgICAgICAgb3V0bGluZTogMDtcbiAgICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgIG91dGxpbmU6IDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJi53ZXVpX2J0bl9pbmxpbmUsJi53ZXVpX2J0bl9taW5pIHtcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgfVxufVxuXG4vKmdhcCBiZXR3ZWVuIGJ0biovXG4ud2V1aV9idG4gKyAud2V1aV9idG4ge1xuICAgIG1hcmdpbi10b3A6IEB3ZXVpQnRuRGVmYXVsdEdhcDtcbn1cblxuLndldWlfYnRuLndldWlfYnRuX2lubGluZSArIC53ZXVpX2J0bi53ZXVpX2J0bl9pbmxpbmUge1xuICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgbWFyZ2luLWxlZnQ6IEB3ZXVpQnRuRGVmYXVsdEdhcDtcbn1cblxuLndldWlfYnRuX2FyZWEge1xuICAgIG1hcmdpbjogQHdldWlDZWxsc01hcmdpblRvcCBAd2V1aUJ0bkRlZmF1bHRHYXAgLjNlbTtcbiAgICAmLndldWlfYnRuX2FyZWFfaW5saW5lIHtcbiAgICAgICAgLXdlYmtpdC1kaXNwbGF5OiBmbGV4O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAud2V1aV9idG4ge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogYXV0bztcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogQHdldWlCdG5EZWZhdWx0R2FwO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAtd2Via2l0LWZsZXg6IDE7XG4gICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBpbXBvcnQgXCJ3ZXVpX2J0bl9nbG9iYWxcIjtcbkBpbXBvcnQgXCJ3ZXVpX2J0bl9kZWZhdWx0XCI7XG5AaW1wb3J0IFwid2V1aV9idG5fcHJpbWFyeVwiO1xuQGltcG9ydCBcIndldWlfYnRuX3dhcm5cIjtcbkBpbXBvcnQgXCJ3ZXVpX2J0bl9kaXNhYmxlZFwiO1xuQGltcG9ydCBcIndldWlfYnRuX3BsYWluXCI7IiwiQGltcG9ydCBcIi4uLy4uL2Jhc2UvZm5cIjtcblxuLndldWlfYnRuIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIHBhZGRpbmctbGVmdDogMTRweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNHB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgZm9udC1zaXplOiBAd2V1aUJ0bkZvbnRTaXplO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6IEB3ZXVpQnRuRm9udENvbG9yO1xuICAgIGxpbmUtaGVpZ2h0OiB1bml0KEB3ZXVpQnRuSGVpZ2h0L0B3ZXVpQnRuRm9udFNpemUpO1xuICAgIGJvcmRlci1yYWRpdXM6IEB3ZXVpQnRuQm9yZGVyUmFkaXVzO1xuICAgIC5zZXRUYXBDb2xvcigpO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgJjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgICB3aWR0aDogMjAwJTtcbiAgICAgICAgaGVpZ2h0OiAyMDAlO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAuMik7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoLjUpO1xuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IEB3ZXVpQnRuQm9yZGVyUmFkaXVzKjI7XG4gICAgfVxuXG4gICAgJi53ZXVpX2J0bl9pbmxpbmUge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxufSIsIi8vIHRhcGNvbG9yXG4uc2V0VGFwQ29sb3IoQGM6cmdiYSgwLDAsMCwwKSkge1xuICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogQGM7XG59XG5cbi8vdXNlciBhY3Rpb25cbi5ub19zZWxlY3QoKSB7XG4gICAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLWtodG1sLXVzZXItc2VsZWN0OiBub25lO1xuICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG5cblxuXG5cblxuXG4iLCJAaW1wb3J0IFwiLi4vLi4vYmFzZS9mblwiO1xuXG4ud2V1aV9idG5fZGVmYXVsdCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHdldWlCdG5EZWZhdWx0Qmc7XG4gICAgY29sb3I6IEB3ZXVpQnRuRGVmYXVsdEZvbnRDb2xvcjtcbiAgICAmOm5vdCgud2V1aV9idG5fZGlzYWJsZWQpOnZpc2l0ZWQge1xuICAgICAgICBjb2xvcjogQHdldWlCdG5EZWZhdWx0Rm9udENvbG9yO1xuICAgIH1cbiAgICAmOm5vdCgud2V1aV9idG5fZGlzYWJsZWQpOmFjdGl2ZSB7XG4gICAgICAgIGNvbG9yOiBAd2V1aUJ0bkRlZmF1bHRBY3RpdmVGb250Q29sb3I7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IEB3ZXVpQnRuRGVmYXVsdEFjdGl2ZUJnO1xuICAgIH1cbn0iLCJAaW1wb3J0IFwiLi4vLi4vYmFzZS9mblwiO1xuXG4ud2V1aV9idG5fcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHdldWlCdG5QcmltYXJ5Qmc7XG4gICAgJjpub3QoLndldWlfYnRuX2Rpc2FibGVkKTp2aXNpdGVkIHtcbiAgICAgICAgY29sb3I6IEB3ZXVpQnRuRm9udENvbG9yO1xuICAgIH1cbiAgICAmOm5vdCgud2V1aV9idG5fZGlzYWJsZWQpOmFjdGl2ZSB7XG4gICAgICAgIGNvbG9yOiBAd2V1aUJ0bkFjdGl2ZUZvbnRDb2xvcjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQHdldWlCdG5QcmltYXJ5QWN0aXZlQmc7XG4gICAgfVxufVxuIiwiQGltcG9ydCBcIi4uLy4uL2Jhc2UvZm5cIjtcblxuLndldWlfYnRuX3dhcm4ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IEB3ZXVpQnRuV2FybkJnO1xuICAgICY6bm90KC53ZXVpX2J0bl9kaXNhYmxlZCk6dmlzaXRlZCB7XG4gICAgICAgIGNvbG9yOiBAd2V1aUJ0bkZvbnRDb2xvcjtcbiAgICB9XG4gICAgJjpub3QoLndldWlfYnRuX2Rpc2FibGVkKTphY3RpdmUge1xuICAgICAgICBjb2xvcjogQHdldWlCdG5BY3RpdmVGb250Q29sb3I7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IEB3ZXVpQnRuV2FybkFjdGl2ZUJnO1xuICAgIH1cbn1cbiIsIkBpbXBvcnQgXCIuLi8uLi9iYXNlL2ZuXCI7XG5cbi53ZXVpX2J0bl9kaXNhYmxlZCB7XG4gICAgY29sb3I6IEB3ZXVpQnRuRGlzYWJsZWRGb250Q29sb3I7XG4gICAgJi53ZXVpX2J0bl9kZWZhdWx0IHtcbiAgICAgICAgY29sb3I6IEB3ZXVpQnRuRGVmYXVsdERpc2FibGVkRm9udENvbG9yO1xuICAgIH1cbn1cbiIsIkBpbXBvcnQgXCIuLi8uLi9iYXNlL2ZuXCI7XG5cbi53ZXVpX2J0bl9wbGFpbl9wcmltYXJ5IHtcbiAgICBjb2xvcjogQHdldWlCdG5QcmltYXJ5Qmc7XG4gICAgYm9yZGVyOiAxcHggc29saWQgQHdldWlCdG5QcmltYXJ5Qmc7XG4gICAgYnV0dG9uJiwgaW5wdXQmIHtcbiAgICAgICAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIH1cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogQHdldWlCdG5QcmltYXJ5QWN0aXZlQmc7XG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgICBib3JkZXItd2lkdGg6IDA7XG4gICAgfVxufVxuXG4ud2V1aV9idG5fcGxhaW5fZGVmYXVsdCB7XG4gICAgY29sb3I6ICM1QTVBNUE7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzVBNUE1QTtcbiAgICBidXR0b24mLCBpbnB1dCYge1xuICAgICAgICBib3JkZXItd2lkdGg6IDFweDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgICBib3JkZXItd2lkdGg6IDA7XG4gICAgfVxufSIsIkBpbXBvcnQgXCIuLi8uLi9iYXNlL2ZuXCI7XG5cbi53ZXVpX2NlbGwge1xuICAgIC8vIG9uZXB4XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6YmVmb3JlIHtcbiAgICAgICAgLnNldFRvcExpbmUoQHdldWlDZWxsQm9yZGVyQ29sb3IpO1xuICAgICAgICBsZWZ0OiBAd2V1aUNlbGxHYXBIO1xuICAgIH1cbiAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLndldWlfY2VsbHMge1xuICAgIG1hcmdpbi10b3A6IEB3ZXVpQ2VsbHNNYXJnaW5Ub3A7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHdldWlDZWxsQmc7XG4gICAgbGluZS1oZWlnaHQ6IEB3ZXVpQ2VsbExpbmVIZWlnaHQ7XG4gICAgZm9udC1zaXplOiBAd2V1aUNlbGxGb250U2l6ZTsgLy9jZWxs5Lit6Ze05pyJ5pWI6auY5bqmMjNweO+8jOi3n+WuouaIt+err+m7mOiupOWbvuagh+WwuuWvuOS4gOiHtFxuXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgLy/lm6DkuLrmr4/kuKpjZWxs55qEYm9yZGVy5L2/55SoYmVmb3Jl5YWD57SgbGVmdOaQnueahO+8jGll5LiL5Lyq5YWD57Sg55qEY29udGFpbmluZyBibG9ja+S8sOiuoei3n+agh+WHhuS4jeWQjO+8jOWcqGNlbGzkuIrnlKhvaOS4jeeUn+aViFxuXG4gICAgLy8gb25lcHhcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjpiZWZvcmUge1xuICAgICAgICAuc2V0VG9wTGluZShAd2V1aUNlbGxCb3JkZXJDb2xvcik7XG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgICAuc2V0Qm90dG9tTGluZShAd2V1aUNlbGxCb3JkZXJDb2xvcik7XG4gICAgfVxufVxuXG4ud2V1aV9jZWxsc190aXRsZSB7XG4gICAgbWFyZ2luLXRvcDogLjc3ZW07IC8vIDE1cHggLSDooYzpq5hcbiAgICBtYXJnaW4tYm90dG9tOiAuM2VtOyAvLyA4cHggLSDooYzpq5hcbiAgICBwYWRkaW5nLWxlZnQ6IEB3ZXVpQ2VsbEdhcEg7XG4gICAgcGFkZGluZy1yaWdodDogQHdldWlDZWxsR2FwSDtcbiAgICBjb2xvcjogQGdsb2JhbFRleHRDb2xvcjtcbiAgICBmb250LXNpemU6IEB3ZXVpQ2VsbFRpcHNGb250U2l6ZTtcblxuICAgICYgKyAud2V1aV9jZWxscyB7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgfVxufVxuXG4ud2V1aV9jZWxsc190aXBzIHtcbiAgICBtYXJnaW4tdG9wOiAuM2VtOyAvLyA4cHggLSDooYzpq5hcbiAgICBjb2xvcjogQGdsb2JhbFRleHRDb2xvcjtcbiAgICBwYWRkaW5nLWxlZnQ6IEB3ZXVpQ2VsbEdhcEg7XG4gICAgcGFkZGluZy1yaWdodDogQHdldWlDZWxsR2FwSDtcbiAgICBmb250LXNpemU6IEB3ZXVpQ2VsbFRpcHNGb250U2l6ZTtcbn1cblxuLndldWlfY2VsbCB7XG4gICAgcGFkZGluZzogQHdldWlDZWxsR2FwViBAd2V1aUNlbGxHYXBIO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgLy/ov5nkuKrmmK/kuLrkuoblhbzlrrljZWxsc+WuueWZqG9uZXB45pa55qGI6KKrYmVmb3Jl5oyh5L2P6ICM5YGa55qEXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ud2V1aV9jZWxsX2Z0IHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBjb2xvcjogQGdsb2JhbFRleHRDb2xvcjtcbn1cblxuLndldWlfY2VsbF9wcmltYXJ5IHtcbiAgICBmbGV4OiAxO1xufSIsIlxuLnNldFRvcExpbmUoQGM6ICNDN0M3QzcpIHtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIEBjO1xuICAgIGNvbG9yOiBAYztcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XG4gICAgdHJhbnNmb3JtOiBzY2FsZVkoMC41KTtcbn1cblxuLnNldEJvdHRvbUxpbmUoQGM6ICNDN0M3QzcpIHtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIEBjO1xuICAgIGNvbG9yOiBAYztcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDEwMCU7XG4gICAgdHJhbnNmb3JtOiBzY2FsZVkoMC41KTtcbn1cblxuLnNldExlZnRMaW5lKEBjOiAjQzdDN0M3KSB7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxcHg7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgQGM7XG4gICAgY29sb3I6IEBjO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IDAgMDtcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCgwLjUpO1xufVxuXG4uc2V0UmlnaHRMaW5lKEBjOiAjQzdDN0M3KSB7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogMXB4O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCBAYztcbiAgICBjb2xvcjogQGM7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMCAxMDAlO1xuICAgIHRyYW5zZm9ybTogc2NhbGVYKDAuNSk7XG59IiwiQGltcG9ydCBcIi4uLy4uL2Jhc2UvZm5cIjtcblxuLndldWlfY2VsbHNfYWNjZXNzIHtcbiAgICAud2V1aV9jZWxsOm5vdCgubm9fYWNjZXNzKSB7XG4gICAgICAgIC8vIOWcqGNlbGxfYWNjZXNz5ZKM5YW25a6D57G75Z6L55qEY2VsbOa3t+edgOeUqOeahOWcuuaZr+S4i++8jOWFtuWug2NlbGzopoHliqBub19hY2Nlc3PvvIzpgb/lhY3mnInngrnlh7vmgIFcbiAgICAgICAgLnNldFRhcENvbG9yO1xuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUNFQ0VDO1xuICAgICAgICB9XG4gICAgfVxuICAgIGEud2V1aV9jZWxsIHtcbiAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgfVxuICAgIC53ZXVpX2NlbGxfZnQge1xuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgICAgICAgLnNldEFycm93X1dhcChyaWdodCwgNnB4LCAjQzhDOENELCAycHgpO1xuICAgICAgICAgICAgdG9wOiAtMXB4O1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6LjNlbTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi8vIGNzczIgYXJyb3dcbi5hcnJvdyhAYm9yZGVyV2lkdGgsIEBib3JkZXJDb2xvcikge1xuICAgIC5zZXRBcnJvd1dpZHRoKEBib3JkZXJXaWR0aCk7XG4gICAgLnNldEFycm93Q29sb3IoQGJvcmRlckNvbG9yKTtcbn1cblxuLnNldEFycm93Q29sb3IoQGJvcmRlckNvbG9yKSB7XG4gICAgJi5hcnJvd190IHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogQGJvcmRlckNvbG9yO1xuICAgIH1cbiAgICAmLmFycm93X3Ige1xuICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogQGJvcmRlckNvbG9yO1xuICAgIH1cbiAgICAmLmFycm93X2Ige1xuICAgICAgICBib3JkZXItdG9wLWNvbG9yOiBAYm9yZGVyQ29sb3I7XG4gICAgfVxuICAgICYuYXJyb3dfbCB7XG4gICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogQGJvcmRlckNvbG9yO1xuICAgIH1cbn1cblxuLnNldEFycm93V2lkdGgoQGJvcmRlcldpZHRoKSB7XG4gICAgYm9yZGVyLXdpZHRoOiBAYm9yZGVyV2lkdGg7XG59XG5cbi5zZXRBcnJvdyhAZGlyZWN0aW9uLCBAYm9yZGVyV2lkdGgsIEBib3JkZXJDb2xvcikgd2hlbiAoQGRpcmVjdGlvbiA9IHRvcCkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMDtcbiAgICBoZWlnaHQ6IDA7XG4gICAgYm9yZGVyLXdpZHRoOiBAYm9yZGVyV2lkdGg7XG4gICAgYm9yZGVyLXN0eWxlOiBkYXNoZWQ7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcblxuICAgIC5hcnJvd190KEBib3JkZXJDb2xvcik7XG59XG5cbi5zZXRBcnJvdyhAZGlyZWN0aW9uLCBAYm9yZGVyV2lkdGgsIEBib3JkZXJDb2xvcikgd2hlbiAoQGRpcmVjdGlvbiA9IHJpZ2h0KSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgICBib3JkZXItd2lkdGg6IEBib3JkZXJXaWR0aDtcbiAgICBib3JkZXItc3R5bGU6IGRhc2hlZDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIC5hcnJvd19yKEBib3JkZXJDb2xvcik7XG59XG5cbi5zZXRBcnJvdyhAZGlyZWN0aW9uLCBAYm9yZGVyV2lkdGgsIEBib3JkZXJDb2xvcikgd2hlbiAoQGRpcmVjdGlvbiA9IGJvdHRvbSkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMDtcbiAgICBoZWlnaHQ6IDA7XG4gICAgYm9yZGVyLXdpZHRoOiBAYm9yZGVyV2lkdGg7XG4gICAgYm9yZGVyLXN0eWxlOiBkYXNoZWQ7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAuYXJyb3dfYihAYm9yZGVyQ29sb3IpO1xufVxuXG4uc2V0QXJyb3coQGRpcmVjdGlvbiwgQGJvcmRlcldpZHRoLCBAYm9yZGVyQ29sb3IpIHdoZW4gKEBkaXJlY3Rpb24gPSBsZWZ0KSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgICBib3JkZXItd2lkdGg6IEBib3JkZXJXaWR0aDtcbiAgICBib3JkZXItc3R5bGU6IGRhc2hlZDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIC5hcnJvd19sKEBib3JkZXJDb2xvcik7XG59XG5cbi5hcnJvd190KEBjKSB7XG4gICAgYm9yZGVyLXRvcC13aWR0aDogMDtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiBAYztcbiAgICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcbn1cblxuLmFycm93X3IoQGMpIHtcbiAgICBib3JkZXItcmlnaHQtd2lkdGg6IDA7XG4gICAgYm9yZGVyLWxlZnQtY29sb3I6IEBjO1xuICAgIGJvcmRlci1sZWZ0LXN0eWxlOiBzb2xpZDtcbn1cblxuLmFycm93X2IoQGMpIHtcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAwO1xuICAgIGJvcmRlci10b3AtY29sb3I6IEBjO1xuICAgIGJvcmRlci10b3Atc3R5bGU6IHNvbGlkO1xufVxuXG4uYXJyb3dfbChAYykge1xuICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwO1xuICAgIGJvcmRlci1yaWdodC1jb2xvcjogQGM7XG4gICAgYm9yZGVyLXJpZ2h0LXN0eWxlOiBzb2xpZDtcbn1cblxuLy8gY3NzMyBhcnJvd1xuLnNldEFycm93V2lkdGhfV2FwKEBib3JkZXJXaWR0aCkge1xuICAgIGJvcmRlci13aWR0aDogQGJvcmRlcldpZHRoIEBib3JkZXJXaWR0aCAwIDA7XG59XG5cbi5zZXRBcnJvd1NpemVfV2FwKEBhcnJvd3NpemUpIHtcbiAgICBoZWlnaHQ6IEBhcnJvd3NpemU7XG4gICAgd2lkdGg6IEBhcnJvd3NpemU7XG59XG5cbi5zZXRBcnJvd19XYXAoQGRpcmVjdGlvbiwgQGFycm93c2l6ZSwgQGJvcmRlckNvbG9yLEBib3JkZXJXaWR0aCkgd2hlbiAoQGRpcmVjdGlvbiA9IHRvcCkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAudHJhbnNmb3JtKHRyYW5zbGF0ZSgwLCAwKSByb3RhdGUoLTQ1ZGVnKSk7XG4gICAgLnNldEFycm93U2l6ZV9XYXAoQGFycm93c2l6ZSk7XG4gICAgLnNldEFycm93V2lkdGhfV2FwKEBib3JkZXJXaWR0aCk7XG4gICAgYm9yZGVyLWNvbG9yOiBAYm9yZGVyQ29sb3I7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbn1cblxuLnNldEFycm93X1dhcChAZGlyZWN0aW9uLCBAYXJyb3dzaXplLCBAYm9yZGVyQ29sb3IsQGJvcmRlcldpZHRoKSB3aGVuIChAZGlyZWN0aW9uID0gcmlnaHQpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgIC5zZXRBcnJvd1NpemVfV2FwKEBhcnJvd3NpemUpO1xuICAgIC5zZXRBcnJvd1dpZHRoX1dhcChAYm9yZGVyV2lkdGgpO1xuICAgIGJvcmRlci1jb2xvcjogQGJvcmRlckNvbG9yO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogLTJweDtcbn1cblxuLnNldEFycm93X1dhcChAZGlyZWN0aW9uLCBAYXJyb3dzaXplLCBAYm9yZGVyQ29sb3IsQGJvcmRlcldpZHRoKSB3aGVuIChAZGlyZWN0aW9uID0gZG93bikge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpO1xuICAgIC5zZXRBcnJvd1NpemVfV2FwKEBhcnJvd3NpemUpO1xuICAgIC5zZXRBcnJvd1dpZHRoX1dhcChAYm9yZGVyV2lkdGgpO1xuICAgIGJvcmRlci1jb2xvcjogQGJvcmRlckNvbG9yO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG5cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtM3B4O1xufVxuXG4uc2V0QXJyb3dfV2FwKEBkaXJlY3Rpb24sIEBhcnJvd3NpemUsIEBib3JkZXJDb2xvcixAYm9yZGVyV2lkdGgpIHdoZW4gKEBkaXJlY3Rpb24gPSBsZWZ0KSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC0xMzVkZWcpO1xuICAgIC5zZXRBcnJvd1NpemVfV2FwKEBhcnJvd3NpemUpO1xuICAgIC5zZXRBcnJvd1dpZHRoX1dhcChAYm9yZGVyV2lkdGgpO1xuICAgIGJvcmRlci1jb2xvcjogQGJvcmRlckNvbG9yO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG5cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtMnB4O1xufSIsIkBpbXBvcnQgXCIuLi8uLi8uLi9iYXNlL2ZuXCI7XG5cbi53ZXVpX2NoZWNrX2xhYmVsIHtcbiAgICAuc2V0VGFwQ29sb3IoKTtcbn1cblxuLndldWlfY2hlY2t7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC05OTk5ZW07XG59XG4iLCJAaW1wb3J0IFwiLi4vLi4vLi4vYmFzZS9mblwiO1xuXG4vLyBtZXRob2QyIGFjY2Vzc2JpbGl0eVxuLndldWlfY2VsbHNfcmFkaW97XG4gICAgLndldWlfY2VsbF9mdCB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogQHdldWlDZWxsSW5uZXJHYXBIO1xuICAgIH1cbiAgICAud2V1aV9jZWxsIHtcbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0VDRUNFQztcbiAgICAgICAgfVxuICAgIH1cbn1cbi53ZXVpX2NoZWNrIHtcbiAgICAvLyByYWRpb1xuICAgIC53ZXVpX2NlbGxzX3JhZGlvICYge1xuICAgICAgICAmOmNoZWNrZWQge1xuICAgICAgICAgICAgJiArIC53ZXVpX2ljb25fY2hlY2tlZCB7XG4gICAgICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAnXFxFQTA4JztcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMwOUJCMDc7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiQGltcG9ydCBcIi4uLy4uLy4uL2Jhc2UvZm5cIjtcblxuLndldWlfY2VsbHNfY2hlY2tib3gge1xuICAgIC53ZXVpX2NlbGxfaGQge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiBAd2V1aUNlbGxJbm5lckdhcEg7XG4gICAgfVxuICAgIC53ZXVpX2NlbGwge1xuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUNFQ0VDO1xuICAgICAgICB9XG4gICAgfVxuICAgIC53ZXVpX2ljb25fY2hlY2tlZCB7XG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6ICdcXEVBMDEnO1xuICAgICAgICAgICAgY29sb3I6ICNDOUM5Qzk7XG4gICAgICAgICAgICBmb250LXNpemU6IDIzcHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gbWV0aG9kMiBhY2Nlc3NiaWxpdHlcbi53ZXVpX2NoZWNrIHtcbiAgICAvLyBjaGVja2JveFxuICAgIC53ZXVpX2NlbGxzX2NoZWNrYm94ICYge1xuICAgICAgICAmOmNoZWNrZWQge1xuICAgICAgICAgICAgJiArIC53ZXVpX2ljb25fY2hlY2tlZCB7XG4gICAgICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAnXFxFQTA2JztcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMwOUJCMDc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSIsIkBpbXBvcnQgXCIuLi8uLi8uLi9iYXNlL2ZuXCI7XG5cbi53ZXVpX2xhYmVse1xuICBkaXNwbGF5OmJsb2NrO1xuICB3aWR0aDozZW07XG59XG4ud2V1aV9pbnB1dCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiAwO1xuICAgIG91dGxpbmU6IDA7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBoZWlnaHQ6IHVuaXQoQHdldWlDZWxsTGluZUhlaWdodCwgZW0pO1xuICAgIGxpbmUtaGVpZ2h0OiBAd2V1aUNlbGxMaW5lSGVpZ2h0O1xuXG4gICAgLy8gaGlkZXMgdGhlIHNwaW4tYnV0dG9uXG4gICAgJjo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiwgJjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbntcbiAgICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxufVxuLndldWlfdGV4dGFyZWEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJvcmRlcjogMDtcbiAgICByZXNpemU6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gICAgb3V0bGluZTogMDtcbn1cblxuLndldWlfdGV4dGFyZWFfY291bnRlcntcbiAgICBjb2xvcjogQGdsb2JhbERlc2NDb2xvcjtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAud2V1aV9jZWxsX3dhcm4gJntcbiAgICAgICAgY29sb3I6IEBnbG9iYWxXYXJuQ29sb3I7XG4gICAgfVxufVxuXG4ud2V1aV90b3B0aXBzIHtcbiAgICBkaXNwbGF5Om5vbmU7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRvcDogMDtcbiAgICBsaW5lLWhlaWdodDogMi4zO1xuICAgIGZvbnQtc2l6ZToxNHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjb2xvcjogI0ZGRjtcbiAgICB6LWluZGV4OiAyO1xuICAgICYud2V1aV93YXJuIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQGdsb2JhbFdhcm5Db2xvcjtcbiAgICB9XG59XG4ud2V1aV9jZWxsc19mb3JtIHtcbiAgICAud2V1aV9jZWxsX3dhcm57XG4gICAgICAgIGNvbG9yOkBnbG9iYWxXYXJuQ29sb3I7XG4gICAgICAgIC53ZXVpX2ljb25fd2FybntkaXNwbGF5OmlubGluZS1ibG9jazt9XG4gICAgfVxuICAgIC53ZXVpX2NlbGxfaGQge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAuM2VtO1xuICAgIH1cbiAgICAud2V1aV9jZWxsX2Z0e2ZvbnQtc2l6ZTowO31cbiAgICAud2V1aV9pY29uX3dhcm57XG4gICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICB9XG59XG4iLCJAaW1wb3J0IFwiLi4vLi4vLi4vYmFzZS9mblwiO1xuXG4ud2V1aV9jZWxsX3NlbGVjdCB7XG4gICAgcGFkZGluZzogMDtcbiAgICAud2V1aV9zZWxlY3Qge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xuICAgIH1cbiAgICAud2V1aV9hY2Nlc3NfaWNvbiB7XG5cbiAgICB9XG4gICAgLndldWlfY2VsbF9iZHtcbiAgICAgICAgJjphZnRlcntcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgICAgICAgLnNldEFycm93X1dhcChyaWdodCwgNnB4LCAjQzhDOENELCAycHgpO1xuXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIHJpZ2h0OiBAd2V1aUNlbGxHYXBIO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogLTNweDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLndldWlfc2VsZWN0IHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgYm9yZGVyOiAwO1xuICAgIG91dGxpbmU6IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIGhlaWdodDogQHdldWlDZWxsSGVpZ2h0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxO1xuICAgIHBhZGRpbmctbGVmdDogQHdldWlDZWxsR2FwSDtcbn1cbiIsIkBpbXBvcnQgXCIuLi8uLi8uLi9iYXNlL2ZuXCI7XG5AaW1wb3J0IFwiLi93ZXVpX3NlbGVjdFwiO1xuXG4ud2V1aV9zZWxlY3RfYmVmb3JlIHtcbiAgICBwYWRkaW5nLXJpZ2h0OkB3ZXVpQ2VsbEdhcEg7XG4gICAgLndldWlfc2VsZWN0e3dpZHRoOmF1dG87fVxuICAgIC53ZXVpX2NlbGxfaGQge1xuICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAuc2V0UmlnaHRMaW5lKEB3ZXVpQ2VsbEJvcmRlckNvbG9yKTtcbiAgICAgICAgfVxuICAgICAgICAmOmJlZm9yZXtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgICAgICAgLnNldEFycm93X1dhcChyaWdodCwgNnB4LCAjQzhDOENELCAycHgpO1xuXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIHJpZ2h0OiBAd2V1aUNlbGxHYXBIO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogLTNweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAud2V1aV9jZWxsX2JkIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OkB3ZXVpQ2VsbEdhcEg7XG4gICAgICAgICY6YWZ0ZXJ7XG4gICAgICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgIH1cbiAgICB9XG59IiwiQGltcG9ydCBcIi4uLy4uLy4uL2Jhc2UvZm5cIjtcbkBpbXBvcnQgXCIuL3dldWlfc2VsZWN0XCI7XG5cbi53ZXVpX3NlbGVjdF9hZnRlciB7XG4gICAgcGFkZGluZy1sZWZ0OkB3ZXVpQ2VsbEdhcEg7XG59IiwiQGltcG9ydCBcIi4uLy4uLy4uL2Jhc2UvZm5cIjtcblxuLndldWlfdmNvZGUge1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgLndldWlfY2VsbF9mdCB7XG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXB4O1xuICAgICAgICAgICAgaGVpZ2h0OiBAd2V1aUNlbGxIZWlnaHQ7XG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgICB9XG4gICAgfVxufSIsIkBpbXBvcnQgXCIuLi8uLi9iYXNlL2ZuXCI7XG5Ad2V1aVN3aXRjaEhlaWdodDogMzJweDtcbi53ZXVpX2NlbGxfc3dpdGNoe1xuICAgIHBhZGRpbmctdG9wOiAoQHdldWlDZWxsSGVpZ2h0IC0gQHdldWlTd2l0Y2hIZWlnaHQpIC8gMjtcbiAgICBwYWRkaW5nLWJvdHRvbTogKEB3ZXVpQ2VsbEhlaWdodCAtIEB3ZXVpU3dpdGNoSGVpZ2h0KSAvIDI7XG59XG4ud2V1aV9zd2l0Y2h7XG4gICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDUycHg7XG4gICAgaGVpZ2h0OiBAd2V1aVN3aXRjaEhlaWdodDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjREZERkRGO1xuICAgIG91dGxpbmU6IDA7XG4gICAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGJhY2tncm91bmQ6ICNERkRGREY7XG4gICAgJjpiZWZvcmV7XG4gICAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgIGhlaWdodDogQHdldWlTd2l0Y2hIZWlnaHQgLSAyO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkRGREZEO1xuICAgICAgICB0cmFuc2l0aW9uOnRyYW5zZm9ybSAuM3M7XG4gICAgfVxuICAgICY6YWZ0ZXJ7XG4gICAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IEB3ZXVpU3dpdGNoSGVpZ2h0IC0gMjtcbiAgICAgICAgaGVpZ2h0OiBAd2V1aVN3aXRjaEhlaWdodCAtIDI7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgICAgIHRyYW5zaXRpb246dHJhbnNmb3JtIC4zcztcbiAgICB9XG5cbiAgICAmOmNoZWNrZWR7XG4gICAgICAgIGJvcmRlci1jb2xvcjogIzA0QkUwMjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzA0QkUwMjtcbiAgICAgICAgJjpiZWZvcmV7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xuICAgICAgICB9XG4gICAgICAgICY6YWZ0ZXJ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgICAgIH1cbiAgICB9XG59IiwiQGltcG9ydCBcIi4uLy4uL2Jhc2UvZm5cIjtcblxuQHdldWlVcGxvYWRlckJvcmRlckNvbG9yOiNEOUQ5RDk7XG5Ad2V1aVVwbG9hZGVyQWN0aXZlQm9yZGVyQ29sb3I6Izk5OTk5OTtcbkB3ZXVpVXBsb2FkZXJGaWxlU3BhY2luZzogOXB4O1xuQHdldWlVcGxvYWRlclNpemU6IDc5cHg7XG5Ad2V1aVVwbG9hZGVyQm9yZGVyV2lkdGg6IDFweDtcblxuLndldWlfdXBsb2FkZXJ7fVxuLndldWlfdXBsb2FkZXJfaGR7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgLndldWlfY2VsbF9mdHtcbiAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgfVxufVxuLndldWlfdXBsb2FkZXJfYmR7XG4gICAgbWFyZ2luLWJvdHRvbTogQHdldWlDZWxsR2FwSCAtIChAd2V1aUNlbGxHYXBWICsgQHdldWlVcGxvYWRlckZpbGVTcGFjaW5nKTtcbiAgICBtYXJnaW4tcmlnaHQ6IC1Ad2V1aVVwbG9hZGVyRmlsZVNwYWNpbmc7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLndldWlfdXBsb2FkZXJfZmlsZXN7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbn1cbi53ZXVpX3VwbG9hZGVyX2ZpbGV7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLXJpZ2h0OiBAd2V1aVVwbG9hZGVyRmlsZVNwYWNpbmc7XG4gICAgbWFyZ2luLWJvdHRvbTogQHdldWlVcGxvYWRlckZpbGVTcGFjaW5nO1xuICAgIHdpZHRoOiBAd2V1aVVwbG9hZGVyU2l6ZTtcbiAgICBoZWlnaHQ6IEB3ZXVpVXBsb2FkZXJTaXplO1xuICAgIGJhY2tncm91bmQ6IG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG4ud2V1aV91cGxvYWRlcl9zdGF0dXN7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6YmVmb3Jle1xuICAgICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjUpO1xuICAgIH1cbiAgICAud2V1aV91cGxvYWRlcl9zdGF0dXNfY29udGVudHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICAgfVxuICAgIC53ZXVpX2ljb25fd2FybntcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxufVxuXG4ud2V1aV91cGxvYWRlcl9pbnB1dF93cnB7XG4gICAgZmxvYXQ6bGVmdDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luLXJpZ2h0OiBAd2V1aVVwbG9hZGVyRmlsZVNwYWNpbmc7XG4gICAgbWFyZ2luLWJvdHRvbTogQHdldWlVcGxvYWRlckZpbGVTcGFjaW5nO1xuICAgIHdpZHRoOiBAd2V1aVVwbG9hZGVyU2l6ZSAtIEB3ZXVpVXBsb2FkZXJCb3JkZXJXaWR0aCAqIDI7XG4gICAgaGVpZ2h0OiBAd2V1aVVwbG9hZGVyU2l6ZSAtIEB3ZXVpVXBsb2FkZXJCb3JkZXJXaWR0aCAqIDI7XG4gICAgYm9yZGVyOiBAd2V1aVVwbG9hZGVyQm9yZGVyV2lkdGggc29saWQgQHdldWlVcGxvYWRlckJvcmRlckNvbG9yO1xuICAgICY6YmVmb3JlLCAmOmFmdGVye1xuICAgICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQHdldWlVcGxvYWRlckJvcmRlckNvbG9yO1xuICAgIH1cbiAgICAmOmJlZm9yZXtcbiAgICAgICAgd2lkdGg6IEB3ZXVpVXBsb2FkZXJCb3JkZXJXaWR0aCArIDE7XG4gICAgICAgIGhlaWdodDogQHdldWlVcGxvYWRlclNpemUgLyAyO1xuICAgIH1cbiAgICAmOmFmdGVye1xuICAgICAgICB3aWR0aDogQHdldWlVcGxvYWRlclNpemUgLyAyO1xuICAgICAgICBoZWlnaHQ6IEB3ZXVpVXBsb2FkZXJCb3JkZXJXaWR0aCArIDE7XG4gICAgfVxuICAgICY6YWN0aXZle1xuICAgICAgICBib3JkZXItY29sb3I6IEB3ZXVpVXBsb2FkZXJBY3RpdmVCb3JkZXJDb2xvcjtcbiAgICAgICAgJjpiZWZvcmUsICY6YWZ0ZXJ7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAd2V1aVVwbG9hZGVyQWN0aXZlQm9yZGVyQ29sb3I7XG4gICAgICAgIH1cbiAgICB9XG59XG4ud2V1aV91cGxvYWRlcl9pbnB1dHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG59IiwiQGltcG9ydCBcIi4uLy4uL2Jhc2UvZm5cIjtcbkBpbXBvcnQgXCIuLi93ZXVpX2J1dHRvbi93ZXVpX2J1dHRvblwiO1xuXG4ud2V1aV9tc2cge1xuICAgIHBhZGRpbmctdG9wOiBAd2V1aU1zZ1BhZGRpbmdUb3A7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgLndldWlfaWNvbl9hcmVhIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogQHdldWlNc2dJY29uR2FwO1xuICAgIH1cblxuICAgIC53ZXVpX3RleHRfYXJlYSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IEB3ZXVpTXNnVGV4dEdhcDtcbiAgICAgICAgcGFkZGluZzowIDIwcHg7XG4gICAgfVxuICAgIC53ZXVpX21zZ190aXRsZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IEB3ZXVpTXNnVGl0bGVHYXA7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICB9XG4gICAgLndldWlfbXNnX2Rlc2Mge1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGNvbG9yOiBAZ2xvYmFsVGV4dENvbG9yO1xuICAgIH1cblxuICAgIC53ZXVpX29wcl9hcmVhIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogQHdldWlNc2dPcHJHYXA7XG4gICAgfVxuXG4gICAgLndldWlfZXh0cmFfYXJlYSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IEB3ZXVpTXNnRXh0cmFBcmVhR2FwO1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGNvbG9yOiBAZ2xvYmFsVGV4dENvbG9yO1xuICAgICAgICBhe2NvbG9yOiBAZ2xvYmFsTGlua0NvbG9yO31cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4taGVpZ2h0OiBAd2V1aU1zZ0V4dHJhQXJlYU9mTWluSGVpZ2h0KSB7XG4gICAgLndldWlfZXh0cmFfYXJlYSB7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbn0iLCJAaW1wb3J0IFwiLi4vLi4vYmFzZS9mblwiO1xuXG4ud2V1aV9hcnRpY2xlIHtcbiAgICBwYWRkaW5nOiAyMHB4IDE1cHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIHNlY3Rpb24ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcbiAgICB9XG4gICAgaDEge1xuICAgICAgICBmb250LXNpemU6IDE3cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OjQwMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjc1ZW07XG4gICAgfVxuICAgIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBmb250LXdlaWdodDo0MDA7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IC4zZW07XG4gICAgfVxuICAgIGgzIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6NDAwO1xuICAgICAgICBmb250LXNpemU6IDE1cHg7XG4gICAgfVxufSIsIkBpbXBvcnQgXCIuLi8uLi9iYXNlL2ZuXCI7XG5cbi53ZXVpX3Byb2dyZXNzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi53ZXVpX3Byb2dyZXNzX2JhciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHdldWlQcm9ncmVzc0JnO1xuICAgIGhlaWdodDogQHdldWlQcm9ncmVzc0hlaWdodDtcbiAgICBmbGV4OiAxO1xufVxuXG4ud2V1aV9wcm9ncmVzc19pbm5lcl9iYXIge1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAd2V1aVByb2dyZXNzQ29sb3I7XG59XG5cbi53ZXVpX3Byb2dyZXNzX29wciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IDE1cHg7XG4gICAgZm9udC1zaXplOiAwO1xufSIsIkBpbXBvcnQgXCIuLi8uLi9iYXNlL2ZuXCI7XG5cbi53ZXVpX2dyaWRzIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgICAgLnNldFRvcExpbmUoQHdldWlHcmlkQm9yZGVyQ29sb3IpO1xuICAgIH1cbiAgICAmOmFmdGVyIHtcbiAgICAgICAgLnNldExlZnRMaW5lKEB3ZXVpR3JpZEJvcmRlckNvbG9yKTtcbiAgICB9XG59XG5cbi53ZXVpX2dyaWQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBwYWRkaW5nOiAyMHB4IDEwcHg7XG4gICAgd2lkdGg6IDEwMCUgLyBAd2V1aUdyaWRDb2x1bW5Db3VudDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgICAuc2V0UmlnaHRMaW5lKEB3ZXVpR3JpZEJvcmRlckNvbG9yKTtcbiAgICAgICAgcmlnaHQ6IC0xcHg7XG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgICAuc2V0Qm90dG9tTGluZShAd2V1aUdyaWRCb3JkZXJDb2xvcik7XG4gICAgfVxuXG4gICAgJjphY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAaXRlbUFjdGl2ZUNvbG9yO1xuICAgIH1cbn1cblxuLndldWlfZ3JpZF9pY29uIHtcbiAgICB3aWR0aDogQHdldWlHcmlkSWNvblNpemU7XG4gICAgaGVpZ2h0OiBAd2V1aUdyaWRJY29uU2l6ZTtcbiAgICBtYXJnaW46IDAgYXV0bztcblxuICAgIGltZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cblxuICAgICYgKyAud2V1aV9ncmlkX2xhYmVse1xuICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgfVxufVxuXG4ud2V1aV9ncmlkX2xhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6IEBnbG9iYWxUaXRsZUNvbG9yO1xuICAgIGZvbnQtc2l6ZTogQHdldWlHcmlkRm9udFNpemU7XG59IiwiQGltcG9ydCBcIi4uLy4uL2Jhc2UvZm5cIjtcblxuQHdldWlEaWFsb2dCYWNrZ3JvdW5kQ29sb3I6ICNGQUZBRkM7XG5Ad2V1aURpYWxvZ0xpbmVDb2xvcjogI0Q1RDVENjtcbkB3ZXVpRGlhbG9nTGlua0NvbG9yOiAjM0NDNTFGO1xuQHdldWlEaWFsb2dMaW5rQWN0aXZlQmM6ICNFRUVFRUU7XG5cbi53ZXVpX2RpYWxvZyB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDEzO1xuICAgIHdpZHRoOiA4NSU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHdldWlEaWFsb2dCYWNrZ3JvdW5kQ29sb3I7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAud2V1aV9kaWFsb2dfY29uZmlybSAmIHtcbiAgICAgICAgLndldWlfZGlhbG9nX2hkIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDEuMmVtIDIwcHggLjVlbTtcbiAgICAgICAgfVxuICAgICAgICAud2V1aV9kaWFsb2dfYmQge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLndldWlfZGlhbG9nX2hkIHtcbiAgICBwYWRkaW5nOiAxLjJlbSAwIC41ZW07XG59XG5cbi53ZXVpX2RpYWxvZ190aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDE3cHg7XG59XG5cbi53ZXVpX2RpYWxvZ19iZCB7XG4gICAgcGFkZGluZzogMCAyMHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBjb2xvcjogQGdsb2JhbFRleHRDb2xvcjtcbn1cblxuLndldWlfZGlhbG9nX2Z0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbGluZS1oZWlnaHQ6IDQycHg7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIGNvbG9yOiBAd2V1aURpYWxvZ0xpbmtDb2xvcjtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAuc2V0VGFwQ29sb3I7XG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IEB3ZXVpRGlhbG9nTGlua0FjdGl2ZUJjO1xuICAgICAgICB9XG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgICAgLnNldFRvcExpbmUoQHdldWlEaWFsb2dMaW5lQ29sb3IpO1xuICAgIH1cbiAgICAud2V1aV9kaWFsb2dfY29uZmlybSAmIHtcbiAgICAgICAgYSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgICAgICAgICAgICAuc2V0TGVmdExpbmUoQHdldWlEaWFsb2dMaW5lQ29sb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4ud2V1aV9idG5fZGlhbG9nIHtcbiAgICAmLmRlZmF1bHQge1xuICAgICAgICBjb2xvcjogIzM1MzUzNTtcbiAgICB9XG4gICAgJi5wcmltYXJ5IHtcbiAgICAgICAgY29sb3I6ICMwQkIyMEM7XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAud2V1aV9kaWFsb2cge1xuICAgICAgICB3aWR0aDogMzUlO1xuICAgIH1cbn1cbiIsIkBpbXBvcnQgXCIuLi8uLi9iYXNlL2ZuXCI7XG5cbi53ZXVpX3RvYXN0IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogMztcbiAgICB3aWR0aDogNy42ZW07XG4gICAgbWluLWhlaWdodDogNy42ZW07XG4gICAgdG9wOiAxODBweDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IC0zLjhlbTtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDQwLCA0MCwgNDAsIDAuNzUpO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgY29sb3I6ICNGRkZGRkY7XG59XG4ud2V1aV9pY29uX3RvYXN0IHtcbiAgICBtYXJnaW46IDIycHggMCAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICY6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJ1xcRUEwOCc7XG4gICAgICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgICAgICBmb250LXNpemU6IDU1cHg7XG4gICAgfVxufVxuLndldWlfdG9hc3RfY29udGVudCB7XG4gICAgbWFyZ2luOiAwIDAgMTVweDtcbn1cblxuLy8gbG9hZGluZyB0b2FzdFxuLndldWlfbG9hZGluZ190b2FzdHtcbiAgICAud2V1aV90b2FzdF9jb250ZW50e1xuICAgICAgbWFyZ2luLXRvcDo2NCU7XG4gICAgICBmb250LXNpemU6MTRweDtcbiAgICB9XG59XG4ud2V1aV9sb2FkaW5ne1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMHB4O1xuICAgIHotaW5kZXg6IDIwMDAwMDAwMDA7XG4gICAgbGVmdDogNTAlO1xuICAgIHRvcDogMzglO1xufVxuLndldWlfbG9hZGluZ19sZWFme1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC0xcHg7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgICAmOmJlZm9yZXtcbiAgICAgICAgY29udGVudDpcIiBcIjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogOC4xNHB4O1xuICAgICAgICBoZWlnaHQ6IDMuMDhweDtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiKDIwOSwgMjA5LCAyMTMpO1xuICAgICAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMDk4MDM5MikgMHB4IDBweCAxcHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDFweDtcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCA1MCUgMHB4O1xuICAgIH1cbiAgICAmXzB7XG4gICAgICAgIGFuaW1hdGlvbjogb3BhY2l0eS02MC0yNS0wLTEyIDEuMjVzIGxpbmVhciBpbmZpbml0ZTtcbiAgICAgICAgJjpiZWZvcmV7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xuICAgICAgICB9XG4gICAgfVxuICAgICZfMXtcbiAgICAgICAgYW5pbWF0aW9uOiBvcGFjaXR5LTYwLTI1LTEtMTIgMS4yNXMgbGluZWFyIGluZmluaXRlO1xuICAgICAgICAmOmJlZm9yZXtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDMwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xuICAgICAgICB9XG4gICAgfVxuICAgICZfMntcbiAgICAgICAgYW5pbWF0aW9uOiBvcGFjaXR5LTYwLTI1LTItMTIgMS4yNXMgbGluZWFyIGluZmluaXRlO1xuICAgICAgICAmOmJlZm9yZXtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDYwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xuICAgICAgICB9XG4gICAgfVxuICAgICZfM3tcbiAgICAgICAgYW5pbWF0aW9uOiBvcGFjaXR5LTYwLTI1LTMtMTIgMS4yNXMgbGluZWFyIGluZmluaXRlO1xuICAgICAgICAmOmJlZm9yZXtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xuICAgICAgICB9XG4gICAgfVxuICAgICZfNHtcbiAgICAgICAgYW5pbWF0aW9uOiBvcGFjaXR5LTYwLTI1LTQtMTIgMS4yNXMgbGluZWFyIGluZmluaXRlO1xuICAgICAgICAmOmJlZm9yZXtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDEyMGRlZykgdHJhbnNsYXRlKDcuOTJweCwgMHB4KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAmXzV7XG4gICAgICAgIGFuaW1hdGlvbjogb3BhY2l0eS02MC0yNS01LTEyIDEuMjVzIGxpbmVhciBpbmZpbml0ZTtcbiAgICAgICAgJjpiZWZvcmV7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxNTBkZWcpIHRyYW5zbGF0ZSg3LjkycHgsIDBweCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJl82e1xuICAgICAgICBhbmltYXRpb246IG9wYWNpdHktNjAtMjUtNi0xMiAxLjI1cyBsaW5lYXIgaW5maW5pdGU7XG4gICAgICAgICY6YmVmb3Jle1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xuICAgICAgICB9XG4gICAgfVxuICAgICZfN3tcbiAgICAgICAgYW5pbWF0aW9uOiBvcGFjaXR5LTYwLTI1LTctMTIgMS4yNXMgbGluZWFyIGluZmluaXRlO1xuICAgICAgICAmOmJlZm9yZXtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDIxMGRlZykgdHJhbnNsYXRlKDcuOTJweCwgMHB4KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAmXzh7XG4gICAgICAgIGFuaW1hdGlvbjogb3BhY2l0eS02MC0yNS04LTEyIDEuMjVzIGxpbmVhciBpbmZpbml0ZTtcbiAgICAgICAgJjpiZWZvcmV7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgyNDBkZWcpIHRyYW5zbGF0ZSg3LjkycHgsIDBweCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJl85e1xuICAgICAgICBhbmltYXRpb246IG9wYWNpdHktNjAtMjUtOS0xMiAxLjI1cyBsaW5lYXIgaW5maW5pdGU7XG4gICAgICAgICY6YmVmb3Jle1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMjcwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xuICAgICAgICB9XG4gICAgfVxuICAgICZfMTB7XG4gICAgICAgIGFuaW1hdGlvbjogb3BhY2l0eS02MC0yNS0xMC0xMiAxLjI1cyBsaW5lYXIgaW5maW5pdGU7XG4gICAgICAgICY6YmVmb3Jle1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzAwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xuICAgICAgICB9XG4gICAgfVxuICAgICZfMTF7XG4gICAgICAgIGFuaW1hdGlvbjogb3BhY2l0eS02MC0yNS0xMS0xMiAxLjI1cyBsaW5lYXIgaW5maW5pdGU7XG4gICAgICAgICY6YmVmb3Jle1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzMwZGVnKSB0cmFuc2xhdGUoNy45MnB4LCAwcHgpO1xuICAgICAgICB9XG4gICAgfVxufVxuQC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtMC0xMiB7XG4gIDAlIHsgb3BhY2l0eTogMC4yNTsgfVxuICAwLjAxJSB7IG9wYWNpdHk6IDAuMjU7IH1cbiAgMC4wMiUgeyBvcGFjaXR5OiAxOyB9XG4gIDYwLjAxJSB7IG9wYWNpdHk6IDAuMjU7IH1cbiAgMTAwJSB7IG9wYWNpdHk6IDAuMjU7IH1cbn1ALXdlYmtpdC1rZXlmcmFtZXMgb3BhY2l0eS02MC0yNS0xLTEyIHtcbiAgMCUgeyBvcGFjaXR5OiAwLjI1OyB9XG4gIDguMzQzMzMlIHsgb3BhY2l0eTogMC4yNTsgfVxuICA4LjM1MzMzJSB7IG9wYWNpdHk6IDE7IH1cbiAgNjguMzQzMyUgeyBvcGFjaXR5OiAwLjI1OyB9XG4gIDEwMCUgeyBvcGFjaXR5OiAwLjI1OyB9XG59QC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtMi0xMiB7XG4gIDAlIHsgb3BhY2l0eTogMC4yNTsgfVxuICAxNi42NzY3JSB7IG9wYWNpdHk6IDAuMjU7IH1cbiAgMTYuNjg2NyUgeyBvcGFjaXR5OiAxOyB9XG4gIDc2LjY3NjclIHsgb3BhY2l0eTogMC4yNTsgfVxuICAxMDAlIHsgb3BhY2l0eTogMC4yNTsgfVxufUAtd2Via2l0LWtleWZyYW1lcyBvcGFjaXR5LTYwLTI1LTMtMTIge1xuICAwJSB7IG9wYWNpdHk6IDAuMjU7IH1cbiAgMjUuMDElIHsgb3BhY2l0eTogMC4yNTsgfVxuICAyNS4wMiUgeyBvcGFjaXR5OiAxOyB9XG4gIDg1LjAxJSB7IG9wYWNpdHk6IDAuMjU7IH1cbiAgMTAwJSB7IG9wYWNpdHk6IDAuMjU7IH1cbn1ALXdlYmtpdC1rZXlmcmFtZXMgb3BhY2l0eS02MC0yNS00LTEyIHtcbiAgMCUgeyBvcGFjaXR5OiAwLjI1OyB9XG4gIDMzLjM0MzMlIHsgb3BhY2l0eTogMC4yNTsgfVxuICAzMy4zNTMzJSB7IG9wYWNpdHk6IDE7IH1cbiAgOTMuMzQzMyUgeyBvcGFjaXR5OiAwLjI1OyB9XG4gIDEwMCUgeyBvcGFjaXR5OiAwLjI1OyB9XG59QC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtNS0xMiB7XG4gIDAlIHsgb3BhY2l0eTogMC4yNzA5NTgzMzMzMzMzMzM7IH1cbiAgNDEuNjc2NyUgeyBvcGFjaXR5OiAwLjI1OyB9XG4gIDQxLjY4NjclIHsgb3BhY2l0eTogMTsgfVxuICAxLjY3NjY3JSB7IG9wYWNpdHk6IDAuMjU7IH1cbiAgMTAwJSB7IG9wYWNpdHk6IDAuMjcwOTU4MzMzMzMzMzMzOyB9XG59QC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtNi0xMiB7XG4gIDAlIHsgb3BhY2l0eTogMC4zNzUxMjU7IH1cbiAgNTAuMDElIHsgb3BhY2l0eTogMC4yNTsgfVxuICA1MC4wMiUgeyBvcGFjaXR5OiAxOyB9XG4gIDEwLjAxJSB7IG9wYWNpdHk6IDAuMjU7IH1cbiAgMTAwJSB7IG9wYWNpdHk6IDAuMzc1MTI1OyB9XG59QC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtNy0xMiB7XG4gIDAlIHsgb3BhY2l0eTogMC40NzkyOTE2NjY2NjY2Njc7IH1cbiAgNTguMzQzMyUgeyBvcGFjaXR5OiAwLjI1OyB9XG4gIDU4LjM1MzMlIHsgb3BhY2l0eTogMTsgfVxuICAxOC4zNDMzJSB7IG9wYWNpdHk6IDAuMjU7IH1cbiAgMTAwJSB7IG9wYWNpdHk6IDAuNDc5MjkxNjY2NjY2NjY3OyB9XG59QC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtOC0xMiB7XG4gIDAlIHsgb3BhY2l0eTogMC41ODM0NTgzMzMzMzMzMzM7IH1cbiAgNjYuNjc2NyUgeyBvcGFjaXR5OiAwLjI1OyB9XG4gIDY2LjY4NjclIHsgb3BhY2l0eTogMTsgfVxuICAyNi42NzY3JSB7IG9wYWNpdHk6IDAuMjU7IH1cbiAgMTAwJSB7IG9wYWNpdHk6IDAuNTgzNDU4MzMzMzMzMzMzOyB9XG59QC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtOS0xMiB7XG4gIDAlIHsgb3BhY2l0eTogMC42ODc2MjU7IH1cbiAgNzUuMDElIHsgb3BhY2l0eTogMC4yNTsgfVxuICA3NS4wMiUgeyBvcGFjaXR5OiAxOyB9XG4gIDM1LjAxJSB7IG9wYWNpdHk6IDAuMjU7IH1cbiAgMTAwJSB7IG9wYWNpdHk6IDAuNjg3NjI1OyB9XG59QC13ZWJraXQta2V5ZnJhbWVzIG9wYWNpdHktNjAtMjUtMTAtMTIge1xuICAwJSB7IG9wYWNpdHk6IDAuNzkxNzkxNjY2NjY2NjY3OyB9XG4gIDgzLjM0MzMlIHsgb3BhY2l0eTogMC4yNTsgfVxuICA4My4zNTMzJSB7IG9wYWNpdHk6IDE7IH1cbiAgNDMuMzQzMyUgeyBvcGFjaXR5OiAwLjI1OyB9XG4gIDEwMCUgeyBvcGFjaXR5OiAwLjc5MTc5MTY2NjY2NjY2NzsgfVxufUAtd2Via2l0LWtleWZyYW1lcyBvcGFjaXR5LTYwLTI1LTExLTEyIHtcbiAgMCUgeyBvcGFjaXR5OiAwLjg5NTk1ODMzMzMzMzMzMzsgfVxuICA5MS42NzY3JSB7IG9wYWNpdHk6IDAuMjU7IH1cbiAgOTEuNjg2NyUgeyBvcGFjaXR5OiAxOyB9XG4gIDUxLjY3NjclIHsgb3BhY2l0eTogMC4yNTsgfVxuICAxMDAlIHsgb3BhY2l0eTogMC44OTU5NTgzMzMzMzMzMzM7IH1cbn1cbiIsIkBpbXBvcnQgXCIuLi8uLi9iYXNlL2ZuXCI7XG5cbi53ZXVpX21hc2sge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAxO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIC42KTtcbn1cblxuLndldWlfbWFza190cmFuc3BhcmVudCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDE7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xufVxuXG4ud2V1aV9tYXNrX3RyYW5zaXRpb257XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogMTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwKTtcbiAgICB0cmFuc2l0aW9uOmJhY2tncm91bmQgLjNzO1xufVxuLndldWlfZmFkZV90b2dnbGV7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwuNik7XG59IiwiQGltcG9ydCBcIi4uLy4uL2Jhc2UvZm5cIjtcbkBiZ0NvbG9yOiNFQ0VDRUM7XG4ud2V1aV9hY3Rpb25zaGVldCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwMCUpO1xuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICB6LWluZGV4OiAyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IEBwYWdlRGVmYXVsdEJhY2tncm91bmRDb2xvcjtcbiAgICAvL3NsaWRlIHVwIGFuaW1hdGlvblxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3M7XG59XG4ud2V1aV9hY3Rpb25zaGVldF9tZW51e1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG59XG4ud2V1aV9hY3Rpb25zaGVldF9hY3Rpb24ge1xuICAgIG1hcmdpbi10b3A6IDZweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xufVxuLndldWlfYWN0aW9uc2hlZXRfY2VsbCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDEwcHggMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgICY6YmVmb3JlIHtcbiAgICAgICAgLnNldFRvcExpbmUoQHdldWlDZWxsQm9yZGVyQ29sb3IpO1xuICAgIH1cbiAgICAmOmFjdGl2ZXtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQGJnQ29sb3I7XG4gICAgfVxuICAgICY6Zmlyc3QtY2hpbGR7XG4gICAgICAgICY6YmVmb3Jle1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy9hY3Rpb25TaGVldCBhbmlhbXRpb25cbi53ZXVpX2FjdGlvbnNoZWV0X3RvZ2dsZXtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKTtcbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
